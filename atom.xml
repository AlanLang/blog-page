<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Alan&#x27;s Blog</title>
	<link href="https://alanlang.me/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://alanlang.me"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2024-06-08T00:00:00+00:00</updated>
	<id>https://alanlang.me/atom.xml</id>
	<entry xml:lang="en">
		<title>使用 sing-box 代替 clash</title>
		<published>2024-06-08T00:00:00+00:00</published>
		<updated>2024-06-08T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/sing-box/" type="text/html"/>
		<id>https://alanlang.me/practical/sing-box/</id>
		<content type="html">&lt;p&gt;之前推荐了&lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;practical&#x2F;ros-rbc&#x2F;#jing-tai-lu-you-biao&quot;&gt;使用 Clash 来作为家里的透明网关&lt;&#x2F;a&gt;，但是由于 Clash 历史遗留问题较多, 而 sing-box 由于是新项目，所以其代码比较纯粹，也更加有想象空间，所以我决定尝试使用 sing-box 代替 clash。
sing-box 的安装很简单，照着官网的教程就可以了：https:&#x2F;&#x2F;sing-box.sagernet.org&#x2F;zh&#x2F;installation&#x2F;package-manager&#x2F;。
由于我只使用 sing-box 的代理功能，暂时不需要分流，所以我的配置也比较简单：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;log&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;disabled&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;level&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;info&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;timestamp&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;dns&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;servers&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
      {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;local-dns&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;address&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;192.168.1.1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;detour&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;direct&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
    ],
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;rules&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
      {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;outbound&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;any&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;server&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;local-dns&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
    ]
  },
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;inbounds&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
    {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;mixed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;mixed-in&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;listen&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;::&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;listen_port&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;8888&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;sniff&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tun&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tun-in&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;interface_name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;utun&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;inet4_address&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;172.19.0.1&#x2F;30&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;auto_route&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;stack&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;system&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;mtu&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;sniff&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
  ],
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;outbounds&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
    {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;selector&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Proxy&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;outbounds&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Japan 11&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;],
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;interrupt_exist_connections&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;shadowsocks&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Japan 11&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;server&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;xxxx&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;server_port&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;90&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, 
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;password&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;xxxx&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;method&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;aes-128-gcm&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;udp_over_tcp&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;direct&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;direct&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
  ],
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;route&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;rules&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [
      {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;ip_is_private&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;outbound&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;direct&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
    ],
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;auto_detect_interface&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;final&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Proxy&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;experimental&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;cache_file&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;enabled&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;cache.db&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;cache_id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;my_profile2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;store_fakeip&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;clash_api&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;external_ui&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;ui&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;external_controller&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;0.0.0.0:9090&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;external_ui_download_detour&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Proxy&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;default_mode&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;direct&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样就可以完全替代之前的 Clash 了。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ROS 搭配 Clash 彻底抛弃 OpenWrt</title>
		<published>2024-04-14T00:00:00+00:00</published>
		<updated>2024-04-14T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/ros-rbc/" type="text/html"/>
		<id>https://alanlang.me/practical/ros-rbc/</id>
		<content type="html">&lt;p&gt;之前自己一直在用主路由搭配旁路由的方式作为家里的网络架构，主路由为 MikroTik Routeros，旁路由为 OpenWrt。主路由通过设置 HDCP Options 给有需求的设备自动把网关和 DNS 指向旁路由。最终使用 VRRP 解决高可用的问题，防止旁路由下线时这些设备直接无法上网。&lt;&#x2F;p&gt;
&lt;p&gt;但是使用 OpenWrt 作为旁路由有很多不满意的地方：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;OpenWrt 系统很臃肿，即使自己编译精简了很多没用的包，但是用起来还是卡卡的&lt;&#x2F;li&gt;
&lt;li&gt;OpenWrt 系统无法平滑完成版本迭代，频繁升级导致重装系统很难受&lt;&#x2F;li&gt;
&lt;li&gt;OpenClash 不好用，每次修改配置都要重启，每次重启都好久&lt;&#x2F;li&gt;
&lt;li&gt;一旦把网关指向旁路由，设备的所有流量都会指向旁路由，导致常规流量变慢&lt;&#x2F;li&gt;
&lt;li&gt;旁路由网关互指导致多次 nat，性能不佳&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;所以一直想着去摒弃 OpenWrt，直到看到了一个大神做的 &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=eOr8yrp4KWk&quot;&gt;YouTube&lt;&#x2F;a&gt; 视频，发现这种方式很适合自己，所以趁着周末的时间重新搞了一下家里的网络。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2024&#x2F;04&#x2F;14&#x2F;8Fj2l61PheryuKA.webp&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;之前家里主路由设备用的是 MikroTik RB450Gx4，这次趁机也升级成了 MikroTik RB5009 UPr，该设备除了有一个 2.4G 的网口和 7 个千兆的网口之外，还有一个 SFP 接口，方便以后直接使用光猫，这次就先不折腾了。另外设备还支持 POE 输出，正好可以给家里的 AP 设备供电。虽然内存还是 1GB 但是 CPU 提升了很多，所以性能会比之前那个强很多。&lt;&#x2F;p&gt;
&lt;p&gt;那么我们来正式讲一下一种全新的分流方式：RBC&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yao-shi-rbc&quot;&gt;什么是 RBC&lt;&#x2F;h2&gt;
&lt;p&gt;RBC 其实就是 Routeros + BGP + Clash，即主路由系统 + 边界网关协议 + 透明网关&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2024&#x2F;04&#x2F;14&#x2F;lrwxNCpz35oSXdm.webp&quot; alt=&quot;image 1.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们的域名会通过 DNS 解析服务器转换为 IP 地址，ROS 则负责判断 IP 是否存在于静态路由表，如果存在的话它就会走透明网关（Clash），不存在的话就走我们的主路由。&lt;&#x2F;p&gt;
&lt;p&gt;为了做到上述的分流方式，我们的主要工作就是实现上图中的彩色部分。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dns-jie-xi-fu-wu-qi&quot;&gt;DNS 解析服务器&lt;&#x2F;h2&gt;
&lt;p&gt;视频里面使用的是 easy mosdns，而我自己则选择使用 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kkkgo&#x2F;PaoPaoDNS&quot;&gt;PaoPaoDNS&lt;&#x2F;a&gt;，并不是后者一定比前者好用，只是自己随便选择了一个。&lt;&#x2F;p&gt;
&lt;p&gt;PaoPaoDNS 的安装方式很简单，直接使用 Docker 可以安装，我个人是使用 PVE 单独创建了一台虚拟机，Docker 会用 host 网络模式已获得最佳性能。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;3&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;paopaodns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;sliamb&#x2F;paopaodns:latest
    container_name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;PaoPaoDNS
    restart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;always
    volumes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;.&#x2F;data:&#x2F;data
    environment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;TZ=Asia&#x2F;Shanghai
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;UPDATE=weekly
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;DNS_SERVERNAME=PaoPaoDNS,blog.03k.org
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;DNSPORT=53
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;SOCKS5=no
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;CNAUTO=yes
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;IPV6=no
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;CNFALL=yes
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;AUTO_FORWARD=no
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;CN_TRACKER=yes
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;SAFEMODE=no
    network_mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;host
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;DNS 解析服务器我设置的 IP 地址是 &lt;code&gt;192.168.1.2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tou-ming-wang-guan&quot;&gt;透明网关&lt;&#x2F;h2&gt;
&lt;p&gt;首先设置转发&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;echo &amp;#39;net.ipv4.ip_forward = 1&amp;#39; | sudo tee -a &#x2F;etc&#x2F;sysctl.conf
echo &amp;#39;net.ipv6.conf.all.forwarding = 1&amp;#39; | sudo tee -a &#x2F;etc&#x2F;sysctl.conf
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;透明网关我选择使用的是&lt;a href=&quot;https:&#x2F;&#x2F;wiki.metacubex.one&#x2F;&quot;&gt;虚空终端&lt;&#x2F;a&gt;，现在很多人也开始推荐 &lt;a href=&quot;https:&#x2F;&#x2F;sing-box.sagernet.org&#x2F;&quot;&gt;sing-box&lt;&#x2F;a&gt; 后续也可以切换试试。&lt;&#x2F;p&gt;
&lt;p&gt;虚空终端的安装教程官网很详细，照着官网安装就行。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;# 下载（注意版本）
wget https:&#x2F;&#x2F;github.com&#x2F;MetaCubeX&#x2F;mihomo&#x2F;releases&#x2F;download&#x2F;Prerelease-Alpha&#x2F;mihomo-linux-amd64-compatible-alpha-df01582.gz

# 解压缩
gunzip mihomo-linux-amd64-compatible-alpha-df01582.gz

# 重命名
mv mihomo-linux-amd64-compatible-alpha-df01582 clash

# 赋予执行权限
chmod +x clash

# 移动到 &#x2F;usr&#x2F;local&#x2F;bin
mv clash &#x2F;usr&#x2F;local&#x2F;bin

# 创建配置文件夹
mkdir -p &#x2F;etc&#x2F;clash
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置文件的内容如下 config.yaml&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;######### 锚点 start #######
# proxy 相关
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;pr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;默认&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;香港&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;台湾&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;日本&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;新加坡&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;美国&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;其它地区&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;全部节点&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;自动选择&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;DIRECT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#这里是订阅更新和延迟测试相关的
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;interval&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;health-check&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;enable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;http:&#x2F;&#x2F;www.google.com&#x2F;generate_204&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;interval&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;use
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;select
  use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;provider1

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;######### 锚点 end #######


# url 里填写自己的订阅,名称不能重复
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxy-providers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;provider1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;p
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;rule
ipv6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;log-level&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;info
allow-lan&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;mixed-port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;7890
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;unified-delay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;tcp-concurrent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;external-controller&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;0.0.0.0:9090
secret&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;123456789&amp;#39;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;geodata-mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;geox-url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;geoip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;fastly.jsdelivr.net&#x2F;gh&#x2F;MetaCubeX&#x2F;meta-rules-dat@release&#x2F;geoip.dat&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;geosite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;fastly.jsdelivr.net&#x2F;gh&#x2F;MetaCubeX&#x2F;meta-rules-dat@release&#x2F;geosite.dat&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;mmdb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;fastly.jsdelivr.net&#x2F;gh&#x2F;MetaCubeX&#x2F;meta-rules-dat@release&#x2F;country.mmdb&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;profile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;store-selected&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;store-fake-ip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;tracing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;sniffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;enable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;sniff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;TLS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;8443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;HTTP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;8080-8880&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;override-destination&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;interface-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;eth0
tun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;device&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;utun
  enable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;stack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;system
  auto-route&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;auto-detect-interface&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;false

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;dns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;enable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;listen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;:1053
  ipv6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;false
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;enhanced-mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;redir-host
  fake-ip-range&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;28.0.0.1&#x2F;8
  fake-ip-filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;*&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;+.lan&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;+.local&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;default-nameserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;192.168.1.2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;nameserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;192.168.1.2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxy-server-nameserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;192.168.1.2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;nameserver-policy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;geosite:cn,private&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;192.168.1.2

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# - name: &amp;quot;WARP&amp;quot;
  #   type: wireguard
  #   server: engage.cloudflareclient.com
  #   port: 2408
  #   ip: &amp;quot;172.16.0.2&#x2F;32&amp;quot;
  #   ipv6: &amp;quot;2606::1&#x2F;128&amp;quot;        # 自行替换
  #   private-key: &amp;quot;private-key&amp;quot; # 自行替换
  #   public-key: &amp;quot;public-key&amp;quot;   # 自行替换
  #   udp: true
  #   reserved: &amp;quot;abba&amp;quot;           # 自行替换
  #   mtu: 1280
  #   dialer-proxy: &amp;quot;dns&amp;quot;
  #   remote-dns-resolve: true
  #   dns:
  #     - https:&#x2F;&#x2F;dns.cloudflare.com&#x2F;dns-query

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxy-groups&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;默认&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;proxies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;DIRECT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;香港&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;台湾&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;日本&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;新加坡&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;美国&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;其它地区&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;全部节点&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;自动选择&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# - {name: dns, type: select, proxies: [DIRECT, WARP, 香港, 台湾, 日本, 新加坡, 美国, 其它地区, 全部节点, 自动选择]}  # 加入 WARP  
#分隔,下面是地区分组
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;香港&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)港|hk|hongkong|hong kong&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;台湾&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)台|tw|taiwan&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;日本&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)日本|jp|japan&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;美国&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)美|us|unitedstates|united states&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;新加坡&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)(新|sg|singapore)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;其它地区&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;全部节点&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

  - {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;自动选择&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;tolerance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;url-test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;rules&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOSITE,cn))),REJECT # quic

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;MATCH,默认
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;里面有几个配置需要注意一下&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;provider1 url 填入自己的订阅地址，如果有多个订阅可以自己加 provider&lt;&#x2F;li&gt;
&lt;li&gt;dns 里的地址替换成自己 DNS 解析服务器的地址&lt;&#x2F;li&gt;
&lt;li&gt;interface-name 设置为自己网卡的名称&lt;&#x2F;li&gt;
&lt;li&gt;tun 的 device 名称为 utun&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;继续把透明网关注册为系统服务并设置为开机自动启动&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;sudo tee &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;clash.service &amp;gt; &#x2F;dev&#x2F;null &amp;lt;&amp;lt;EOF
[Unit]
Description=Clash daemon, A rule-based proxy in Go.
After=network.target

[Service]
Type=simple
Restart=always
ExecStart=&#x2F;usr&#x2F;local&#x2F;bin&#x2F;clash -d &#x2F;etc&#x2F;clash

[Install]
WantedBy=multi-user.target
EOF

systemctl enable clash
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;透明网关我设置的 IP 地址为 &lt;code&gt;192.168.1.6&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jing-tai-lu-you-biao&quot;&gt;静态路由表&lt;&#x2F;h2&gt;
&lt;p&gt;静态路由表使用 nchnroutes 项目实现，每天 5 点自动生成最新路由表并通过 BGP 传递给 ROS。&lt;&#x2F;p&gt;
&lt;p&gt;安装 bird2&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;apt update
apt install bird2 -y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;非本地 ip 表获取&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;
# 下载 ip 表
wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;haotianlPM&#x2F;rosrbgprouter&#x2F;main&#x2F;iplist.sh
# 赋予执行权限
chmod +x iplist.sh
# 执行一次
.&#x2F;iplist.sh

# 配置定时执行
crontab -e
0 5 * * * &#x2F;bin&#x2F;bash &#x2F;home&#x2F;iplist.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置 bird2&lt;&#x2F;p&gt;
&lt;p&gt;修改 &lt;code&gt;bird2&lt;&#x2F;code&gt; 配置文件为以下内容 ，文件在 &lt;code&gt;&#x2F;etc&#x2F;bird&#x2F;bird.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;
log syslog all;

router id 192.168.1.6;

protocol device {
    scan time 60;
}

protocol kernel {
    ipv4 {
        import none;
        export all;
    };
}

protocol static {
    ipv4 {};
    include &amp;quot;routes4.conf&amp;quot;;
}

protocol bgp {
    local as 65531;
    neighbor 192.168.1.1 as 65530;
    source address 192.168.1.6;
    ipv4 {
        import none;
        export all;
    };
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;注意修改上述的 IP 地址。&lt;code&gt;192.168.1.6&lt;&#x2F;code&gt; 为透明网关的地址，&lt;code&gt;192.168.1.1&lt;&#x2F;code&gt; 为 ROS 路由器的地址。&lt;&#x2F;p&gt;
&lt;p&gt;查看 bird 执行状态&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;systemctl status bird
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;she-zhi-ros&quot;&gt;设置 ROS&lt;&#x2F;h2&gt;
&lt;p&gt;ROS 分流有两种方式，一种是所有设备都可以分流，另一种是可以指定设备进行分流，这边我推荐后者。&lt;&#x2F;p&gt;
&lt;p&gt;首先在 ROS 创建一个路由表，Routing → Tables，名字为 &lt;code&gt;bypass&lt;&#x2F;code&gt;，且勾选 FIB。&lt;&#x2F;p&gt;
&lt;p&gt;然后打开 ROS 的终端，执行：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;# 添加一条路由规则，距离为1，网关为pppoe-out1，路由表为bypass，注释为pass
&#x2F;ip route
add distance=1 gateway=pppoe-out1 routing-table=bypass comment=pass

# 添加一个BGP连接，名称为clash，本地角色为ebgp，远程地址为192.168.1.6，自治系统号为65531，路由表为bypass，路由器ID为192.168.1.1，自治系统号为65530，启用多跳选项
&#x2F;routing&#x2F;bgp&#x2F;connection
add name=clash local.role=ebgp remote.address=192.168.1.6 .as=65531 routing-table=bypass router-id=192.168.1.1 as=65530 multihop=yes

# 添加一个防火墙Mangle规则，动作为接受，链为prerouting，源地址为192.168.1.6
&#x2F;ip firewall mangle add action=accept chain=prerouting src-address=192.168.1.6
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;注意我的网关名称为 &lt;code&gt;pppoe-out1&lt;&#x2F;code&gt;，需要根据自己的实际设置修改名称。&lt;&#x2F;p&gt;
&lt;p&gt;这个时候在 ROS 的 IP → Routes 里面就可以看到传过来的一大堆 ip 地址了&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2024&#x2F;04&#x2F;14&#x2F;mAgqcY6SPwXT25e.webp&quot; alt=&quot;image 2.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;假设我有一个 ip 为 &lt;code&gt;192.168.1.100&lt;&#x2F;code&gt; 的设备想走分流，则需要继续设置：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;# 添加一个地址列表，名称为proxy，包含地址 192.168.1.100
&#x2F;ip firewall address-list add list=proxy address=192.168.1.100

# 添加一个防火墙Mangle规则，动作为标记路由，链为prerouting，源地址列表为proxy，连接类型tcp。目标端口为80和443，目标地址类型不是本地地址，新的路由标记为bypass
&#x2F;ip firewall mangle add action=mark-routing chain=prerouting src-address-list=proxy dst-port=80,443 dst-address-type=!local protocol=tcp new-routing-mark=bypass
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这是 &lt;code&gt;192.168.1.100&lt;&#x2F;code&gt; 的设备就已经可以成功分流了。&lt;&#x2F;p&gt;
&lt;p&gt;如果想继续添加其他分流设备，可以继续执行：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;# 添加一个地址列表，名称为proxy，包含地址 192.168.1.101
&#x2F;ip firewall address-list add list=proxy address=192.168.1.101
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;或者直接通过可视化界面进行添加，在 IP → Firewall，选择 Address Lists 选项卡，这个时候能看到我们已经添加过的 IP，这个时候继续添加就行了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-jian-yu-dao-de-yi-xie-wen-ti&quot;&gt;期间遇到的一些问题&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ip-biao-wu-fa-tong-bu-dao-ros-li&quot;&gt;IP 表无法同步到 ROS 里&lt;&#x2F;h3&gt;
&lt;p&gt;当时定位这个问题甚至花费了 1 天的时候，Routing → BGP → Sessions 里面能正常看到设备，bird 执行 &lt;code&gt;birdc show protocols&lt;&#x2F;code&gt; 也显示正常，但是 ROS 里就是看不到同步的数据，最终才发现是我 clash 的配置里 tun 的设备名字不叫 utun 导致的，而下载的 ip 表是写的下一跳是 utun，而找不到设备导致无法同步。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-xian-gao-ke-yong&quot;&gt;实现高可用&lt;&#x2F;h2&gt;
&lt;p&gt;参考&lt;a href=&quot;https:&#x2F;&#x2F;idndx.com&#x2F;high-availability-when-split-routing-using-routeros-and-raspberrypi&#x2F;&quot;&gt;这篇文章&lt;&#x2F;a&gt;，整个系统创建好后，带来的问题就是 DNS 解析服务器的问题，因为我们所有的设备都会走 DNS 解析服务器，一旦 DNS 挂了大家就都不能上网了，所以需要实现故障检测功能，当 DNS 服务器挂了需要自动切换到 ROS 自己的 DNS 服务。&lt;&#x2F;p&gt;
&lt;p&gt;具体的做法就是创建两条脚本，一条切换 DNS 地址为 &lt;code&gt;192.168.1.2&lt;&#x2F;code&gt;，另一条切换为运营商的递归 DNS 地址，比如 &lt;code&gt;114.114.114.114&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;system&#x2F;script
add dont-require-permissions=yes name=use-paopao-dns source=\
&amp;quot;&#x2F;ip&#x2F;dns&#x2F;set servers=192.168.0.2\
\n&#x2F;ip&#x2F;dns&#x2F;cache&#x2F;flush&amp;quot;
add dont-require-permissions=yes name=use-ct-dns source=\
&amp;quot;&#x2F;ip&#x2F;dns&#x2F;set servers=114.114.114.114\
\n&#x2F;ip&#x2F;dns&#x2F;cache&#x2F;flush
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里的 &lt;code&gt;dont-require-permissions=yes&lt;&#x2F;code&gt; 是必须的，否则 &lt;a href=&quot;https:&#x2F;&#x2F;wiki.mikrotik.com&#x2F;wiki&#x2F;Manual:Tools&#x2F;Netwatch?ref=idndx.com&quot;&gt;Netwatch&lt;&#x2F;a&gt; 执行的时候会报权限错误。&lt;&#x2F;p&gt;
&lt;p&gt;然后配置 Netwatch 来检测 DNS 服务器的地址，如果宕机就自定执行脚本切换 DNS。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;tool&#x2F;netwatch
add down-script=use-ct-dns host=192.168.1.2 interval=30s up-script=use-paopao-dns
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;te-bie-gan-xie-yi-xia-jiao-cheng&quot;&gt;特别感谢以下教程&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=eOr8yrp4KWk&quot;&gt;ROS搭配Clash，彻底抛弃openwrt，配合无污染DNS进行IP分流&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;idndx.com&#x2F;high-availability-when-split-routing-using-routeros-and-raspberrypi&#x2F;&quot;&gt;RouterOS 国内外分流环境下的网络高可用性设计&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>2023 年度总结</title>
		<published>2024-01-22T00:00:00+00:00</published>
		<updated>2024-01-22T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/2023/" type="text/html"/>
		<id>https://alanlang.me/practical/2023/</id>
		<content type="html">&lt;h2 id=&quot;xi-ying-xin-sheng-ming&quot;&gt;喜迎新生命&lt;&#x2F;h2&gt;
&lt;p&gt;2023 年对我最大的改变就是家里迎接了新生命的到来，果果，我愿意一生呵护的小公主出生啦。而且最最幸福的是她跟我是同一天农历生日，感觉是冥冥之中的注定。虽然孩子的存在会占据我大部分的个人时间，几乎失去了所有的娱乐活动，但是看着她一天天的长大，一天天的变化，我觉得这是值得的，也是我最大的幸福。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ying-yin-you-xi&quot;&gt;影音游戏&lt;&#x2F;h2&gt;
&lt;p&gt;由于需要带娃，所以个人娱乐时间几乎没有了，老婆怀孕的时候和老婆一起打了一段时间的《星露谷物语》，后面孩子出生以后就再也没有玩过任何游戏了，甚至都没有去电影院看过电影。唯一有一次在回老家的高铁路上看了《画江湖之天罡》，感觉还不错。另外《少年歌行》在继续更新，但是感觉越来越不好看，后面就没有计算看下去。不过《暗河传》的动漫感觉还可以。《咒术回战》也攒了好多没有看，没办法根本没有时间。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yue-du&quot;&gt;阅读&lt;&#x2F;h2&gt;
&lt;p&gt;今年本来打算要好好读书的，所以入手了一款文石的阅读器，但是买了之后就一直吃灰，甚至都不能作为泡面盖（因为太大了）。主要的原因还是没有时间，确切得说是没有完整的连续时间，全是一些碎片化的时间被手机消耗掉了。这也是明年自己要改进的地方，要把碎片化的时间利用起来，争取多看几本书。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;edc-he-dao&quot;&gt;EDC 和刀&lt;&#x2F;h2&gt;
&lt;p&gt;一次偶然的机会（好像是在小破站看了某个陀螺的视频），让我对这种金属类的东西产生了浓厚的兴趣，经过慢慢的接触了解，也开始自己的 EDC 之旅。今年买的第一个 EDC 玩具就是 mot 家的圣谕，不管是造型还是联动效果都很喜欢。一开始买了一把不锈钢做旧的，后面又买了一把钛云纹的。接着又了解到了 mot 家的律动推牌，当时正值锆律动快要发车了，于是趁着上车了一个锆黑的暴躁兔和一个锆彩的暴躁兔，这也是今年我唯一赶的官方车而不是买二手的两个 EDC 了。后面锆律动塞尔达也很好看，所以也加价收了一个，并给它们做了贝母封晶还编制了刀坠，一开始是找别人编的刀坠，后来慢慢发现这个很简单，所有现在也会自己编了。随着对 EDC 圈接触的深入，也加了不少群，同时了解到了当前 EDC 的四大神物：躁动、嘉年华、阿祖、湖中剑。这四个目前已经被炒出了天价，最终没有抵住诱惑，买了一个锆抛的躁动，不过实在太重了，根本无法随身携带。后面通过 EDC 也慢慢接触了刀圈，最一开始接触的就是&lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;practical&#x2F;chuangsheng&#x2F;&quot;&gt;创生&lt;&#x2F;a&gt;，这把与其说是刀，更像是 EDC 玩具。后面发现 tinb 家的&lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;practical&#x2F;berserker&#x2F;&quot;&gt;暴徒折刀&lt;&#x2F;a&gt;不错，虽然二手价格也是天价，但是还是买了一把黑白碳石英的暴徒和一把钛撒金贴片的暴徒。除了刀今年还买了两把金属的扇子，最喜欢的还是那把太阳神雕金的，虽然价格不菲，但是真的是漂亮。后面也买了一些其他小玩意，比如单刀家的小神锋2，游龙推牌等等。总的来说，今年的 EDC 之旅还是很开心的，虽然也花了不少钱，但是基本上出二手都能回本甚至小赚一点，但是今年买的玩具有点多了，后面要多看少买，只买自己喜欢的，比如这几天 GoBigger 家的嘭仔发车，我觉得不喜欢，所以就没有上车。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;neng-li-ti-sheng&quot;&gt;能力提升&lt;&#x2F;h2&gt;
&lt;p&gt;最近看到了一篇内容很符合我现在的状态：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;是的，毫无疑问的进入了深水区，站在29岁的当下，我不由的发现，技术的学习对于我来说似乎到了一个新的瓶颈。我需要更多的去思考，去理解，去实践，去总结。而且期间有一件事对于我来说是致命的:&lt;br &#x2F;&gt;做的事情没有办法很快的见效&lt;br &#x2F;&gt;是的。我现在学习，去体验很多的很多东西，他们的结果可能需要以周或者月乃至季度为单位才能看到。这对于我来说无疑是一个巨大的挑战。我在此期间会不断的进入一个焦虑，与自我怀疑的状态。质疑自己是否还能继续走下去，质疑自己是不是一个垃圾。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;是的，感觉就是在描述我自己，唯一的区别是我无法准确得表达出来。感觉主要原因是自己这两年学习变少了，越来越多的碎片化时间被白白浪费掉了。所以新的一年要更加注意多一些有体系的学习。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-nian-zhan-wang&quot;&gt;新年展望&lt;&#x2F;h2&gt;
&lt;p&gt;2024 年我希望自己能够更加努力的工作，为了家庭的幸福而努力。同时也希望自己能够多看书，多学习，多思考，多总结，多分享。希望自己能够在 2024 年有所成长，有所收获。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>给博客添加热力图</title>
		<published>2024-01-19T00:00:00+00:00</published>
		<updated>2024-01-19T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/add-heatmap-to-blog/" type="text/html"/>
		<id>https://alanlang.me/practical/add-heatmap-to-blog/</id>
		<content type="html">&lt;p&gt;看了&lt;a href=&quot;https:&#x2F;&#x2F;blog.douchi.space&#x2F;hugo-blog-heatmap&#x2F;#gsc.tab=0&quot;&gt;椒盐豆豉&lt;&#x2F;a&gt;的博客，发现他博客中的热力图挺不错的，所以也想自己整一个，但是由于自己博客使用的是 &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; 而不是 Hugo，所以就只能自己写了一个了。其实原理很简单，只要能获取博客的数据，并且能够将数据可视化就可以了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;huo-qu-bo-ke-shu-ju&quot;&gt;获取博客数据&lt;&#x2F;h3&gt;
&lt;p&gt;通过查看 &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; 的文档，是可以通过 &lt;code&gt;get_section()&lt;&#x2F;code&gt; 函数获取指定目录下的所有文章的，但是这个函数只能在模板中使用，那么该怎么把数据让 js 获取到呢？看了原作者的做法是直接在这个页面里把文章的数据赋值给了 js 变量，这样做带来的问题作者也提到了，就是会影响当前页面的字数统计，所以我选择单独创建一个页面，只用来生成博客数据，数据格式为 json，然后在需要的页面中通过 js 获取这个 json 文件的数据就可以。&lt;&#x2F;p&gt;
&lt;p&gt;生成 json 文件的模板：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{% set section_item = get_section(path=&amp;quot;_index.md&amp;quot;) -%}
{
  &amp;quot;pages&amp;quot;: [
    {% for page in section_item.pages %}
      {
        &amp;quot;title&amp;quot;: &amp;quot;{{ page.title | safe }}&amp;quot;,
        &amp;quot;date&amp;quot;: &amp;quot;{{ page.date }}&amp;quot;,
        &amp;quot;year&amp;quot;: &amp;quot;{{ page.year }}&amp;quot;,
        &amp;quot;word_count&amp;quot;: &amp;quot;{{ page.word_count }}&amp;quot;
      }{% if not loop.last %},{% endif %}
    {% endfor %}
  ]
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;获取数据的 js 代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;site &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fetch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&#x2F;site&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;blogInfo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;site&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;blogInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;具体 &lt;code&gt;get_section()&lt;&#x2F;code&gt; 返回的数据类型为：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Section &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Config
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;current_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;current_url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Page
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Config &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;base_url&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;languages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Languages
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;default_language&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;generate_feed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;feed_filename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;taxonomies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Taxonomy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;author&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;build_search_index&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;extra&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extra
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Markdown
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Languages &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Taxonomy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;slug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;paginate_by&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;paginate_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;feed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extra &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Markdown &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;highlight_code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;highlight_theme&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;highlight_themes_css&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;render_emoji&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;external_links_target_blank&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;external_links_no_follow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;external_links_no_referrer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;smart_punctuation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;extra_syntaxes_and_themes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;relative_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;colocated_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;permalink&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;slug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ancestors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;updated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;year&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;month&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;day&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;taxonomies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Taxonomies
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;authors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;extra&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extra2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;components&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;toc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Toc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;word_count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;reading_time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;assets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;draft&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;boolean
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lower&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;higher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;backlinks&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Taxonomies &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extra2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Toc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;level&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;permalink&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;gen-ju-shu-ju-xuan-ran-re-li-tu&quot;&gt;根据数据渲染热力图&lt;&#x2F;h3&gt;
&lt;p&gt;不管是 &lt;a href=&quot;https:&#x2F;&#x2F;echarts.apache.org&#x2F;examples&#x2F;en&#x2F;editor.html?c=calendar-horizontal&quot;&gt;echarts&lt;&#x2F;a&gt; 还是 &lt;a href=&quot;https:&#x2F;&#x2F;g2.antv.antgroup.com&#x2F;examples&#x2F;general&#x2F;cell&#x2F;#cell-aggregated&quot;&gt;G2&lt;&#x2F;a&gt; 都可以根据数据渲染热力图, 但是由于从来没有接触过这两个库，所以好多配置都不了解，不想再花太多的时间去学习，最终发现了一个开箱即用的日期类热力图的工具 &lt;a href=&quot;https:&#x2F;&#x2F;cal-heatmap.com&#x2F;&quot;&gt;Cal-Heatmap&lt;&#x2F;a&gt; 看着还挺不错的，而且文档也很全，所以就选择了这个。具体配置参考这个 &lt;a href=&quot;https:&#x2F;&#x2F;cal-heatmap.com&#x2F;docs&#x2F;showcase#github-profile-contribution-like&quot;&gt;demo&lt;&#x2F;a&gt; 既可，具体代码如下：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fetch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&#x2F;site&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;res &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;res&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;res &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;res&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;endsWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;script&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)) {
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;replace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c49a39;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;\r\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c49a39;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;blogInfo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#da5d42;&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;blogInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;CalHeatmap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;today &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 获取今天的日期
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;thirteenMonthsAgo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;today&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;setMonth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;today&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getMonth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 计算13个月前的日期
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;paint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;({
    range: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    scale: {
      color: {
        type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;threshold&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        range: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;#14432a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;#166b34&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;#37a446&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;#4dd05a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;],
        domain: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;],
      },
    },
    domain: {
      type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;month&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      gutter: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      label: { text: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;MMM&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, textAlign: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;start&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, position: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;top&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    },
    subDomain: { type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;ghDay&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, radius: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, width: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, height: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, gutter: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
    date: {
      start: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;thirteenMonthsAgo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    },
    data: { source: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;blogInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;date&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;word_count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }, groupY: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;sum&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;},
  });
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Now</title>
		<published>2024-01-18T00:00:00+00:00</published>
		<updated>2024-01-18T00:00:00+00:00</updated>
		<link href="https://alanlang.me/now/" type="text/html"/>
		<id>https://alanlang.me/now/</id>
		<content type="html">&lt;h2 id=&quot;jin-kuang&quot;&gt;近况&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;👷 把博客再完善一下&lt;&#x2F;li&gt;
&lt;li&gt;📚 &lt;a href=&quot;https:&#x2F;&#x2F;book.douban.com&#x2F;subject&#x2F;36518892&#x2F;&quot;&gt;埃隆·马斯克传&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📚 &lt;a href=&quot;https:&#x2F;&#x2F;book.douban.com&#x2F;subject&#x2F;36573581&#x2F;&quot;&gt;十日终嫣&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🧑‍💻 Dashboard 公共模块&lt;&#x2F;li&gt;
&lt;li&gt;🧑‍💻 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlanLang&#x2F;calendar&quot;&gt;Calendar&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🎬 &lt;a href=&quot;https:&#x2F;&#x2F;movie.douban.com&#x2F;subject&#x2F;35524249&#x2F;&quot;&gt;蓝眼武士第一季&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🎬 &lt;a href=&quot;https:&#x2F;&#x2F;movie.douban.com&#x2F;subject&#x2F;36117913&#x2F;&quot;&gt;师兄啊师兄&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🍼 带娃&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zhuang-bei&quot;&gt;装备&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;📱 iPhone 13 mini&lt;&#x2F;li&gt;
&lt;li&gt;💻 Mac Studio M2 Ultra 128GB&lt;&#x2F;li&gt;
&lt;li&gt;🖥️ Dell U4021QW&lt;&#x2F;li&gt;
&lt;li&gt;⌨️ Matrix Magic3 Edition 60%&lt;&#x2F;li&gt;
&lt;li&gt;🖱️ Glorious Model O&lt;&#x2F;li&gt;
&lt;li&gt;🎧 AirPods Pro&lt;&#x2F;li&gt;
&lt;li&gt;📚 文石 BOOX Tab13&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-s-new&quot;&gt;What’s new&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2024-02-18&lt;&#x2F;code&gt; 增加装备栏目&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;2024-01-18&lt;&#x2F;code&gt; 添加 &lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;now&quot;&gt;Now&lt;&#x2F;a&gt; 页面&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>TINB-暴徒</title>
		<published>2024-01-05T00:00:00+00:00</published>
		<updated>2024-01-05T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/berserker/" type="text/html"/>
		<id>https://alanlang.me/practical/berserker/</id>
		<content type="html">&lt;p&gt;暴徒是 TINB 家的第二款折刀，相比于第一款游侠，暴徒的造型更加张扬，个人感觉也更好看。我手上这把折刀是黑白碳石英贴片，夹铜刀刃，整个刀身看上去犹如一副美丽的中国水墨画，十分有意境。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2024&#x2F;01&#x2F;07&#x2F;dgaHKwPuskAIyWR.png&quot; alt=&quot;IMG_3644.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>雨镜-创生</title>
		<published>2024-01-01T00:00:00+00:00</published>
		<updated>2024-01-01T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/chuangsheng/" type="text/html"/>
		<id>https://alanlang.me/practical/chuangsheng/</id>
		<content type="html">&lt;p&gt;入手的第一把刀，由雨镜大佬设计创作。雨镜真的是一位天才设计师，才救赎到创生，每把刀都有着自己独特的魅力，且二级市场溢价严重。
创生是非常独特的一把折刀，与其说是刀，其实更像一个 EDC 玩具，因为它自带音叉，在展开和收起的时候都能带动音叉震动，发出悦耳的声音。另外令人震撼的是其变形的功能，通过转动对锁可以切换刀刃的形状，在刚开始看到它变形的视频的时候就被它深深吸引了，另外再加上一豆对刀身的雕刻创作，简直是画龙点睛。非常适合把玩和收藏。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2023&#x2F;12&#x2F;12&#x2F;wlLx2TvDsSEkyWd.jpg&quot; alt=&quot;IMG_3644.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2023&#x2F;12&#x2F;12&#x2F;5M6vK3pGXditrkQ.jpg&quot; alt=&quot;IMG_3645.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My default apps at the end of 2023</title>
		<published>2023-11-20T00:00:00+00:00</published>
		<updated>2023-11-20T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/my-apps-at-2023/" type="text/html"/>
		<id>https://alanlang.me/practical/my-apps-at-2023/</id>
		<content type="html">&lt;p&gt;最近发现了一个有趣的 Github 项目：&lt;a href=&quot;https:&#x2F;&#x2F;defaults.rknight.me&#x2F;&quot;&gt;App Defaults&lt;&#x2F;a&gt;，这是一个博客作者们的主力软件清单。Robb 将作者们的文章链接和 RSS feed 聚合成了一个 OPML 文件，方便订阅。
快到年底了，我也分享一些自己喜欢的工具。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;📨 Mail Client: &lt;a href=&quot;https:&#x2F;&#x2F;sparkmailapp.com&#x2F;&quot;&gt;Spark&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📮 Mail Server: &lt;a href=&quot;https:&#x2F;&#x2F;mail.google.com&#x2F;&quot;&gt;Gmail&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📝 Notes: &lt;a href=&quot;https:&#x2F;&#x2F;heptabase.com&#x2F;&quot;&gt;Heptabase&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;✅ To-Do: &lt;a href=&quot;https:&#x2F;&#x2F;culturedcode.com&#x2F;things&#x2F;&quot;&gt;Things 3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📷 Photo Shooting: Apple Camera&lt;&#x2F;li&gt;
&lt;li&gt;🌅 Photo library: &lt;a href=&quot;https:&#x2F;&#x2F;www.synology.com&#x2F;en-us&#x2F;dsm&#x2F;feature&#x2F;photos&quot;&gt;Synology Photos&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📁 Cloud File Storage: &lt;a href=&quot;https:&#x2F;&#x2F;www.synology.cn&#x2F;zh-cn&#x2F;dsm&#x2F;feature&#x2F;drive&quot;&gt;Synology Drive&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📖 RSS: &lt;a href=&quot;https:&#x2F;&#x2F;readwise.io&#x2F;read&quot;&gt;Readwise Reader&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🙍🏻‍♂️ Contacts: Apple Contacts&lt;&#x2F;li&gt;
&lt;li&gt;🌐 Browser: Chrome and Safari&lt;&#x2F;li&gt;
&lt;li&gt;💬 Chat: Telegram and Wechat&lt;&#x2F;li&gt;
&lt;li&gt;🔖 Bookmarks: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sissbruecker&#x2F;linkding&quot;&gt;linkding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;📑 Read It Later: &lt;a href=&quot;https:&#x2F;&#x2F;readwise.io&#x2F;read&quot;&gt;Readwise Reader&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🎶 Music: &lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;&quot;&gt;Spotify&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;💰 Personal Finance: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;beancount&#x2F;beancount&quot;&gt;Beancount&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🔐 Passwords: &lt;a href=&quot;https:&#x2F;&#x2F;bitwarden.com&#x2F;&quot;&gt;Bitwarden&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🖼️ Screenshots: &lt;a href=&quot;https:&#x2F;&#x2F;cleanshot.com&#x2F;&quot;&gt;CleanShot X&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🎞️ Video editing: &lt;a href=&quot;https:&#x2F;&#x2F;www.apple.com&#x2F;final-cut-pro&#x2F;&quot;&gt;Final Cut Pro&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🧮 Code Editor: &lt;a href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;&quot;&gt;Visual Studio Code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🗄 Database Management: &lt;a href=&quot;https:&#x2F;&#x2F;tableplus.com&#x2F;&quot;&gt;TablePlus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;👨🏻‍💻 Terminal: &lt;a href=&quot;https:&#x2F;&#x2F;iterm2.com&#x2F;&quot;&gt;Iterm2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;🪄 Launcher: &lt;a href=&quot;https:&#x2F;&#x2F;www.raycast.com&#x2F;&quot;&gt;Raycast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;⌨️ Text input: &lt;a href=&quot;https:&#x2F;&#x2F;rime.im&#x2F;&quot;&gt;Rime&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;以上就是我在 2023 年使用的主力软件。感谢您查看我的默认 app 列表！如果你想分享你的清单，我很乐意看到。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>CSS 中的样式计算</title>
		<published>2023-11-15T00:00:00+00:00</published>
		<updated>2023-11-15T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/css/css-computing-style/" type="text/html"/>
		<id>https://alanlang.me/codes/css/css-computing-style/</id>
		<content type="html">&lt;p&gt;我想大家都深有体会，书写 CSS 是一件很痛苦的事情，几乎每个前端开发着都不想去写 CSS，所以为了方便我们去写 CSS 社区出现了各种各样的框架，比如用来 LESS 和 SASS，或者推崇 CSS in JS 的 Styled Component，或者基于原子化概念实现的 Tailwind CSS 和 UnoCSS。这些确实能简化我们的工作，但是不管以何种方式，最终到浏览器那边都还是最原始的样式表，所以了解 CSS 的基础知识对我们来说也十分重要。&lt;&#x2F;p&gt;
&lt;p&gt;在 CSS 里面有两个非常关键的知识&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;样式计算 （Computing Style）&lt;&#x2F;li&gt;
&lt;li&gt;视觉格式化模型（Visual Formatting Model）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;学 CSS 这两个东西搞定了基本就差不多了，其他的都是些边角料了。别看那些 CSS3 的属性一大堆，都是边角料。但是如果这两块没有掌握的话，那就相当于 CSS 没有掌握，不管你写了多少年的 CSS 就是没有掌握。我们这次主要把样式计算一起过一遍，这里面的东西很多，大家也可以做一个自我检查，看一下这里面自己还有哪些东西没有搞清楚。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    CSS 的样式计算是浏览器渲染原理其中的一环。
&lt;&#x2F;aside&gt;
&lt;p&gt;CSS 样式计算又称 CSS 属性值的计算过程。什么叫 CSS 属性值的计算过程？它指的就是任何一个 HTML 元素，它从所有的 CSS 属性都没有值，到它所有的 CSS 属性都有值，中间需要有一个计算过程。而这个计算过程就叫作 CSS 属性值的计算过程。有的同学可能有以为，哪些 CSS 属性有值不是我们自己写的吗？只要我写了就会有值，没写的就不会有。其实不是这样的，我们随便找一个元素，打开控制台，切换到 Computed 标签下面，勾选 show all，这些就是它所有的计算属性，你说哪一个没有值？都有。浏览器必须要保证所有的 CSS 属性全部都有值，它才能显示。就是 W3C 上官网上有多少个 CSS 属性，那么这个元素就必须要保证每个属性都有值。而我们这次要研究的，就是浏览器是如何来确定每一个属性值的。浏览器确定每个 CSS 属性值的过程，就称为 CSS 属性值的计算过程。整个计算过程共分成了四个步骤：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;确定声明值&lt;&#x2F;li&gt;
&lt;li&gt;层叠&lt;&#x2F;li&gt;
&lt;li&gt;继承&lt;&#x2F;li&gt;
&lt;li&gt;默认&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;我们通过下面这个例子，来看一下 CSS 属性值计算的这四步都在做什么。
&lt;a href=&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-uvpmb2?file=index.html,index.ts,style.css&quot;&gt;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-uvpmb2?file=index.html,index.ts,style.css&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;样式&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;color&lt;&#x2F;td&gt;&lt;td&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;text-align&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-size&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;background-color&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-weight&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;display&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其他&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;que-ding-sheng-ming-zhi&quot;&gt;确定声明值&lt;&#x2F;h2&gt;
&lt;p&gt;有一个 h1 元素，浏览器为了确定它的每一个 CSS 的值，它会首先看样式表，样式表一共有两个：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作者样式表&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;浏览器默认样式表&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;作者样式表很容易理解，就是这个页面的作者，也就是我们写的样式表，另外一个就是浏览器的默认样式表，浏览器是有默认样式的。比如这个 h1 元素，浏览器会给它一些默认样式。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;11&#x2F;25&#x2F;D5cK7WG3lHyrRI4.webp&quot; alt=&quot;demo.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;顺便说一句，大家看这个 h1 里的默认样式里面写了一个 &lt;code&gt;display: block&lt;&#x2F;code&gt; 因此它会独占一行。并不是因为 h1 是一个块级元素，能不能独占一行看的不是 HTML 是什么，而是看 CSS 是什么，我们应该这样说：h1 元素在默认情况下生成块盒。这才是最准确的说法，不过这是说法的问题，大家懂什么意思就行，不过大家以后在描述东西的时候，也应该尽量描述准确。&lt;&#x2F;p&gt;
&lt;p&gt;不管是作者样式表还是浏览器默认样式表，这里面写的东西都叫作声明值，在这些样式里面，浏览器要先去找哪些样式是没有冲突的，没有冲突的意思是针对这个 h1 元素它应用的样式没有重复的，这个例子中没有冲突的有哪些？有 &lt;code&gt;color&lt;&#x2F;code&gt; &lt;code&gt;display &lt;&#x2F;code&gt;和 &lt;code&gt;font-weight&lt;&#x2F;code&gt; 找到这些没有冲突的，直接生成的它的结果样式表里面。顺便说一句这边的计算还会做一件事情就是把那些相对单位换算成绝对单位，比如字体大小的 2em，把预设值换算成绝对值，比如 bold 换算成 700，red 换算成 RGB 值。&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;样式&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;color&lt;&#x2F;td&gt;&lt;td&gt;rgb(255, 0, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-size&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;background-color&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-weight&lt;&#x2F;td&gt;&lt;td&gt;700&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;display&lt;&#x2F;td&gt;&lt;td&gt;block&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;text-align&lt;&#x2F;td&gt;&lt;td&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其他&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;总结一下这就是第一步，把样式表里面没有冲突的确定下来。&lt;&#x2F;p&gt;
&lt;p&gt;下面是第二步：层叠&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ceng-die&quot;&gt;层叠&lt;&#x2F;h2&gt;
&lt;p&gt;层叠是 CSS 中非常重要的概念，这个概念有多重要呢？CSS 就叫作层叠样式表（Cascading Style Sheets）。层叠只做了一件事，那就是解决冲突。我们在第一步中已经搞定了哪些没有冲突的样式。那些有冲突的怎么办？&lt;&#x2F;p&gt;
&lt;p&gt;有些同学不知道在哪里看到文章会说到有权重，会说 ID 选择器大于类选择器，类选择器大于元素选择器，通过这样记是非常肤浅的。有好多复杂的场景是很难通过这个规则讲清楚，而且 CSS 的官方文档中也从来没有说过权重这个词，而是通过下面这三步来解决冲突。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;比较重要性&lt;&#x2F;li&gt;
&lt;li&gt;比较特定性&lt;&#x2F;li&gt;
&lt;li&gt;比较源次序&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;解决冲突的其实就是一个吃鸡游戏，上面三步就是按照顺序一层一层的筛选，最终只剩下一个其他的全部淘汰。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bi-jiao-zhong-yao-xing&quot;&gt;比较重要性&lt;&#x2F;h3&gt;
&lt;p&gt;作者样式表 &lt;code&gt;!important&lt;&#x2F;code&gt; &amp;gt; 默认样式表 &lt;code&gt;!important&lt;&#x2F;code&gt; &amp;gt; 作者样式表 &amp;gt; 默认样式表&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;11&#x2F;25&#x2F;FgVPCzTtqaIWbMv.webp&quot; alt=&quot;CleanShot 2023-10-23 at 19.03.36@2x.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;比如 &lt;a href=&quot;https:&#x2F;&#x2F;typescript-djonux.stackblitz.io&quot;&gt;这个&lt;&#x2F;a&gt; 例子中，按照我们之前的理解 &lt;code&gt;*&lt;&#x2F;code&gt; 应该是权重最低的，但是为什么样式会覆盖掉元素选择器呢？因为下面这个是浏览器的默认样式表。所以这个时候根本就还没有去看各种选择器权重之类的，第一步就是去看重要性，如果第一步通过重要性就已经比较出来了，就没必要再执行后面的过程。&lt;&#x2F;p&gt;
&lt;p&gt;所以一旦我们在作者样式表里面加了 &lt;code&gt;!important&lt;&#x2F;code&gt;，它的重要性就会变成最高。这也就是我们尽量不要使用 &lt;code&gt;!important&lt;&#x2F;code&gt; 的原因，因为一旦加了这个别人就很难覆盖掉它，除非再加一个 &lt;code&gt;!important&lt;&#x2F;code&gt;，那么到最后整个工程就会充斥者各种各样的 &lt;code&gt;!important&lt;&#x2F;code&gt; 导致样式表难以维护。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bi-jiao-te-ding-xing&quot;&gt;比较特定性&lt;&#x2F;h3&gt;
&lt;p&gt;在上一步重要性比较完成之后，如果还有冲突，会进入特定性（&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;CSS&#x2F;Specificity&quot;&gt;Specificity&lt;&#x2F;a&gt;）的比较。特定性算出来的结果会是 4 个数字，比较的方式是从第一位开始比较取大的那一个，如果相同则比较下一位。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;第一位: 内联：1 &#x2F; 否则：0&lt;&#x2F;li&gt;
&lt;li&gt;第二位: ID 选择器的数量&lt;&#x2F;li&gt;
&lt;li&gt;第三位: 类选择器，伪类选择器，属性选择器的数量&lt;&#x2F;li&gt;
&lt;li&gt;第四位: 元素选择器，伪元素选择器的数量。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;通过特定性的比较，上述的例子我们又可以确定几个值：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;样式&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;color&lt;&#x2F;td&gt;&lt;td&gt;rgb(255, 0, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-size&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;background-color&lt;&#x2F;td&gt;&lt;td&gt;rgb(0, 128, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-weight&lt;&#x2F;td&gt;&lt;td&gt;700&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;display&lt;&#x2F;td&gt;&lt;td&gt;block&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;text-align&lt;&#x2F;td&gt;&lt;td&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其他&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;bi-jiao-yuan-ci-xu&quot;&gt;比较源次序&lt;&#x2F;h3&gt;
&lt;p&gt;如果比较完特定性之后还没有解决冲突，就会比较源次序，源次序的意思是在源代码里面的书写顺序，后书写的样式覆盖前面的样式。有些同学在这边会有些误解，他会认为在使用 class 的时候和 class 值的顺序有关，其实是没有关系的，&lt;code&gt;class=“a b”&lt;&#x2F;code&gt; 和 &lt;code&gt;class=”b a”&lt;&#x2F;code&gt; 效果是一样的。&lt;&#x2F;p&gt;
&lt;p&gt;所有才有了 CSS 中超链接样式的爱恨原则（LoVe HAte）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 处于任意状态的a标签，不论是超链接还是锚点 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;:link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 未访问过的超链接 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;:visited &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 访问过的超链接，点击超链接再返回当前页，这个超链接就处于visited状态 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;:focus &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 获得焦点的超链接，tab键选中超链接或者长按超链接再移开鼠标 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;:hover &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 鼠标悬停的超链接，鼠标经过超链接时或悬停在超链接上时，这个超链接就处于hover状态 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cda869;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;:active &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;* 处于激活状态的超链接，鼠标在超链接上按下时 *&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;正是也被上面的选择器特殊性是一样的，所以为了保证样式的正确，我们必须安装这个顺序书写。&lt;&#x2F;p&gt;
&lt;p&gt;最后经过源次序的比较，我们又可以确定一些 CSS 属性值&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;样式&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;color&lt;&#x2F;td&gt;&lt;td&gt;rgb(255, 0, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-size&lt;&#x2F;td&gt;&lt;td&gt;30px&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;background-color&lt;&#x2F;td&gt;&lt;td&gt;rgb(0, 128, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-weight&lt;&#x2F;td&gt;&lt;td&gt;700&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;display&lt;&#x2F;td&gt;&lt;td&gt;block&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;text-align&lt;&#x2F;td&gt;&lt;td&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其他&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;上面两步执行完成之后，会发现还有些 CSS 属性是没有值的，我们要保证所有的属性都是有值的才行，所以进入了第三步继承。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-cheng&quot;&gt;继承&lt;&#x2F;h2&gt;
&lt;p&gt;对仍然没有值的属性，如果可以继承，则使用继承。&lt;&#x2F;p&gt;
&lt;p&gt;因为不是所有的属性都可以继承的，准确地说是不是所有的属性都可以自动继承的。&lt;&#x2F;p&gt;
&lt;p&gt;在 CSS 中，每个&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;zh-CN&#x2F;docs&#x2F;Web&#x2F;CSS&#x2F;Reference&quot;&gt;CSS 属性定义&lt;&#x2F;a&gt;的概述都指出了这个属性是默认继承的 (&amp;quot;Inherited: Yes&amp;quot;) 还是默认不继承的 (&amp;quot;Inherited: no&amp;quot;)。这决定了当你没有为元素的属性指定值时该如何计算值。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ji-cheng-shu-xing&quot;&gt;继承属性&lt;&#x2F;h3&gt;
&lt;p&gt;当元素的一个继承属性（inherited property）没有指定值时，则取父元素的同属性的计算值（computed value）。只有文档根元素取该属性的概述中给定的初始值（initial value）。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fei-ji-cheng-shu-xing&quot;&gt;非继承属性&lt;&#x2F;h3&gt;
&lt;p&gt;当元素的一个非继承属性(在 Mozilla code 里有时称之为reset property ) 没有指定值时，则取属性的初始值 initial value（该值在该属性的概述里被指定）。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zhu-yi&quot;&gt;注意&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;zh-CN&#x2F;docs&#x2F;Web&#x2F;CSS&#x2F;inherit&quot;&gt;inherit&lt;&#x2F;a&gt; 关键字允许显式的声明继承性，它对继承和非继承属性都生效。&lt;&#x2F;p&gt;
&lt;p&gt;可以使用 &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;zh-CN&#x2F;docs&#x2F;Web&#x2F;CSS&#x2F;all&quot;&gt;all&lt;&#x2F;a&gt; 简写属性一次控制所有属性的继承，该属性将其值应用于所有属性，例如：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;font {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c5af75;&quot;&gt;all&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: revert;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c5af75;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ca7840;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c5af75;&quot;&gt;font-weight&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#949175;&quot;&gt;bold&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;至此我们又可以确定一些 CSS 属性值&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;样式&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;color&lt;&#x2F;td&gt;&lt;td&gt;rgb(255, 0, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-size&lt;&#x2F;td&gt;&lt;td&gt;30px&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;background-color&lt;&#x2F;td&gt;&lt;td&gt;rgb(0, 128, 0)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;font-weight&lt;&#x2F;td&gt;&lt;td&gt;700&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;display&lt;&#x2F;td&gt;&lt;td&gt;block&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;text-align&lt;&#x2F;td&gt;&lt;td&gt;center&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其他&lt;&#x2F;td&gt;&lt;td&gt;？&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;mo-ren&quot;&gt;默认&lt;&#x2F;h2&gt;
&lt;p&gt;那些无法自动继承的属性，如果还没有值，则会使用默认值，我们可以在 CSS 官方文档中查询到所有属性的默认值（initial value）。
最终，浏览器会把所有的 CSS 属性都确定下来，这就是样式计算的过程。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Nginx Proxy Manager 部署静态网站</title>
		<published>2023-10-21T00:00:00+00:00</published>
		<updated>2023-10-21T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/nginx-proxy-manager-deploy-static-website/" type="text/html"/>
		<id>https://alanlang.me/practical/nginx-proxy-manager-deploy-static-website/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nginxproxymanager.com&#x2F;&quot;&gt;Nginx Proxy Manager&lt;&#x2F;a&gt; 是一个 Nginx 的代理管理器，它最大的特点是简单方便。即使是没有 Nginx 基础的小伙伴，也能轻松地用它来完成反向代理的操作，而且因为自带面板，操作极其简单，非常适合配合 docker 搭建的应用使用。Nginx Proxy Manager 后台还可以一键申请 SSL 证书，并且会自动续期，方便省心。因为其本质上是一个 Nginx 的管理器，所以理论上它可以做到 Nginx 能做到的所有事情，包括反向代理、负载均衡、缓存、限速、防火墙等等。本文主要介绍如何使用 Nginx Proxy Manager 部署静态网站。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-zhuang-nginx-proxy-manager&quot;&gt;安装 Nginx Proxy Manager&lt;&#x2F;h2&gt;
&lt;p&gt;推荐使用 docker-compose.yaml&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;version: &amp;quot;3&amp;quot;

services:
  npm-proxy:
    image: jc21&#x2F;nginx-proxy-manager:latest
    container_name: npm-proxy
    restart: always
    ports:
      - 81:81
      - 80:80
      - 443:443
    volumes:
      - .&#x2F;data:&#x2F;data
      - .&#x2F;letsencrypt:&#x2F;etc&#x2F;letsencrypt
    healthcheck:
      test: [&amp;quot;CMD&amp;quot;, &amp;quot;&#x2F;bin&#x2F;check-health&amp;quot;]
      interval: 10s
      timeout: 3s
    networks:
      - web_apps

networks:
  web_apps:
    external: true
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;默认登陆的用户名：&lt;code&gt;admin@example.com&lt;&#x2F;code&gt; 密码：&lt;code&gt;changeme&lt;&#x2F;code&gt;
第一次登录会提示更改用户名和密码，建议修改一个复杂一点的密码。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bu-shu-jing-tai-wang-zhan&quot;&gt;部署静态网站&lt;&#x2F;h2&gt;
&lt;p&gt;假设我们 .&#x2F;data 目录下有一个 blog 目录，里面有一个 index.html 文件，我们想要通过 Nginx Proxy Manager 部署这个静态网站。
登陆 Nginx Proxy Manager，在网页里新建一个 Proxy Host, 配置主机名和目标地址：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;10&#x2F;31&#x2F;4G7TDng8Bfl1ES2.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果需要 https 访问的话，需要配置 ssl 证书：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;10&#x2F;21&#x2F;oAb8hT5Iq3CEY17.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;在 Advanced 这一栏填入
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;10&#x2F;31&#x2F;A5ZspuRXMdLf2j6.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;location &#x2F; {
  root &#x2F;data&#x2F;blog; # 修改成你自己刚刚创建的目录，只需要改 blog 这部分就可以了
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;aside class=&quot;info&quot;&gt;
    注意：第一次输入保存可能会失效，请再次点开编辑，然后点确定，确保这边内容输入进去了。
&lt;&#x2F;aside&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Matrix Magic3 Edition 60%</title>
		<published>2023-09-23T00:00:00+00:00</published>
		<updated>2023-09-23T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/matrix-magic3-edition-60/" type="text/html"/>
		<id>https://alanlang.me/practical/matrix-magic3-edition-60/</id>
		<content type="html">&lt;p&gt;都说客制化键盘的尽头是 Matrix， M 家的键盘可以称得上是客制化键盘届的天花板，做工和品控都是一流水准，这次终于有幸搞到了一把。因为今年的兔年对我来说是意义非凡的一年（果果今年出生了），所以选择了 Matrix Magic3 Edition 60% 这款兔年限定键盘。由于错过了发车的时间，所以只能选择在海鲜市场去收了。该键盘预计是在 8 月份开始发货，但是 3 月份团购刚结束就有人在海鲜市场挂了出来，排除掉那些单纯是为了挂着备忘的，仅有的几个真心想卖的加价过多不说而且也都采用的是先付订金且需要提前确认收货的方式。这种方式对我来说风险还是很大的，随时可能货财两空，所以最后还是决定等到有现货了再去买。&lt;&#x2F;p&gt;
&lt;p&gt;终于熬到了 9 月份了，随着官方的陆续发货，我终于也在海鲜市场弄到了一把，虽然加价了，但是看在是兔年限定的份上还是可以接受的。之所以选择 60% 佩列，是因为自己平时就是用的 60% 已经用习惯了，这个键位对我来说刚刚好，所有的按键都可以在不抬起手掌的情况下按到，极大的提高的工作效率。另外 60% 有 WKL 和 HHKB 两种佩列可以选择，我个人是比较喜欢 WKL 的大门牙，HHKB 看着有点傻傻呆呆的感觉。而且之前的键盘也是 WKL 的，所以用起来比较熟悉，有的人玩键盘就是为了玩和收藏，而我也会真正去用这些键盘。&lt;&#x2F;p&gt;
&lt;p&gt;收到货之后比想象中要惊艳的多，不愧是 Matrix，无论是整体的做工还是局部的细节都是无可挑剔的，都有点舍不得去使用了，反而是可以作为艺术品一直收藏着了。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;09&#x2F;25&#x2F;6RYnTsvAlkJVz7y.webp&quot; alt=&quot;IMG_20230925_113759_3235.webp&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;主要的设计都在背板上，用了好多块去拼接，但是也不显得杂乱，中间的小兔子十分可爱。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;09&#x2F;24&#x2F;NdszLwo1mGtIUZV.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Tmux 常用快捷键</title>
		<published>2023-09-11T00:00:00+00:00</published>
		<updated>2023-09-11T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/tmux/" type="text/html"/>
		<id>https://alanlang.me/practical/tmux/</id>
		<content type="html">&lt;h2 id=&quot;zhong-duan-zhong-shi-yong-tmux-ming-ling&quot;&gt;终端中使用 Tmux 命令&lt;&#x2F;h2&gt;
&lt;p&gt;启动 tmux 使用 -s 命令指定会话名称，使用 -n 命令指定窗口名称&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;tmux new -s sessionName -n window
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;退出会话(tmux会话内命令)&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;tmux detach
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;退出并关闭会话（窗口,窗格）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;exit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;结束后台的会话&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;#通过会话编号
$ tmux kill-session -t 0
#通过会话名称
$ tmux kill-session -t sessionName 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;查看所有会话&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;tmux ls
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;激活会话&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;tmux attach -t sessionName
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;tmux-nei-shi-yong-qian-zhui-ctrl-b-ran-hou-dui-ying-kuai-jie-jian-zhi-xing-ming-ling&quot;&gt;Tmux 内使用前缀 Ctrl+b 然后对应快捷键执行命令&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hui-hua-chang-yong-kuai-jie-cao-zuo&quot;&gt;会话常用快捷操作&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;快捷键&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;th&gt;&lt;strong&gt;说明&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;?&lt;&#x2F;td&gt;&lt;td&gt;所有快捷键，q退出&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;:new sessionName&lt;&#x2F;td&gt;&lt;td&gt;创建新会话&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;s&lt;&#x2F;td&gt;&lt;td&gt;切换会话&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;$&lt;&#x2F;td&gt;&lt;td&gt;重命名当前会话&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;d&lt;&#x2F;td&gt;&lt;td&gt;离开会话返回shell（与tmux detach功能相同）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ctrl+z&lt;&#x2F;td&gt;&lt;td&gt;挂起会话，返回shell&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;chuang-kou-chang-yong-kuai-jie-cao-zuo&quot;&gt;窗口常用快捷操作&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;快捷键&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;th&gt;&lt;strong&gt;说明&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;c&lt;&#x2F;td&gt;&lt;td&gt;创建新窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;w&lt;&#x2F;td&gt;&lt;td&gt;显示窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;数字键&lt;&#x2F;td&gt;&lt;td&gt;选择对应窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;p&lt;&#x2F;td&gt;&lt;td&gt;前一个窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;n&lt;&#x2F;td&gt;&lt;td&gt;后一个窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;f&lt;&#x2F;td&gt;&lt;td&gt;查找窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;,&lt;&#x2F;td&gt;&lt;td&gt;重命名窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;amp;&lt;&#x2F;td&gt;&lt;td&gt;关闭窗口（带提示）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;chuang-ge-chang-yong-kuai-jie-jian&quot;&gt;窗格常用快捷键&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;快捷键&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;th&gt;&lt;strong&gt;说明&lt;&#x2F;strong&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;%&lt;&#x2F;td&gt;&lt;td&gt;垂直分割&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;”&lt;&#x2F;td&gt;&lt;td&gt;水平分割&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;o&lt;&#x2F;td&gt;&lt;td&gt;切换窗格&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;x&lt;&#x2F;td&gt;&lt;td&gt;关闭窗格&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;space&lt;&#x2F;td&gt;&lt;td&gt;切换窗格布局&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;q&lt;&#x2F;td&gt;&lt;td&gt;显示窗格编号，按对应数字选择窗格&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;{&lt;&#x2F;td&gt;&lt;td&gt;与上一个窗格调换位置&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;}&lt;&#x2F;td&gt;&lt;td&gt;与下一个窗格调换位置&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;z&lt;&#x2F;td&gt;&lt;td&gt;当前窗格最大化&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;!&lt;&#x2F;td&gt;&lt;td&gt;取消所有窗口保留当前窗口&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ctrl+方向键&lt;&#x2F;td&gt;&lt;td&gt;以1个单元格为单位移动边缘以调整当前窗格大小&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Alt+方向键&lt;&#x2F;td&gt;&lt;td&gt;以5个单元格为单位移动边缘以调整当前窗格大小&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>systemctl 命令使用</title>
		<published>2023-09-04T00:00:00+00:00</published>
		<updated>2023-09-04T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/systemctl/" type="text/html"/>
		<id>https://alanlang.me/practical/systemctl/</id>
		<content type="html">&lt;h3 id=&quot;systemd-cheng-xu&quot;&gt;Systemd 程序&lt;&#x2F;h3&gt;
&lt;p&gt;Systemd 其实是Linux 系统用来管理系统的一个程序，用来代替原来的 init 进程(用来管理启动系统其它的服务进程)，现在很多 Linux 发行版都已经自带 Systemd 程序了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiang-guan-de-mu-lu-he-wen-jian&quot;&gt;相关的目录和文件&lt;&#x2F;h3&gt;
&lt;p&gt;在不同的发行版中与 systemd 相关的文件路径可能会不太一样。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 大多数 unit 的配置文件都放在这个目录下。&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F;run&#x2F;systemd&#x2F;system&#x2F; 系统运行过程中产生的脚本，比如用户相关的脚本和会话相关的脚本。&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 这个目录中主要的文件都是指向 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录中的链接文件。
注意，在我们自己创建 unit 配置文件时，既可以把配置文件放在 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录下，也可以放在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 目录下。&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F;etc&#x2F;default&#x2F; 这个目录中放置很多服务默认的配置文件。&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F;var&#x2F;lib&#x2F; 一些会产生数据的服务都会将他的数据写入到 &#x2F;var&#x2F;lib&#x2F; 目录中，比如 docker 相关的数据文件就放在这个目录下。&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F;run&#x2F;  这个目录放置了好多服务运行时的临时数据，比如 lock file 以及 PID file 等等。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;guan-li-dan-ge-unit&quot;&gt;管理单个 unit&lt;&#x2F;h3&gt;
&lt;p&gt;systemctl 提供了一组子命令来管理单个的 unit，其命令格式为：
systemctl [command] [unit]
command 主要有：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;start：立刻启动后面接的 unit。&lt;&#x2F;li&gt;
&lt;li&gt;stop：立刻关闭后面接的 unit。&lt;&#x2F;li&gt;
&lt;li&gt;restart：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。&lt;&#x2F;li&gt;
&lt;li&gt;reload：不关闭 unit 的情况下，重新载入配置文件，让设置生效。&lt;&#x2F;li&gt;
&lt;li&gt;enable：设置下次开机时，后面接的 unit 会被启动。&lt;&#x2F;li&gt;
&lt;li&gt;disable：设置下次开机时，后面接的 unit 不会被启动。&lt;&#x2F;li&gt;
&lt;li&gt;status：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。&lt;&#x2F;li&gt;
&lt;li&gt;is-active：目前有没有正在运行中。&lt;&#x2F;li&gt;
&lt;li&gt;is-enable：开机时有没有默认要启用这个 unit。&lt;&#x2F;li&gt;
&lt;li&gt;kill ：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。&lt;&#x2F;li&gt;
&lt;li&gt;show：列出 unit 的配置。&lt;&#x2F;li&gt;
&lt;li&gt;mask：注销 unit，注销后你就无法启动这个 unit 了。&lt;&#x2F;li&gt;
&lt;li&gt;unmask：取消对 unit 的注销。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;yi-ge-li-zi&quot;&gt;一个例子&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[Unit]
Description=Good Morning server
After=network.target
[Service]
EnvironmentFile=&#x2F;opt&#x2F;app&#x2F;morning&#x2F;.env
ExecStart=&#x2F;opt&#x2F;app&#x2F;morning&#x2F;good_morning
[Install]
WantedBy=multi-user.target
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>CloudFlare Tunnel 内网穿透</title>
		<published>2023-08-28T00:00:00+00:00</published>
		<updated>2023-08-28T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/cloudflare-tunnel/" type="text/html"/>
		<id>https://alanlang.me/practical/cloudflare-tunnel/</id>
		<content type="html">&lt;h2 id=&quot;gong-zuo-yuan-li&quot;&gt;工作原理&lt;&#x2F;h2&gt;
&lt;p&gt;Tunnel 通过在本地网络运行的一个 Cloudflare 守护程序，与 Cloudflare 云端通信，将云端请求数据转发到本地网络的 IP + 端口。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qian-zhi-tiao-jian&quot;&gt;前置条件&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;持有一个域名&lt;&#x2F;li&gt;
&lt;li&gt;将域名 DNS 解析托管到 CF&lt;&#x2F;li&gt;
&lt;li&gt;内网有一台本地服务器，用于运行本地与 cloudflare 通信的 cloudflared 程序&lt;&#x2F;li&gt;
&lt;li&gt;一张境内双币信用卡（仅用于添加付款方式，服务是免费的）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;kai-shi&quot;&gt;开始&lt;&#x2F;h2&gt;
&lt;p&gt;打开 &lt;a href=&quot;https:&#x2F;&#x2F;one.dash.cloudflare.com&#x2F;&quot;&gt;Cloudflare Zero Trust&lt;&#x2F;a&gt; 工作台面板, 创建 Cloudflare Zero Trust ，选择免费计划。需要提供付款方式，使用境内的双币卡即可。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;08&#x2F;28&#x2F;qgbvSpzAi2QPCFH.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-zhuang-cloudflared&quot;&gt;安装 Cloudflared&lt;&#x2F;h3&gt;
&lt;p&gt;Linux 直接下载编译好的二进制包安装&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;curl -L &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;github.com&#x2F;cloudflare&#x2F;cloudflared&#x2F;releases&#x2F;latest&#x2F;download&#x2F;cloudflared-linux-amd64&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; &#x2F;usr&#x2F;bin&#x2F;cloudflared
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; +x &#x2F;usr&#x2F;bin&#x2F;cloudflared
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;deng-lu-cloudflared&quot;&gt;登录 Cloudflared&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; tunnel login
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输入命令后，终端会给出一个登陆地址，我们拷贝到浏览器里面打开，选择需要授权的网站。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    注意：授权一次只能选择一个网站。如果存在多个不同域名的网站，请授权完成后不要关闭网页，点击第二个、第三个要授权的域名，进行多次授权。
&lt;&#x2F;aside&gt;
&lt;h3 id=&quot;chuang-jian-sui-dao&quot;&gt;创建隧道&lt;&#x2F;h3&gt;
&lt;p&gt;授权完以后，我们需要创建隧道。一般建议一台服务器创建一个隧道。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; tunnel create &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;隧道名字&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;创建完以后，会输出隧道的一个UUID，记录下来&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yu-ming-zhi-xiang&quot;&gt;域名指向&lt;&#x2F;h3&gt;
&lt;p&gt;接着，我们需要把域名指向到对应的隧道&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; tunnel route dns &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;隧道名字&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;域名&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这时候，Cloudflare 会自动添加一条 CNAME 记录到对应的域名。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pei-zhi-cloudflared&quot;&gt;配置 Cloudflared&lt;&#x2F;h3&gt;
&lt;p&gt;接着，我们开始配置 Cloudflared，先编辑一个配置文件&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;vim ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;.cloudflared&#x2F;config.yml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输入下面的内容（根据自己要求编辑）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;tunnel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;隧道UUID&amp;gt;
credentials-file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&#x2F;root&#x2F;.cloudflared&#x2F;&amp;lt;隧道UUID&amp;gt;.json
protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;h2mux
ingress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 第一个网站，连接到本地的80端口
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;域名1.com&amp;gt;
    service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;http:&#x2F;&#x2F;localhost:80
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 第二个网站，https协议，连接到本地的443端口，禁用证书校验（用于自签名SSL证书）
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;域名2.com&amp;gt;
    service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;https:&#x2F;&#x2F;127.0.0.1:443
    originRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;noTLSVerify&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;true
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;originServerName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;lt;域名2.com&amp;gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 第三个网站，8012端口，泛域名
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;*.域名3.com&amp;gt;
    service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;http:&#x2F;&#x2F;localhost:8012
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 第四个，反代MySQL sock服务
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;mysql.域名4.com&amp;gt;
    service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;unix:&#x2F;tmp&#x2F;mysql.sock
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 第五个，反代SSH服务
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;&amp;lt;ssh.域名5.com&amp;gt;
    service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;ssh:&#x2F;&#x2F;localhost:22
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f902a;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;http_status:404
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;aside class=&quot;info&quot;&gt;
    注意：最后面的 404 不能省略，否则会报错。
&lt;&#x2F;aside&gt;
&lt;p&gt;更多支持的服务和配置方式，参考帮助文档：&lt;a href=&quot;https:&#x2F;&#x2F;developers.cloudflare.com&#x2F;cloudflare-one&#x2F;connections&#x2F;connect-apps&#x2F;install-and-setup&#x2F;tunnel-guide&#x2F;local&#x2F;local-management&#x2F;ingress&#x2F;?ref=bra.live#supported-protocols&quot;&gt;Supported protocols&lt;&#x2F;a&gt;
配置完以后，我们测试下配置文件有没有问题&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; tunnel ingress validate
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;还可以再测试下规则是否命中&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; tunnel ingress rule https:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;域名1.com&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;qi-dong-cloudflared&quot;&gt;启动 Cloudflared&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared --loglevel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; debug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --transport-loglevel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; warn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --config ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;.cloudflared&#x2F;config.yml tunnel run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;隧道UUID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后，我们在浏览器里面输入域名，正常情况下，你可以看到网站已经可以正常访问了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuang-jian-xi-tong-fu-wu&quot;&gt;创建系统服务&lt;&#x2F;h3&gt;
&lt;p&gt;按下 ctrl+z，先停掉刚才启动的服务。为了让服务能每次系统启动的时候都跟着启动，我们需要把Cloudflared注册成系统服务。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cloudflared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; service install
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;systemctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; start cloudflared
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;systemctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; status cloudflared
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果看到服务已经启动，那么恭喜你，你已经成功了。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    注意：创建系统服务后，配置文件会被拷贝到 &amp;#x2F;etc&amp;#x2F;cloudflared&amp;#x2F;config.yml，后续修改配置必须修改新文件
&lt;&#x2F;aside&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Linux 挂载 NFS 文件系统</title>
		<published>2023-08-27T00:00:00+00:00</published>
		<updated>2023-08-27T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/linux-mount-nfs/" type="text/html"/>
		<id>https://alanlang.me/practical/linux-mount-nfs/</id>
		<content type="html">&lt;p&gt;NFS网络文件系统是一种分布式文件系统协议，使您可以通过网络共享远程目录。
使用NFS，您可以在系统上挂载远程计算机目录，并像对待本地文件一样使用远程计算机文件。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;an-zhuang-nfske-hu-duan&quot;&gt;安装NFS客户端&lt;&#x2F;h4&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; apt install nfs-common
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;gua-zai-nfs-wen-jian-xi-tong&quot;&gt;挂载 NFS 文件系统&lt;&#x2F;h4&gt;
&lt;p&gt;挂载的命令为：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; mount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; nfs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;IP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;目录&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;本地目录&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;zi-dong-gua-zai&quot;&gt;自动挂载&lt;&#x2F;h4&gt;
&lt;p&gt;编辑 &lt;code&gt;&#x2F;etc&#x2F;fstab&lt;&#x2F;code&gt; 文件，添加一行：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;IP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;目录&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;本地目录&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; nfs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;defaults&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 0 0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;执行挂载命令：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; mount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -a
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;xie-zai-nfsgong-xiang-wen-jian-xi-tong&quot;&gt;卸载NFS共享文件系统&lt;&#x2F;h4&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; umount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;本地目录&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Learn Rust by Rustlings</title>
		<published>2023-07-18T00:00:00+00:00</published>
		<updated>2023-07-18T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/rustlings/" type="text/html"/>
		<id>https://alanlang.me/research/rustlings/</id>
		<content type="html">&lt;p&gt;最近正在学习 Rust，发现了一个不错的学习资源，叫做 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustlings&#x2F;&quot;&gt;Rustlings&lt;&#x2F;a&gt;，是一个 Rust 的练习项目，可以帮助快速上手 Rust。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;07&#x2F;18&#x2F;1ui7wy9VYtAGITq.webp&quot; alt=&quot;&quot; &#x2F;&gt; &lt;&#x2F;p&gt;
&lt;p&gt;使用方式也很简单，如果是 macOS，那么可以直接使用下面的命令开始，它会检查当前环境，并在当前目录下安装&lt;strong&gt;rustlings&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;
curl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang&#x2F;rustlings&#x2F;main&#x2F;install.sh | bash
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;安装完成之后可以使用 &lt;code&gt;cd rustlings&lt;&#x2F;code&gt; 进入到 rustlings 目录下，所有的题目都会在 &lt;code&gt;.&#x2F;exercises&lt;&#x2F;code&gt; 目录里面，&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; cat exercises&#x2F;README.md 
# Exercise to Book Chapter mapping

| Exercise               | Book Chapter        |
| ---------------------- | ------------------- |
| variables              | §3.1                |
| functions              | §3.3                |
| if                     | §3.5                |
| primitive_types        | §3.2, §4.3          |
| vecs                   | §8.1                |
| move_semantics         | §4.1-2              |
| structs                | §5.1, §5.3          |
| enums                  | §6, §18.3           |
| strings                | §8.2                |
| modules                | §7                  |
| hashmaps               | §8.3                |
| options                | §10.1               |
| error_handling         | §9                  |
| generics               | §10                 |
| traits                 | §10.2               |
| tests                  | §11.1               |
| lifetimes              | §10.3               |
| iterators              | §13.2-4             |
| threads                | §16.1-3             |
| smart_pointers         | §15, §16.3          |
| macros                 | §19.6               |
| clippy                 | §21.4               |
| conversions            | n&#x2F;a                 |
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个使用就可以使用我们属性的编辑器来进行开发了，如果使用的是 VSCode，那么可以直接使用 &lt;code&gt;code .&lt;&#x2F;code&gt; 就可以直接以当前目录下打开，这个时候我们在终端运行 &lt;code&gt;rustlings watch&lt;&#x2F;code&gt; 就可以看到当前的题目了。
每次完成一道题目以后，我们可以通过删除 &lt;code&gt;&#x2F;&#x2F; I AM NOT DONE&lt;&#x2F;code&gt; 来进行下一道题目，如果想要查看当前题目的答案，可以使用 &lt;code&gt;rustlings hint&lt;&#x2F;code&gt; 来查看。
好啦，开始愉快得刷题吧！&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cuo-ti-ji-lu&quot;&gt;错题记录&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;1-vecs2-rs&quot;&gt;1. vecs2.rs&lt;&#x2F;h4&gt;
&lt;p&gt;要修改 &lt;code&gt;vec_loop&lt;&#x2F;code&gt; 和 &lt;code&gt;vec_map&lt;&#x2F;code&gt; 两个函数，使得它们可以正确的运行。
&lt;code&gt;vec_loop&lt;&#x2F;code&gt; 中需要使用 &lt;code&gt;iter_mut&lt;&#x2F;code&gt; 来进行可变的迭代，取到每一个元素的可变引用，然后进行修改。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;vec_loop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;) -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; element &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; v.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;iter_mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; TODO: Fill this up so that each element in the Vec `v` is
        &#x2F;&#x2F; multiplied by 2.
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;element &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; At this point, `v` should be equal to [4, 8, 12, 16, 20].
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;    v
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;vec_map&lt;&#x2F;code&gt; 中需要使用 &lt;code&gt;map&lt;&#x2F;code&gt; 来进行迭代，取到每一个元素的引用，然后进行修改，最后使用 &lt;code&gt;collect&lt;&#x2F;code&gt; 来收集所有的元素。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;vec_map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;) -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; {
    v.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;element&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;| {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; TODO: Do the same thing as above - but instead of mutating the
            &#x2F;&#x2F; Vec, you can just return the new number!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;            element &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;})
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;collect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;2-move-semantics5-rs&quot;&gt;2. move_semantics5.rs&lt;&#x2F;h4&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;assert_eq!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(x, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;问题的原因是在同一个作用域下，不能同时存在多个可变引用，所以需要将 &lt;code&gt;y&lt;&#x2F;code&gt; 和 &lt;code&gt;z&lt;&#x2F;code&gt; 的作用域分开。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; x;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;assert_eq!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(x, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>联合类型与交叉类型</title>
		<published>2023-07-08T00:00:00+00:00</published>
		<updated>2023-07-08T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/union-and-intersection/" type="text/html"/>
		<id>https://alanlang.me/codes/type/union-and-intersection/</id>
		<content type="html">&lt;p&gt;联合类型（Union Types）与交叉类型（Intersection Types）在 TS 中都属于很基础的概念，我们也知道联合类型是取并集，用符合（&lt;code&gt;|&lt;&#x2F;code&gt;），交叉类型是取交集，用符号（&lt;code&gt;&amp;amp;&lt;&#x2F;code&gt;）。&lt;br &#x2F;&gt;但是实际效果和我们直观认知是不一致的，比如如下的代码，有一个 &lt;code&gt;Demo1&lt;&#x2F;code&gt; 类型和 &lt;code&gt;Demo2&lt;&#x2F;code&gt; 类型，&lt;code&gt;Demo3&lt;&#x2F;code&gt; 类型是 &lt;code&gt;Demo1&lt;&#x2F;code&gt; 和 &lt;code&gt;Demo2&lt;&#x2F;code&gt; 的联合类型。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;demo3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;demo3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; ERROR
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;按照我们对并集的理解，&lt;code&gt;demo3&lt;&#x2F;code&gt; 的属性应该是 &lt;code&gt;demo1&lt;&#x2F;code&gt; 和 &lt;code&gt;demo2&lt;&#x2F;code&gt; 的并集。所以 &lt;code&gt;demo3&lt;&#x2F;code&gt; 里应该有 &lt;code&gt;a, b, c&lt;&#x2F;code&gt;。&lt;br &#x2F;&gt;但是我们实际敲一下代码试一试，却发现不是这样的，我们只能使用 &lt;code&gt;demo3.b&lt;&#x2F;code&gt; 这一个属性。&lt;br &#x2F;&gt;相反，如果我们使用的是交叉类型，却可以访问所有的成员：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;demo4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Demo4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;demo4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;为什么会和我们直观感受正好相反呢？其实我们要弄清楚，TS 中的取交集和取并集究竟是对什么来说的。其实 TS 中所有对类型的计算，都是针对使用这个类型的对象来说的。&lt;br &#x2F;&gt;拿上面那个联合类型的例子来讲，取并集是对所有为 &lt;code&gt;Demo1&lt;&#x2F;code&gt; 和 &lt;code&gt;Demo2&lt;&#x2F;code&gt; 的对象取并集。这样的结果就是这个集合里即可能有 &lt;code&gt;Demo1&lt;&#x2F;code&gt;（有 &lt;code&gt;a&lt;&#x2F;code&gt; 和 &lt;code&gt;b&lt;&#x2F;code&gt;），又可能有 &lt;code&gt;Demo2&lt;&#x2F;code&gt;（有 &lt;code&gt;b&lt;&#x2F;code&gt; 和 &lt;code&gt;c&lt;&#x2F;code&gt;）。而上一讲我们讲过，TS 要保证的是所有成员始终可用，那么也就意味着我们只能用 &lt;code&gt;b&lt;&#x2F;code&gt; 。&lt;br &#x2F;&gt;我们可以举个实际的例子来看得更清楚一点，比如我们定义两个类型，一个表示蔡徐坤的粉丝，一个表示马保国的粉丝。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;蔡粉
&lt;ul&gt;
&lt;li&gt;鬼畜&lt;&#x2F;li&gt;
&lt;li&gt;唱&lt;&#x2F;li&gt;
&lt;li&gt;跳&lt;&#x2F;li&gt;
&lt;li&gt;rap&lt;&#x2F;li&gt;
&lt;li&gt;篮球&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;马粉
&lt;ul&gt;
&lt;li&gt;鬼畜&lt;&#x2F;li&gt;
&lt;li&gt;五连鞭&lt;&#x2F;li&gt;
&lt;li&gt;太极&lt;&#x2F;li&gt;
&lt;li&gt;讲武德&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;下面我们说：菜粉的举左手，马粉的举右手。然后刚才举过手的站出来（联合类型）。这个时候站出来的肯定既有蔡粉又有马粉。这个时候我们能说站出来的打个太极吗？肯定是不行的，因为蔡粉不会打太极。我们只能说站出来的来段鬼畜，因为蔡粉和马粉都会鬼畜。&lt;br &#x2F;&gt;相反的，如果我们说，菜粉的举左手，马粉的举右手。然后两只手都举着的站出来（交叉类型）。这个时候站出来的肯定既是蔡粉也是马粉。如果我们说站出来的打个太极，肯定是没问题的，因为他们肯定是马粉，肯定会打太极。如果我说站出来的来段 rap，也是没问题的，因为他们肯定是蔡粉，肯定会 rap。&lt;br &#x2F;&gt;所以其实知识并不复杂，我们只要能够理解这一点的话，就不用再去记什么乱七八糟的规则了，所有的现象都可以解释了，比如我们随便来写一个例子：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Test1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;a&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这是两个原始类型，得到的 &lt;code&gt;Test1&lt;&#x2F;code&gt; 的结果就是 &lt;code&gt;a&lt;&#x2F;code&gt;，我们还拿坤坤来举例，坤坤的粉丝举右手（&lt;code&gt;string&lt;&#x2F;code&gt;），坤坤的超级粉丝举左手（&lt;code&gt;a&lt;&#x2F;code&gt;）。然后两只手都举起来的站起来。这个时候两只手都举起来的，肯定是坤坤的超级粉丝。所以这里 &lt;code&gt;a&lt;&#x2F;code&gt; 是字符串的一种特殊情况，所以 &lt;code&gt;Test1&lt;&#x2F;code&gt; 的结果就是 &lt;code&gt;a&lt;&#x2F;code&gt;。&lt;br &#x2F;&gt;再看一个例子&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Test2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;a&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;b&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;最终 &lt;code&gt;Test2&lt;&#x2F;code&gt; 的结果是 &lt;code&gt;never&lt;&#x2F;code&gt;，不存在。因为它不可能同时是 &lt;code&gt;a&lt;&#x2F;code&gt; 又同时是 &lt;code&gt;b&lt;&#x2F;code&gt;。就好比说坤坤的粉丝举左手，坤坤的黑子举右手。然后两只手都举起来的站起来，那么会有人站起来吗，肯定不会。所以是 &lt;code&gt;never&lt;&#x2F;code&gt;。&lt;br &#x2F;&gt;再看一个例子&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Test3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;a&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;b&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这边就涉及到运算了，当联合类型跟其他进行运算时，是分开进行运算的，上面的例子其实等效于：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Test3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;a&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;b&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们知道 &lt;code&gt;&#x27;a&#x27; &amp;amp; stirng&lt;&#x2F;code&gt; 最终的结果是 &lt;code&gt;&#x27;a&#x27;&lt;&#x2F;code&gt;，&lt;code&gt;&#x27;b&#x27; &amp;amp; string&lt;&#x2F;code&gt; 的结果是 &lt;code&gt;&#x27;b&#x27;&lt;&#x2F;code&gt;，&lt;code&gt;1 &amp;amp; string&lt;&#x2F;code&gt; 最终的结果是 &lt;code&gt;never&lt;&#x2F;code&gt;。&lt;br &#x2F;&gt;所以 &lt;code&gt;Test3&lt;&#x2F;code&gt; 最终的结果是 &lt;code&gt;&#x27;a&#x27; | &#x27;b&#x27;&lt;&#x2F;code&gt;。&lt;br &#x2F;&gt;最后我们看一个复杂的例子，大家可以试着能否根据本期所学的知识，结合上期的&lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;codes&#x2F;type&#x2F;covariance-and-contravariance&#x2F;&quot;&gt;协变与逆变&lt;&#x2F;a&gt;，来读懂这个类型函数的作用。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;UnionToIntersection&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;never&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: infer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;R&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;R &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;never
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>协变与逆变</title>
		<published>2023-07-04T00:00:00+00:00</published>
		<updated>2023-07-04T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/covariance-and-contravariance/" type="text/html"/>
		<id>https://alanlang.me/codes/type/covariance-and-contravariance/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Subtyping&quot;&gt;子类型&lt;&#x2F;a&gt; 在编程理论上是一个复杂的话题，而他的复杂之处来自于一对经常会被混淆的现象，我们称之为&lt;code&gt;协变&lt;&#x2F;code&gt;与&lt;code&gt;逆变&lt;&#x2F;code&gt;。这两个单词看着就很高级，但是其实本质是一样的，它们都是为了做同一件事情，那就是类型安全。所以说只要我们理解了什么是内存安全，我们就可以理解什么叫协变和逆变。什么我们都不需要去管这两个概念，我们写出来的代码，就自然而然符合协变和逆变的规则。&lt;br &#x2F;&gt;什么是类型安全？其实说起来非常简单，在 TS 里面类型安全指的就是：&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    保证成员始终可用
&lt;&#x2F;aside&gt;
&lt;p&gt;我们来举个🌰&lt;br &#x2F;&gt;我们有三种对象类型如下：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 粉丝
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 爱坤
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Fans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;dance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;basketball&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 超级爱坤
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;IKun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比较这三种对象的类型，我们可以有一个大小的称呼，我们把类型约特殊则认为越小，那么上面这三个类型的关系就是：&lt;br &#x2F;&gt;&lt;code&gt;SuperIKun&lt;&#x2F;code&gt; &amp;lt; &lt;code&gt;IKUn&lt;&#x2F;code&gt; &amp;lt; &lt;code&gt;Fans&lt;&#x2F;code&gt;&lt;br &#x2F;&gt;那么现在说回到类型安全，假如我们有一个变量，类型是 &lt;code&gt;Fans&lt;&#x2F;code&gt; ，还有一个变量，类型是 &lt;code&gt;IKun&lt;&#x2F;code&gt;&lt;br &#x2F;&gt;那么 &lt;code&gt;Fans&lt;&#x2F;code&gt; 这个对象可以赋值给 &lt;code&gt;IKun&lt;&#x2F;code&gt; 吗？&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  call: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;iKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; ERROR：类型“Fans”缺少类型“IKun”中的以下属性: sing, dance, basketball
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;很显然 IDE 帮我们报错了，提示我们不应该这样赋值，因为这样做就失去了类型安全。因为将来我们在用这个 &lt;code&gt;iKun&lt;&#x2F;code&gt; 的时候，由于它是 IKun 这个类型，所以它里面的成员我们应该都可以使用，比如 &lt;code&gt;iKin.sing&lt;&#x2F;code&gt;而我们给他的东西却没有这些成员，所以如果它不报错，就会造成我们在正常使用的时候就会出现我们使用到根本不可能出现的字段，从而导致空指针异常。所以这就是类型安全，它保证了成员的使用可用。&lt;br &#x2F;&gt;那么反过来，如果有一个 IKun，能不能把它赋值给 Fans 呢？&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;iKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  call: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  sing: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  dance: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  basketball: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;iKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样做就是可以的，因为 &lt;code&gt;Fans&lt;&#x2F;code&gt; 里面只有一个成员 &lt;code&gt;call&lt;&#x2F;code&gt; ，而 &lt;code&gt;iKun&lt;&#x2F;code&gt; 是 &lt;code&gt;Fans&lt;&#x2F;code&gt; 的一种，它是小于&lt;code&gt;Fans&lt;&#x2F;code&gt; 的，所以它里面不管有多少成员，它一定有一个成员 &lt;code&gt;call&lt;&#x2F;code&gt; ，因此我们在用这个 &lt;code&gt;call&lt;&#x2F;code&gt; 的时候它一定是可用的，可以保证它是安全的。这就叫作类型安全。&lt;br &#x2F;&gt;通过上面的例子我们可以发现，要保证类型安全，只要实现一点就可以了，就是要搞清楚谁在给这个数据，谁在收这个数据。我们只需要保证给的类型是个小类型，收的类型是个大类型，因为小的类型里面一定包含大的类型的成员，所以只要满足这个条件就没问题。&lt;br &#x2F;&gt;比如第一个例子是我们可以发现，是 &lt;code&gt;Fans&lt;&#x2F;code&gt; 在给，&lt;code&gt;IKun&lt;&#x2F;code&gt; 在收，而 &lt;code&gt;Fans&lt;&#x2F;code&gt; &amp;gt; &lt;code&gt;IKun&lt;&#x2F;code&gt;，不满足我们上面的结论，所以不符合类型安全。&lt;br &#x2F;&gt;第二个例子里，是 &lt;code&gt;IKun&lt;&#x2F;code&gt; 在给，&lt;code&gt;Fans&lt;&#x2F;code&gt; 在收，所有符合类型安全。&lt;br &#x2F;&gt;所以我们根本不需要知道什么是协变什么是逆变，我们只需要掌握一点即可，那就是：给的类型是个小类型，收的类型是个大类型。&lt;&#x2F;p&gt;
&lt;p&gt;那么在不同的场景里面，我们只要分清楚谁在给，谁在收，只要保证给的是小类型，收的是大类型，那么它一定是类型安全的。在上面这个简单的例子里，其实挺好分析的，但是有的时候可能没有那么直观得看出来。比如我们声明两个函数：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后我们有一个函数类型是 &lt;code&gt;SuperTransform&lt;&#x2F;code&gt;，那么我可以赋值给 &lt;code&gt;Transform&lt;&#x2F;code&gt; 吗？&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;transform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;ERROR: 不能将类型“SuperTransform”分配给类型“Transform”

&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;大家可能很奇怪，明明 &lt;code&gt;SuperTransform&lt;&#x2F;code&gt; 比 &lt;code&gt;Transform&lt;&#x2F;code&gt; 小，为什么这样会报错了？难道刚才我们得到的结论是错误的吗？其实不是的，我们来分析下为什么会报错。报错的原因一定是它认为这样做可能会造成类型不安全，我们可以想，如果这样能赋值成功，那我们后续调用 &lt;code&gt;transform&lt;&#x2F;code&gt; 函数的时候，就可以以 &lt;code&gt;IKun&lt;&#x2F;code&gt; 作为参数，但是我们实际执行的确是 &lt;code&gt;subTransform&lt;&#x2F;code&gt; 方法，它的形参的类型是 &lt;code&gt;SuperIKun&lt;&#x2F;code&gt;，也就是它可以访问 &lt;code&gt;rap&lt;&#x2F;code&gt; 这个成员，但是我们传进来的 &lt;code&gt;IKun&lt;&#x2F;code&gt; 是没有这个成员的，所以产生了类型不安全。所以我们看一个这个函数的参数，是 &lt;code&gt;IKun&lt;&#x2F;code&gt; 在给，&lt;code&gt;SuperIKun&lt;&#x2F;code&gt; 在收，而 &lt;code&gt;IKUn&lt;&#x2F;code&gt; &amp;gt; &lt;code&gt;SuperIKun&lt;&#x2F;code&gt;。所以赋值失败，满足我们上面的结论。&lt;br &#x2F;&gt;所以当类型是函数的时候，我们不能比较这个函数类型的大小，因为函数是有参数和返回值的，所以我们需要同时比较参数和返回值。所以上面的例子中，我们把 &lt;code&gt;SuperTransform&lt;&#x2F;code&gt; 的参数类型改为 &lt;code&gt;Fans&lt;&#x2F;code&gt; 就可以了。因为 &lt;code&gt;IKun&lt;&#x2F;code&gt; &amp;lt; &lt;code&gt;Fans&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperIKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;transform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样就不会有类型安全的问题了。&lt;br &#x2F;&gt;我们再把上面的例子改变一下，我们把 &lt;code&gt;SuperTransform&lt;&#x2F;code&gt; 函数的返回值类型改为 &lt;code&gt;Fans&lt;&#x2F;code&gt; ，&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;IKun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SuperTransform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;transform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Transform &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;subTransform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;ERROR: 不能将类型“SuperTransform”分配给类型“Transform”。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样类型又报错了。同样的我们来分析下返回值是谁在给谁在收。这个返回值是谁返回的？很明显是 &lt;code&gt;SuperTransform&lt;&#x2F;code&gt; 返回的，所以给的是 &lt;code&gt;Fans&lt;&#x2F;code&gt;，收的是谁，是调用 &lt;code&gt;transform&lt;&#x2F;code&gt; 得到的类型，是 &lt;code&gt;IKun&lt;&#x2F;code&gt;，所以是把 &lt;code&gt;Fans&lt;&#x2F;code&gt; 给 &lt;code&gt;IKun&lt;&#x2F;code&gt;。但是 &lt;code&gt;Fans&lt;&#x2F;code&gt; &amp;gt; &lt;code&gt;IKUn&lt;&#x2F;code&gt; 。不满足我们上面的结论，所以赋值失败。&lt;br &#x2F;&gt;关于协变与逆变，其实就是上面我们给的对象和函数的例子，对象的类型赋值符合我们直观的小给大，所以叫协变。而函数的赋值直观上是大给小，需要考虑参数和返回值，所以叫逆变。其实我们完全可以忘记协变和逆变这两个专有名词，只需要记住一个结论就够了：&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    给的类型是个小类型，收的类型是个大类型
&lt;&#x2F;aside&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>代码的圈复杂度</title>
		<published>2023-06-30T00:00:00+00:00</published>
		<updated>2023-06-30T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/cyclomatic-complexity/" type="text/html"/>
		<id>https://alanlang.me/research/cyclomatic-complexity/</id>
		<content type="html">&lt;h2 id=&quot;quan-fu-za-du-de-gai-nian&quot;&gt;圈复杂度的概念&lt;&#x2F;h2&gt;
&lt;p&gt;圈复杂度（Cyclomatic complexity，CC）也称为条件复杂度，是一种衡量代码复杂度的标准，其符号为V(G)。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;麦凯布最早提出一种称为“基础路径测试”（Basis Path Testing）的软件测试方式，测试程序中的每一线性独立路径，所需的测试用例个数即为程序的圈复杂度。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;圈复杂度可以用来衡量一个模块判定结构的复杂程度，其数量上表现为独立路径的条数，也可理解为覆盖所有的可能情况最少使用的测试用例个数。&lt;br &#x2F;&gt;圈复杂度可应用在程序的子程序、模块、方法或类别。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;quan-fu-za-du-yu-chu-cuo-feng-xian&quot;&gt;圈复杂度与出错风险&lt;&#x2F;h2&gt;
&lt;p&gt;程序的可能错误和高的圈复杂度有着很大关系，圈复杂度最高的模块和方法，其缺陷个数也可能最多。&lt;br &#x2F;&gt;圈复杂度大说明程序代码的判断逻辑复杂，可能质量低，且难于测试和维护。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码复杂度低，代码不一定好，但代码复杂度高，代码一定不好。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;圈复杂度&lt;&#x2F;th&gt;&lt;th&gt;代码状况&lt;&#x2F;th&gt;&lt;th&gt;可测性&lt;&#x2F;th&gt;&lt;th&gt;维护成本&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1 - 10&lt;&#x2F;td&gt;&lt;td&gt;清晰，结构化&lt;&#x2F;td&gt;&lt;td&gt;高&lt;&#x2F;td&gt;&lt;td&gt;低&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;10 -20&lt;&#x2F;td&gt;&lt;td&gt;复杂&lt;&#x2F;td&gt;&lt;td&gt;中&lt;&#x2F;td&gt;&lt;td&gt;中&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;20 - 30&lt;&#x2F;td&gt;&lt;td&gt;非常复杂&lt;&#x2F;td&gt;&lt;td&gt;低&lt;&#x2F;td&gt;&lt;td&gt;高&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;gt;30&lt;&#x2F;td&gt;&lt;td&gt;不可读&lt;&#x2F;td&gt;&lt;td&gt;不可测&lt;&#x2F;td&gt;&lt;td&gt;非常高&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;&lt;strong&gt;一般来说，圈复杂度大于10的方法存在很大的出错风险。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;quan-fu-za-du-yu-ce-shi&quot;&gt;圈复杂度与测试&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;测试驱动的开发&lt;&#x2F;strong&gt; 与 &lt;strong&gt;较低圈复杂度值&lt;&#x2F;strong&gt; 之间存在着紧密联系。&lt;br &#x2F;&gt;因为在编写测试用例时，开发人员会首先考虑代码的可测试性，从而倾向编写简单的代码（因为复杂的代码难以测试）。&lt;br &#x2F;&gt;一个好的测试用例设计经验是：创建数量与被测代码圈复杂度值相等的测试用例，以此提升测试用例对代码的分支覆盖率。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-suan-fang-fa&quot;&gt;计算方法&lt;&#x2F;h2&gt;
&lt;p&gt;通常有两者方式可以计算 V(G)，不管用哪种方式计算，结果都是一样的。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dian-bian-ji-suan-fa&quot;&gt;点边计算法&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;V(G) = e - n + 2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中 e 为控制流程图中边的数量，n 表示控制流图中节点的数量。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fen-ge-mian-ji-fa&quot;&gt;分割面积法&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;V(G) = R
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中 R 表示被控制流程图分割的面积的数量。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kong-zhi-liu-cheng-tu&quot;&gt;控制流程图&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;30&#x2F;exarQwDJLibZIV5.webp&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-li&quot;&gt;示例&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;shi-li-yi&quot;&gt;示例一&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;30&#x2F;6aQ1f9DvIK7MYBe.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-li-er&quot;&gt;示例二&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;30&#x2F;kvqd8zJDu6s2rMY.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-li-san&quot;&gt;示例三&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; codes
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;30&#x2F;LPt19FXErU3Okij.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong-eslint-xian-zhi-dai-ma-de-quan-fu-za-du&quot;&gt;使用 ESLint 限制代码的圈复杂度&lt;&#x2F;h2&gt;
&lt;p&gt;只需要配置 ESLint 的 complexity 属性即可，数组中的第一个元素为提示等级，第二个元素为最大圈复杂度的阈值（默认为 20）。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;plugins: [&amp;quot;@typescript-eslint&amp;quot;, &amp;quot;unused-imports&amp;quot;, &amp;quot;rulesdir&amp;quot;],
rules: {
  &amp;quot;no-debugger&amp;quot;: 1,
&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#3b5a37;color:#f8f8f8;&quot;&gt;+  complexity: [&amp;quot;error&amp;quot;, 10],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;  &amp;quot;no-undefined&amp;quot;: 1,
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>OpenWrt 旁路由的设置与使用</title>
		<published>2023-04-23T00:00:00+00:00</published>
		<updated>2023-04-23T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/openwrt/" type="text/html"/>
		<id>https://alanlang.me/practical/openwrt/</id>
		<content type="html">&lt;h2 id=&quot;bian-yi&quot;&gt;编译&lt;&#x2F;h2&gt;
&lt;p&gt;推荐直接使用 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;coolsnowwolf&#x2F;lede&quot;&gt;lede&lt;&#x2F;a&gt; 的固件，有很详细的编译教程。
同时可以借助 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;VIKINGYFY&#x2F;OpenWRT-CI&quot;&gt;OpenWRT-CI&lt;&#x2F;a&gt; 使用 GitHub Action 来进行编译。
或者直接下载别人编译后的固件使用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zai-pve-zhong-an-zhuang&quot;&gt;在 PVE 中安装&lt;&#x2F;h2&gt;
&lt;p&gt;选中PVE节点，点击“创建虚拟机”，填写虚拟机名称（例如Openwrt），然后点击下一步
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;OsT5D1ePdiISlX4.png&quot; alt=&quot;&quot; &#x2F;&gt;
CD&#x2F;DVD选择“不适用任何介质”，操作系统和版本默认即可，点击“下一步”。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;ST9MLsVEdnftDRy.png&quot; alt=&quot;&quot; &#x2F;&gt;
系统选项卡全部默认，点击“下一步”。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;aGT8IoQbpwLcnHA.png&quot; alt=&quot;&quot; &#x2F;&gt;
硬盘不用改，之后会删除，然后用刚刚上传的 img 镜像创建虚拟磁盘。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;eTrEyzXiNnPLdM1.png&quot; alt=&quot;&quot; &#x2F;&gt;
CPU核心数量按需添加，一般双核足够了。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;dLPO8F26MrSgmcw.png&quot; alt=&quot;&quot; &#x2F;&gt;
内存 256MB 以上都是够的，系统有富余就多加一点，一般不用超高 2GB，点击“下一步”
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;4mejZ1rGsw5x9IM.png&quot; alt=&quot;&quot; &#x2F;&gt;
网络设置先保持默认既可
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;IfmEuktKzH8g6TP.png&quot; alt=&quot;&quot; &#x2F;&gt;
最后确认信息，点击完成
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;lrdhZfDvL6g4nNb.png&quot; alt=&quot;image&quot; &#x2F;&gt;
分离不用的硬盘：选择刚刚创建的“Openwrt”虚拟机 &amp;gt;  硬件 &amp;gt; 硬盘(scsi0) &amp;gt; 点击“分离”。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;GlBVW6JejLOYQpa.png&quot; alt=&quot;image&quot; &#x2F;&gt;
删除不用的硬盘和光驱：选中“未使用的磁盘0”，点击“删除”；再用同样的方法删除不用的光驱。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;TimZQGSlBOeCUpy.png&quot; alt=&quot;image&quot; &#x2F;&gt;
接下来我们上传镜像文件，由于 OpenWrt 固件默认文件名称很长，为了方便后续的操作，我们将其重命名为 lede.img.gz
然后解压文件&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;gunzip lede.img.gz
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得到 lede.img，将其上传到 PVE 中备用。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;2kT7L6GYecwXV9a.png&quot; alt=&quot;&quot; &#x2F;&gt;
同时记录下文件上传的地址
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;ShBIqWyc6AwGxfm.png&quot; alt=&quot;image&quot; &#x2F;&gt;
把镜像转成虚拟磁盘并导入到虚拟机：选择“pve”节点 &amp;gt; shell &amp;gt; 输入以下命令并回车：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;qm importdisk 105 &#x2F;var&#x2F;lib&#x2F;vz&#x2F;template&#x2F;iso&#x2F;lede.img local-lvm
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中 105 为虚拟机的编号，后面为刚才记录的镜像地址
shell会显示虚拟磁盘创建的进度，最后显示‘Successfully imported disk as &#x27;unused0:local-lvm:vm-105-disk-0&#x27;就是添加成功了。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;K9C4HSEAh7np83t.png&quot; alt=&quot;image&quot; &#x2F;&gt;
导入成功后在‘Openwrt’虚拟机的“硬件”选项卡就能看到一个“未使用的磁盘0”，选中它点击编辑，弹出配置窗口，设备类型选“sata”，最后点击添加。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;fpGECPoYVK1Jz95.png&quot; alt=&quot;image&quot; &#x2F;&gt;
切换到虚拟机的“选项”选项卡，设置引导顺序。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;23&#x2F;TgYKXH6SJOWCPbe.png&quot; alt=&quot;image&quot; &#x2F;&gt;
最后启动 OpenWrt 软路由虚拟机，然后修改 ip 地址既可&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;vi &#x2F;ect&#x2F;config&#x2F;network
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;zai-shi-ti-ying-jian-zhong-an-zhuang&quot;&gt;在实体硬件中安装&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;an-zhuang-qian-zhun-bei&quot;&gt;安装前准备&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;软路由硬件&lt;&#x2F;li&gt;
&lt;li&gt;OpenWrt 固件&lt;&#x2F;li&gt;
&lt;li&gt;带 WePE 启动 U 盘&lt;&#x2F;li&gt;
&lt;li&gt;physdiskwrite.exe 写盘工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;将 OpenWrt 固件与 physdiskwrite.exe 工具拷贝至启动U盘，以作备用。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jin-ru-wepe-jie-mian&quot;&gt;进入 WePE 界面&lt;&#x2F;h3&gt;
&lt;p&gt;将启动 U 盘插到软路由上，启动后进入 BIOS 设置，将启动U盘设置为第一启动项，进入到WePE界面。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xie-ru-openwrt-xi-tong&quot;&gt;写入 OpenWrt 系统&lt;&#x2F;h3&gt;
&lt;p&gt;打开 U 盘中 OpenWrt 与 &lt;a href=&quot;https:&#x2F;&#x2F;m0n0.ch&#x2F;wall&#x2F;physdiskwrite.php&quot;&gt;physdiskwrite.exe&lt;&#x2F;a&gt; 所在的文件夹，在窗口输入cmd，进入命令行界面。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 1.physdiskwrite使用格式如下：
# physdiskwrite.exe -u [openwrt固件名称]，本例应输入如下命令：
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;physdiskwrite.exe -u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; openwrt-19.07.7-x86-64-combined-squashfs.img.gz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 2.回车确认执行，会提示选择哪硬盘进行安装，我的软路由只有一个硬盘，所以输入“0”即可
# 3.根据提示输入“yes”进行写盘操作
# 4.写入完成，拔下U盘，进行重启即可。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;pei-zhi-pang-lu-you&quot;&gt;配置旁路由&lt;&#x2F;h2&gt;
&lt;p&gt;我们设定主路由的 ip 地址为：192.168.1.1
旁路由的 ip 地址为：192.168.1.2&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-jie-kou&quot;&gt;设置接口&lt;&#x2F;h3&gt;
&lt;p&gt;如果需要后面让 AdGuard Home 接管 DNS，那么这边的 DNS 留空即可。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;24&#x2F;cKEZDdVGQ19O4fm.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;guan-bi-dhcp&quot;&gt;关闭 DHCP&lt;&#x2F;h3&gt;
&lt;p&gt;因为是作为旁路由使用，所以需要关闭 DHCP 服务。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;24&#x2F;JStMjYv7B68Dy4H.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiu-gai-fang-huo-qiang&quot;&gt;修改防火墙&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;04&#x2F;24&#x2F;fLk19XqB6dpojM3.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong-pang-lu-you&quot;&gt;使用旁路由&lt;&#x2F;h2&gt;
&lt;p&gt;在联网设备上，设置网关为 192.168.1.2，DNS 为 192.168.1.2 即可。
或者修改主路由的 DHCP，自动配置网关和 DNS 为 192.168.1.2&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tuo-zhan-wan-fa&quot;&gt;拓展玩法&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alanlang.me&#x2F;archives&#x2F;ros%E8%B7%AF%E7%94%B1%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97#%E4%B8%8Eopenwrt%E6%97%81%E8%B7%AF%E7%94%B1%E9%85%8D%E5%90%88&quot;&gt;利用 VRRP 和 ROS 主路由配合&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vernesong&#x2F;OpenClash&#x2F;discussions&#x2F;1420&quot;&gt;OpenClash 配合 AdGuard Home 使用&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>升级黑苹果到 Ventura</title>
		<published>2023-01-26T00:00:00+00:00</published>
		<updated>2023-01-26T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/ventura/" type="text/html"/>
		<id>https://alanlang.me/practical/ventura/</id>
		<content type="html">&lt;p&gt;一直信奉着『只要能正常跑就别去动它』的理念，所以自从 2022 年 6 月份组装了这台黑苹果后，就再也没怎么动过它。但是随着苹果系统的更新，现在已经到 13.1 的 Ventura 了。而现在黑苹果跑的还是 Catalina，好多 app 都已经不再支持这个系统的了，比如超级好用的输入法自动切换工具 Input Source Pro 最低要求 macOS 11 Big Sur 以上了。所以趁着过年放假这段时间，把这台黑苹果升级下系统。
升级系统之前首先要升级 OpenCore 的版本，最近 OpenCore 更新还是挺快的，周边配套的工具也慢慢丰富起来，这次要用到的工具就是黑苹果系统无痛OTA升级的利器：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ic005k&#x2F;OCAuxiliaryTools&quot;&gt;OCAuxiliaryTools&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bei-fen-efi-wen-jian&quot;&gt;备份 EFI 文件&lt;&#x2F;h2&gt;
&lt;p&gt;由于升级可能会遇到各种各样的问题，甚至还有可能升级失败，所以我们最好备份一下之前的 EFI 文件。这样即使升级失败了，我们还能回到原来。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gua-zai-efi-fen-qu&quot;&gt;挂载 EFI 分区&lt;&#x2F;h3&gt;
&lt;p&gt;使用 diskutil list 查看磁盘分区情况：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;diskutil list
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;dev&#x2F;disk0 (internal, physical):
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *251.0 GB   disk0
   1:                        EFI EFI                     314.6 MB   disk0s1
   2:                 Apple_APFS Container disk1         250.7 GB   disk0s2

&#x2F;dev&#x2F;disk1 (synthesized):
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      APFS Container Scheme -                      +250.7 GB   disk1
                                 Physical Store disk0s2
   1:                APFS Volume MacOS                   15.4 GB    disk1s1
   2:              APFS Snapshot com.apple.os.update-... 15.4 GB    disk1s1s1
   3:                APFS Volume Preboot                 321.3 MB   disk1s2
   4:                APFS Volume Recovery                1.1 GB     disk1s3
   5:                APFS Volume VM                      1.1 GB     disk1s4
   6:                APFS Volume MacOS - 数据            86.8 GB    disk1s5
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;执行挂载的命令&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;diskutil mount &#x2F;dev&#x2F;disk0s1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样就可以在磁盘上看到 EFI 这个目录了&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bei-fen-wen-jian&quot;&gt;备份文件&lt;&#x2F;h3&gt;
&lt;p&gt;我们需要把 EFI 里面所有的文件备份到安全的地方，比如 U 盘或其他网络存储中，这样后面如果升级遇到问题无法启动系统了，我们就可以用这个备份的 EFI 文件重新引导系统&lt;&#x2F;p&gt;
&lt;h2 id=&quot;geng-xin-opencore-he-kext&quot;&gt;更新 opencore 和 kext&lt;&#x2F;h2&gt;
&lt;p&gt;用 OCAT 打开导出的 EFI 文件夹中的 config.plist 文件，在 EFI OC 目录下。
点击上面的 升级 OpenCore 和 Kexts 按钮&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;pic3.zhimg.com&#x2F;80&#x2F;v2-f30e8aeb1825f843555cca5416ed3306_1440w.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;先选择 OpenCore 版本，选择“最新版”，然后点击 获取 OpenCore，让程序数据库从网上获取到最新版本的 OpenCore。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;pic4.zhimg.com&#x2F;80&#x2F;v2-0620d69f65d4fdc10e66646d7803665b_1440w.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;然后点击&lt;strong&gt;开始同步&lt;&#x2F;strong&gt;
OpenCore 同步好之后，然后就可以更新驱动 Kexts 了。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;pic2.zhimg.com&#x2F;80&#x2F;v2-27c9fa0d28d62bc9ef10bb4938e22e6d_1440w.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;检查完之后，版本号对比会出来，点击 更新 kexts，全部更新到最新版。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;pic4.zhimg.com&#x2F;80&#x2F;v2-a536caa71e3a309213d583cdc8e396d7_1440w.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;直到更新完之后，关掉这个同步页面。点击保存按钮，注意旁边的验证，如果文件没问题，这个验证是个勾的图标，否则是一个红色感叹号，点进去可以看提示哪里有问题，再进行调试。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fu-gai-espfen-qu-li-de-efiwen-jian&quot;&gt;覆盖ESP分区里的EFI文件&lt;&#x2F;h2&gt;
&lt;p&gt;EFI 修改完毕之后，重新把该目录拷贝到电脑之前挂载的 EFI 分区中，然后重启电脑。如果引导文件没有问题的话，这个时候会重新进入系统。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;otasheng-ji&quot;&gt;OTA升级&lt;&#x2F;h2&gt;
&lt;p&gt;这个时候可以在系统设置里直接检查更新，就能检查出 Ventura 的更新提示了，按提示更新就可以。接下来的步骤就是按提示一步步操作了。有时候进度条会完全一动不动，一直显示还有XX分钟，这时候不要急，安静等待会儿，系统并没有死机，不要取消或者强制关机，一会儿它自己会动并重启。
重启之后，原先的引导界面会多出来一个 Mac Os Installer 的选项，点进去，让它自己运行，EFI 文件没问题的话，它会自己安装完成后直接进入系统。
更新完成之后顺利进入系统，你就可以体验 Mac Os 13 Ventura了，桌面调度，还有类似于ios的设置界面等新功能都出现了，整体和之前版本差异不大。驱动一切正常，空投什么的都可以用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;总得来说升级还是很顺利的，本人的硬件信息以及 EFI 文件已上传到 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlanLang&#x2F;ASRock-Z390-Phantom-Gaming-ITXac-OpenCore-Hackintosh&quot;&gt;Github&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;相同配置的同学可以自己下载使用。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>码点与码元</title>
		<published>2023-01-12T00:00:00+00:00</published>
		<updated>2023-01-12T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/js/code-point-and-code-unit/" type="text/html"/>
		<id>https://alanlang.me/codes/js/code-point-and-code-unit/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;1o2PBcKCeS4iftj.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们知道 js 中的 &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Global_Objects&#x2F;String&#x2F;slice&quot;&gt;String.prototype.slice()&lt;&#x2F;a&gt; 方法可提取字符串的某个部分，并以新的字符串返回被提取的部分。但是下面这段代码就会有一些问题：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;你好呀😀JavaScript&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 想要取出 “Java”
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;但是打印的结果却是：&lt;code&gt;�Jav&lt;&#x2F;code&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;10&#x2F;sF9XVEaUgCZwh2d.png&quot; alt=&quot;&quot; &#x2F;&gt;
为什么会出现这个问题呢？
因为在很早的时候，JS 对字符的编码采用的编码规范是 ucs-2，这种规范规定每一个文字对应16位的空间，然后把这16位的空间成为码元。即一个文字对应一个码元。但是后来随着生僻字越来越多，还加入了一些 emoji 表情，16位的空间已经不够用了，于是 JS 把编码方式换成了 utf-16。utf-16 允许一个文字占用16位的空间，也可以运行一些文字占用32位的空间。而我们在 js 中使用的 &lt;code&gt;length&lt;&#x2F;code&gt; 属性实际上数的是码元的数量。
比如上面那段字符串，使用 &lt;code&gt;length&lt;&#x2F;code&gt; 属性取到的长度是 15。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;10&#x2F;vPtnLIVFsbaOzSm.png&quot; alt=&quot;&quot; &#x2F;&gt;
是因为 enmoji 占用了两个码元的位置。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;10&#x2F;vZEczXm4Lf6BAtH.png&quot; alt=&quot;&quot; &#x2F;&gt;
同样字符后面跟中括号取下标，也是指码元的下标。
回到上面的问题，到底怎么截取字符串才能满足我们的需求呢，我们可以自己写一个 sliceByPoint 的方法。在这个方法的实现中，需要用到两个方法：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String.prototype.codePointAt()&lt;&#x2F;code&gt; 返回一个 Unicode 编码点值的非负整数。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;String.fromCodePoint()&lt;&#x2F;code&gt; 返回使用指定的代码点序列创建的字符串。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;具体方法实现：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sliceByPoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pStart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pEnd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 截取的结果
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 码点的指针
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 码元的指针
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 结束条件：码点的指针到达指定位置 || 码元的指针到达数组的最后
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pEnd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;point &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;codePointAt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cIndex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 码点
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pStart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromCodePoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;point&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 按照码点来恢复文字
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pIndex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;point &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0xffff &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;不过还可以有更简单的实现方式，使用 es6 提供的 Array.from 处理&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sliceByPoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pStart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pEnd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pStart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pEnd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>个人工具箱（2023 年 1 月）</title>
		<published>2023-01-12T00:00:00+00:00</published>
		<updated>2023-01-12T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/tools/" type="text/html"/>
		<id>https://alanlang.me/practical/tools/</id>
		<content type="html">&lt;p&gt;看了 Yu Zhang 大佬的&lt;a href=&quot;https:&#x2F;&#x2F;www.pseudoyu.com&#x2F;zh&#x2F;2022&#x2F;05&#x2F;08&#x2F;personal_tools_in_2022_may&#x2F;&quot;&gt;个人工具箱（2022 年 5 月）&lt;&#x2F;a&gt;的博文，正巧自己也是一个工具控，所以仿照大佬的格式，也整理了下自己目前所用的所有工具，也希望能对其他人有所参考。&lt;&#x2F;p&gt;
&lt;aside class=&quot;info&quot;&gt;
    下文所提及的所有软件服务均为本人购买&amp;#x2F;订阅或学生资格所享有的教育授权，请支持正版！
&lt;&#x2F;aside&gt;
&lt;h2 id=&quot;zhu-yao-she-bei&quot;&gt;主要设备&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;11&#x2F;gW1aJZKDq3UldQk.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;computer-dian-nao-ji-pei-jian&quot;&gt;💻 电脑及配件&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apple iMac (2021) M1, 16GB RAM, 500GB SSD&lt;&#x2F;strong&gt; &lt;br&gt;家里的主力电脑，在家办公学习时的生产力工具，就是屏幕小了一点，应该再配个拓展屏&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;OpenCore Hackintosh，3.6 GHz 八核 Intel Core i7，16GB RAM，500GB SSD&lt;&#x2F;strong&gt; &lt;br&gt;
公司里的主力电脑，性能依旧能打&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple MacBook Pro (16-inch，2016) 银色，2.4 GHz 八核 Intel Core i7，16GB RAM，500GB SSD&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
刚毕业时买的笔记本，现在专门用在开会或出差时使用&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;戴尔（DELL）P2715Q 4K 显示器&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
公司台式机的显示器，用了好几年了，显示质量优异，性价比也还可以&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Rost 60 客制化键盘，蒂芙尼线性轴，文若素白键帽&lt;&#x2F;strong&gt;
最满意的一款客制化键盘，美观简约，配合自己刷的 qmk 固件能很大得提高生产力&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple Magic Keyboard 键盘，白色&lt;&#x2F;strong&gt;
买 iMac 时带的，主要用上面的指纹识别解锁电脑&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Glorious Model O 鼠标&lt;&#x2F;strong&gt;
主力鼠标，个人认为最好看的洞洞鼠，颜控福利&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple Magic Mouse 2 鼠标&lt;&#x2F;strong&gt;
买 iMac 时带的，没怎么用过&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple Magic Trackpad 触控板，白色&lt;&#x2F;strong&gt;
苹果的触摸板一直很好用，平时会配合鼠标使用，用在一些需要滑动的场景下&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;iphone-shou-ji-ji-ping-ban&quot;&gt;📱 手机及平板&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apple iPhone 13 mini 蓝色，128GB&lt;&#x2F;strong&gt;
个人作为小屏爱好者，这款手机符合我对手机所有的需求，是我最满意的苹果设备，不过从 14 开始苹果就砍掉了 mini 系列，后面可能买不到这么小巧的手机了&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple iPad Mini6 紫色，256GB&lt;&#x2F;strong&gt;
在家里时基本不会使用手机，而是使用 ipad 作为替代，主要用来观看文章和视频，还有刷推&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;video-game-xiu-xian-yu-le&quot;&gt;🎮 休闲娱乐&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;索尼 65X9500H HDR&lt;&#x2F;strong&gt;
体验最好的电视，无广告，和电视盒子配合良好，画质和音质体验都很不错&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;NVIDIA SHIELD TV Pro&lt;&#x2F;strong&gt;
地表最强的 Android 电视盒子&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple TV 4K&lt;&#x2F;strong&gt;
为了和家里的其他苹果设备紧密配合，最终还是换成了 Apple TV，用起来感觉比 SHIELD TV 流畅一点，整个界面及 APP 的 UI 也更加统一和谐&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Nintendo Switch 主机&lt;&#x2F;strong&gt;
之前一直用来玩动物森友会，目前已经吃灰很久了&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Nintendo Switch Pro 手柄&lt;&#x2F;strong&gt;
手感比 Joy-Con 好太多，主机模式下一般不会用 Joy-Con&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;XBox Series X&lt;&#x2F;strong&gt;
一口气购买了 3 年的 Xbox Game Pass，一大堆游戏随便玩，微软大气。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple HomePod mini 音箱 * 2&lt;&#x2F;strong&gt;
一开始作为家里电视的拓展音箱，但是可能因为个人耳朵的问题听不出音质的区别，所以现在拿到每个房间专门用来听歌了&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;小爱智能音箱&lt;&#x2F;strong&gt;
联动家里的各类智能家居&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;headphones-ke-chuan-dai-she-bei&quot;&gt;🎧 可穿戴设备&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apple Airpods Pro 降噪耳机&lt;&#x2F;strong&gt;
通勤必备，降噪体验不错，能够隔绝地铁上大部分噪音，不过用了两年了电池已经不行了&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Apple Watch Series4&lt;&#x2F;strong&gt;
为了记录健康数据并提醒我锻炼身体，然而并没有锻炼身体，目前用的最多的就是作为地铁卡使用，不用掏手机&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;package-wang-luo-ji-cun-chu&quot;&gt;📦 网络及存储&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MikroTik RB450Gx4&lt;&#x2F;strong&gt;
功能强大的 Ros 软路由，比 OpenWrt 稳定，目前作为家里的主路由&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;OpenWrt 软路由&lt;&#x2F;strong&gt;
作为家里的旁路由使用，主要负责广告过滤和科学上网等&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GLiNet MT1300&lt;&#x2F;strong&gt;
便携路由器，OpenWrt 系统，出差时使用&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Deco X68 * 2&lt;&#x2F;strong&gt;
作为每个房间里的 AP，支持 k&#x2F;v&#x2F;r 无线漫游。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Synology DS1821+&lt;&#x2F;strong&gt;
作为整个家庭的存储服务器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;unraid 主机&lt;&#x2F;strong&gt;
作为整个家庭的应用服务器&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;movie-camera-pai-zhao-she-ying&quot;&gt;🎥 拍照摄影&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DJI Mini 2&lt;&#x2F;strong&gt;
作为一款入门级无人机，一直还没有入门&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DJI OM 3&lt;&#x2F;strong&gt;
头脑一热就买了，不太好用&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zi-jian-fu-wu&quot;&gt;自建服务&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;12&#x2F;IRNEPpXczxgq2Fj.jpg&quot; alt=&quot;SCR-20230112-eod.jpeg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Plex Media Server&lt;&#x2F;strong&gt;
自建的流媒体服务，用于在手机平板和电视上观看剧集和电影&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Synology Drive&lt;&#x2F;strong&gt;
群晖自带的文件同步服务，类似于坚果云&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Synology Photos&lt;&#x2F;strong&gt;
群晖自带的图片同步服务&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;fava&lt;&#x2F;strong&gt;
Beancount 的 web 页面&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Nginx Proxy Manager&lt;&#x2F;strong&gt;
反向代理管理系统，它基于 NGINX，具有漂亮干净的 Web UI。还可以获得受信任的 SSL 证书，并通过单独的配置、自定义和入侵保护来管理多个代理&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;movie-rebot&lt;&#x2F;strong&gt;
配合 qBittorrent 和 Plex 实现家庭影音自动化，会自动监听我的豆瓣想看，并将媒体下载到 Plex 中&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Grafana&lt;&#x2F;strong&gt;
负责搭建一些常用的看板&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;vaultwarden&lt;&#x2F;strong&gt;
密码管理工具服务端&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;youtube-dl-server&lt;&#x2F;strong&gt;
用于下载 youtube、B 站 等媒体服务的视频&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Miniflux&lt;&#x2F;strong&gt;
用来管理 RSS 订阅&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;RSSHub&lt;&#x2F;strong&gt;
一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;qBittorrent&lt;&#x2F;strong&gt;
一款开源免费的种子和磁力链接下载工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dian-nao-ruan-jian&quot;&gt;电脑软件&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;xi-tong-tuo-zhan&quot;&gt;🛠 系统拓展&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AppCleaner&lt;&#x2F;strong&gt;
轻量级的 Mac 软件卸载工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;LaunchBar&lt;&#x2F;strong&gt;
一直在用的一款应用程序启动器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;QSpace&lt;&#x2F;strong&gt;
是一款简洁高效的多窗格文件管理器，并可扩展为 FTP、SFTP、WebDAV、OneDrive 客户端。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Fig&lt;&#x2F;strong&gt;
惊艳的终端自动补全工具，整合苹果原生 Terminal、iTerm2、VSCode 里的终端，支持 Git、文件夹、NPM、Kubernetes、Docker、AWS 等自动补全&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Rectangle&lt;&#x2F;strong&gt;
窗口管理工具，可以让用户使用键盘快捷键移动和调整 MacOS 中的窗口大小&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;iStat Menus&lt;&#x2F;strong&gt;
系统状态显示，主要显示 CPU、内存和网络等状态&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;CleanShot X&lt;&#x2F;strong&gt;
超级好用的截图工具，不止可以截图，还可以录屏&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;AltTable&lt;&#x2F;strong&gt;
窗口切换管理工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;memo-bi-ji-gong-ju&quot;&gt;📝 笔记工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Logseq&lt;&#x2F;strong&gt;
主力的生活记录、任务管理和笔记工具。基于双向链接打造了自己的信息管理系统，而且通过 Journal 以文本条目的形式记录没有心智负担&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Notion&lt;&#x2F;strong&gt;
主要作为个人数据库，作为软件订阅管理等数据类的记录&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MWeb Pro&lt;&#x2F;strong&gt;
用来写文章草稿，写完后会发布到博客等其他平台&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Typora&lt;&#x2F;strong&gt;
Markdown 编辑器，买了 MWeb Pro 后没怎么用过了&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-yong-gong-ju&quot;&gt;🧰 实用工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PicGo&lt;&#x2F;strong&gt;
图床管理工具，主要写博客的时候上传图片到图床并且生成自定义的 Markdown 格式，可以直接嵌入文章&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;BetterZip&lt;&#x2F;strong&gt;
压缩&#x2F;解压工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Rime 鼠须管&lt;&#x2F;strong&gt;
输入法&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Synology Drive&lt;&#x2F;strong&gt;
群晖官方的文件同步工具，类似于坚果云，数据会在自己家的群晖上&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;snowskin-tone-2-computer-kai-fa-gong-ju&quot;&gt;👨🏻‍💻 开发工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;编辑器
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VS Code&lt;&#x2F;strong&gt; 使用频率最高的代码编辑工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;neovim&lt;&#x2F;strong&gt; 优雅的 vim 编辑器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Xcode&lt;&#x2F;strong&gt; 用来开发 MacOS 和 iOS&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;终端
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;iTerm2&lt;&#x2F;strong&gt; 主力终端工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;服务器管理
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ssh&lt;&#x2F;strong&gt; 配合 Warp 和 iTerm2 的 Profile 来连接服务器用&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Transmit&lt;&#x2F;strong&gt; 用来和服务器之间拷贝文件&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;数据库管理
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SQLPro Studio&lt;&#x2F;strong&gt; 支持多种数据库的数据库管理工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;接口调试
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Postman&lt;&#x2F;strong&gt; 一直在用的接口调试工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;shou-ji-app&quot;&gt;手机 App&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;01&#x2F;12&#x2F;I86EhmyfPYwHQpB.png&quot; alt=&quot;ios 应用统计.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xi-tong-tuo-zhan-1&quot;&gt;🛠 系统拓展&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;熊猫吃短信&lt;&#x2F;strong&gt;
好用的短信过滤工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Due&lt;&#x2F;strong&gt;
强大的定时提醒工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Streaks&lt;&#x2F;strong&gt;
习惯养成工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Scriptable&lt;&#x2F;strong&gt;
可以自己制作一些好看的桌面小组件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bark&lt;&#x2F;strong&gt;
消息推送服务&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;closed-lock-with-key-an-quan-gong-ju&quot;&gt;🔐 安全工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bitwarden&lt;&#x2F;strong&gt;
密码管理工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Authy&lt;&#x2F;strong&gt;
双重验证工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;earth-asia-wang-luo-gong-ju&quot;&gt;🌏 网络工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Surge&lt;&#x2F;strong&gt;
代理工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Thor&lt;&#x2F;strong&gt;
抓包工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;SpeedTest&lt;&#x2F;strong&gt;
网络测速工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;memo-ji-lu-gong-ju&quot;&gt;📝 记录工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Notion&lt;&#x2F;strong&gt;
Notion IOS 客户端&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;flomo&lt;&#x2F;strong&gt;
记录闪念&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Things&lt;&#x2F;strong&gt;
记录代办，只用在身边没有电脑的时候，会同步到 Logseq 中&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;incoming-envelope-xin-xi-guan-li&quot;&gt;📨 信息管理&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cubox&lt;&#x2F;strong&gt;
稍候阅读工具，拥有良好的交互体验和强大的全文搜索功能&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Pocket&lt;&#x2F;strong&gt;
稍候阅读工具，用了 Cubox 后没再用过&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GitHub&lt;&#x2F;strong&gt;
GitHub iOS 客户端&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;&#x2F;strong&gt;
主要国外资讯获取与发布平台&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Reeder&lt;&#x2F;strong&gt;
聚合 RSS 阅读工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;ComicGlass&lt;&#x2F;strong&gt;
PDF 阅读工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;微信读书&lt;&#x2F;strong&gt;
看书&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;知乎&lt;&#x2F;strong&gt;
iOS 端&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;豆瓣&lt;&#x2F;strong&gt;
iOS 端&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;moneybag-jin-rong-li-cai&quot;&gt;💰 金融理财&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支付宝&lt;&#x2F;strong&gt;
日常最主要支付工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;天天基金&lt;&#x2F;strong&gt;
用来购买基金&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;东方财富&lt;&#x2F;strong&gt;
用来购买股票&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;招商银行&lt;&#x2F;strong&gt;
管理招商银行卡&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;掌上生活&lt;&#x2F;strong&gt;
管理招商银行信用卡&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;中国农业银行&lt;&#x2F;strong&gt;
管理农业银行卡&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;speech-balloon-tong-xun-she-jiao&quot;&gt;💬 通讯社交&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gmail&lt;&#x2F;strong&gt;
查收邮件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Telegram&lt;&#x2F;strong&gt;
订阅群组或聊天&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Instagram&lt;&#x2F;strong&gt;
发布拍摄的照片&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;微信&lt;&#x2F;strong&gt;
没办法不用，主要和家里人聊天&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;企业微信&lt;&#x2F;strong&gt;
工作需要&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;guitar-ying-yin-yu-le&quot;&gt;🎸 影音娱乐&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;YouTube&lt;&#x2F;strong&gt;
主要用的在线视频服务，购买了 Premium，用来看技术视频&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;nPlayer&lt;&#x2F;strong&gt;
播放手机本地的视频或者 NAS 里的视频&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Infuse&lt;&#x2F;strong&gt;
用来播放 Plex 里的视频，优势是可以播放蓝光原盘&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Plex&lt;&#x2F;strong&gt;
订阅了 Infuse 后没怎么用过了&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Spotify&lt;&#x2F;strong&gt;
主要的音乐播放器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Game Pass&lt;&#x2F;strong&gt;
用来给 Xbox 下载游戏&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;哔哩哔哩&lt;&#x2F;strong&gt;
观看番剧&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;小宇宙&lt;&#x2F;strong&gt;
听播客&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;snow-jian-kang-guan-li&quot;&gt;👨‍⚕️ 健康管理&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Workout&lt;&#x2F;strong&gt;
健身锻炼记录工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;喝水时间&lt;&#x2F;strong&gt;
记录喝水的工具，保证每天补充足够的水分&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shopping-trolley-gou-wu-xiao-fei&quot;&gt;🛒 购物消费&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;京东&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;淘宝&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;拼多多&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;肯德基&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;叮咚买菜&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;大众点评&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;饿了么&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;中国电信&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;交管 12123&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;咸鱼&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;食行生鲜&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;亚马逊购物&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;铁路 12306&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;淘票票&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;麦德龙&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;宜家家居&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;以上就是我在 2023 年 1 月所自用的工具箱，花了好几天，把电脑和手机的 App 都彻底整理分类了一遍，随着使用时间越来越长，一直在做减法，也在不断优化自己的使用，希望能够对大家有所参考。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao-zi-liao&quot;&gt;参考资料&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pseudoyu.com&#x2F;zh&#x2F;2022&#x2F;05&#x2F;08&#x2F;personal_tools_in_2022_may&#x2F;&quot;&gt;个人工具箱（2022 年 5 月）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>约束处理每一种情况</title>
		<published>2022-12-08T00:00:00+00:00</published>
		<updated>2022-12-08T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/ts-never/" type="text/html"/>
		<id>https://alanlang.me/codes/type/ts-never/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;8ziqyAHD2jhWFe6.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Bird &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;bird&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;wings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;dog&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fish &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;fish&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Animals &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Bird &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fish&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 获取动物的附肢数量
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;animalAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Animals&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;switch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;bird&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;wings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;dog&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 1 是尾巴
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fishAppendAges &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;animalAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;({ kind: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;fish&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, fins: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;});
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fishAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;看上面这个例子，我该怎么写才能保证 switch 语句里覆盖了本应该有的所有情况？&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-fzu5ke?file=index.ts&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Bird &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;bird&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;wings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;dog&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fish &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;fish&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Animals &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Bird &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Fish&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 获取动物的附肢数量
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;animalAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Animals&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;switch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;bird&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;wings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;dog&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;legs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 1 是尾巴
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;neverHappens&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;never &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;animal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;neverHappens&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fishAppendAges &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;animalAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;({ kind: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;fish&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, fins: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;});
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fishAppendAges&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们可以通过断言&lt;code&gt;never&lt;&#x2F;code&gt;类型的方法，如果一个联合类型在上面的代码都处理过了，那最终剩下的就可以断言成&lt;code&gt;never&lt;&#x2F;code&gt;，反过来说，如果联合类型不能被断言能&lt;code&gt;never&lt;&#x2F;code&gt;，就意味着没有被处理完全。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-v2q4l6?file=index.ts&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>工厂模式</title>
		<published>2022-12-04T00:00:00+00:00</published>
		<updated>2022-12-04T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/design/factory/" type="text/html"/>
		<id>https://alanlang.me/research/design/factory/</id>
		<content type="html">&lt;h2 id=&quot;dang-kan-dao-new-jiu-hui-xiang-dao-ju-ti&quot;&gt;当看到 new 就会想到 具体&lt;&#x2F;h2&gt;
&lt;p&gt;是的，当使用 new 时，的确是在实例化一个具体类，所以用的的确是实现，而不是接口。我们已经知道了代码绑定具体类会导致代码更脆弱，更缺乏弹性。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;zUKPHWkwL2ct3GE.png&quot; alt=&quot;&quot; &#x2F;&gt;
当有一群相关的具体类时，通常会写出这样的代码：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;jQet9GBr8uzH5Uq.png&quot; alt=&quot;&quot; &#x2F;&gt;
当看到这样的代码，一旦有变化或扩展，就必须重新打开这段代码进行检查和修改。通常这样修改过的代码将造成部分系统更难维护和更新，也更容易犯错。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;new-you-shi-yao-bu-dui-jing&quot;&gt;new 有什么不对劲？&lt;&#x2F;h2&gt;
&lt;p&gt;在技术上，new 没有错，毕竟这是面向对象编程的基础部分。真正的凡人是我们老朋友“改变”，以及它是如何影响 new 的使用的。
针对接口编程，可以隔离掉以后系统可能发生的一大堆改变。为什么？如果代码是针对接口而写，那么通过多态，它可以与任何新类实现该接口。但是，当代码使用大量的具体类时，等于是自找麻烦，因为一旦加入新的具体类，就必须改变代码。也就是说，你的代码并非“对修改关闭”。想用新的具体类型来拓展代码，就必须重新打开它。
所以该怎么办呢？当遇到这样的问题时，就应该回到 OO 设计原则去寻找线索。别忘了，我们的第一个原则就是用来处理改变，并帮助我们“找出会变化的方面，把它们从不变的部分分离出来”。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-bie-bian-hua-de-fang-mian&quot;&gt;识别变化的方面&lt;&#x2F;h2&gt;
&lt;p&gt;假设我们要实现一个披萨店
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;J1OlDuEBp7APv5y.png&quot; alt=&quot;J1OlDuEBp7APv5y&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dan-shi-ni-xu-yao-geng-duo-pi-sa-lei-xing&quot;&gt;但是你需要更多披萨类型&lt;&#x2F;h3&gt;
&lt;p&gt;我们必须增加一些代码，来“决定”适合的披萨类型，然后在“制造”这个披萨。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;QFqBEyW6bpmvswD.png&quot; alt=&quot;QFqBEyW6bpmvswD&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dan-shi-ya-li-lai-zi-yuan-geng-duo-de-pi-sa-lei-xing&quot;&gt;但是压力来自远更多的披萨类型&lt;&#x2F;h3&gt;
&lt;p&gt;比如我们要更新我们的披萨菜单，要新增几个披萨类型，然后移除几个已有的披萨。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;CWFpPtBw1e2YmIE.png&quot; alt=&quot;CWFpPtBw1e2YmIE&quot; &#x2F;&gt;
很明显的，如果实例化“某些”具体类，将使 orderPizza 出现问题，而且也无法让 orderPizza 对修改关闭。但是，现在我们已经知道哪些会改变，哪些不会改变，该是时候使用封装的时候了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;feng-zhuang-chuang-jian-dui-xiang-de-dai-ma&quot;&gt;封装创建对象的代码&lt;&#x2F;h3&gt;
&lt;p&gt;现在最好将创建对象移动到 orderPizza 之外：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;xeFoUNS5QADyT6C.png&quot; alt=&quot;xeFoUNS5QADyT6C&quot; &#x2F;&gt;
&lt;strong&gt;我们称这个新对象为“工厂”&lt;&#x2F;strong&gt;
工厂（factory）处理创建对象的细节。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jian-li-yi-ge-jian-dan-pi-sa-gong-han&quot;&gt;建立一个简单披萨工厂&lt;&#x2F;h3&gt;
&lt;p&gt;先从工厂本身开始，我们定义一个类，为所有披萨封装创建对象的代码。代码像这样......
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;pBtof8nCvL6s7S5.png&quot; alt=&quot;pBtof8nCvL6s7S5&quot; &#x2F;&gt;
这样我们就可以改造刚才的代码了
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;jS5VZFEetdGMasR.png&quot; alt=&quot;jS5VZFEetdGMasR&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ding-yi-jian-dan-gong-han&quot;&gt;定义简单工厂&lt;&#x2F;h2&gt;
&lt;p&gt;简单工厂并不是一个设计模式，反而比较像是一种编程习惯。有些开发人员的确是把这个编程习惯误认为是“工厂模式”。但是不要因为简单工厂不是一个“真正的”模式，就忽略了它的用法。让我们来看看新的披萨店类图。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;1qDOG6UxoCPuBm3.png&quot; alt=&quot;1qDOG6UxoCPuBm3&quot; &#x2F;&gt;
谢谢简单工厂来为我们暖身。接下来登场的是两个重量级的模式，它们都是工厂。
但是别担心，未来还有更多的披萨！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jia-meng-pi-sa-dian&quot;&gt;加盟披萨店&lt;&#x2F;h2&gt;
&lt;p&gt;现在披萨店经营有成，好多地方想加盟我们的披萨店，但是由于不同的地方的披萨做的都有大大小小的差异，所以我们希望建立一个框架，把加盟店和创建披萨绑在一起的同时又保持一定的弹性。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gei-pi-sa-dian-shi-yong-de-kuang-jia&quot;&gt;给披萨店使用的框架&lt;&#x2F;h3&gt;
&lt;p&gt;我们把 createPiza 方法放回到 PizzaStore 中，不过要把它设置成“抽象方法”，然后为每个地区创造一个 PizzaStore 的子类。
首先，看看 PizzaStore 所做的改变：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;gVwkZ8zvLcN4TQH.png&quot; alt=&quot;gVwkZ8zvLcN4TQH&quot; &#x2F;&gt;
现在已有一个 PizzaStore 作为超类；让每个区域（NYPizzaStore，ChicagoPizzaStore，CaliforniaPizzaStore）都继承这个 PizzaStore，每个子类各自决定如何制造披萨。让我们看看这要如何运行。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;BUkKTDYpPl9z2sF.png&quot; alt=&quot;BUkKTDYpPl9z2sF&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rang-wo-men-kai-yi-jia-jia-meng-dian-ba&quot;&gt;让我们开一家加盟店吧&lt;&#x2F;h3&gt;
&lt;p&gt;开加盟店有它的好处，可以从 PizzaStore 免费取得所有的功能。区域店只需要继承 PizzaStore，然后提供 createPizza() 方法实现自己的披萨风味即可。
这是纽约风味：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;Js1khuWpQFweIbn.png&quot; alt=&quot;Js1khuWpQFweIbn&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gong-han-fang-fa-mo-shi&quot;&gt;工厂方法模式&lt;&#x2F;h2&gt;
&lt;p&gt;我们可以看到刚才的设计，我们把原本由一个对象负责所有具体类的实例化，现在通过对 PizzaStore 做一些转变，编程由一群子类负责实例化。工厂方法模式（Factory Method Pattern）通过让子类决定该创建的对象是什么，来达到对象创建的过程封装的目的。让我们来看看这些类图，以了解由哪些组成元素：
创建者（creator）类
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;UfNwlJBqcLPXDQj.png&quot; alt=&quot;UfNwlJBqcLPXDQj&quot; &#x2F;&gt;
产品类
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;eW4ukNFazjEwn25.png&quot; alt=&quot;eW4ukNFazjEwn25&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ding-yi-gong-han-fang-fa-mo-shi&quot;&gt;定义工厂方法模式&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;工厂方法模式 定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。
工厂方法让类把实例化推迟到子类。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;P7boq4vLMHCIQjf.png&quot; alt=&quot;P7boq4vLMHCIQjf&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yi-ge-hen-yi-lai-de-pi-sa-dian&quot;&gt;一个很依赖的披萨店&lt;&#x2F;h2&gt;
&lt;p&gt;假设我们从来没有听说过工厂模式，下面是一个不使用工厂模式的披萨店。数一数，这个类所依赖的具体披萨对象有几种。如果又加了一种加州风味披萨到这个披萨店中，那么届时又会依赖几个对象？&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;DependentPizzaStore &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;style &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;NY&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;cheese&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYCheesePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;veggie&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYVeggiePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;clam&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYClamPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;pepperoni&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYPepperoniPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      }
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Chicago&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;cheese&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ChicagoCheesePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;veggie&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ChicagoVeggiePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;clam&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ChicagoClamPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;pepperoni&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ChicagoPepperoniPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
      }
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;prepare&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;bake&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;cut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;kan-kan-dui-xiang-yi-lai&quot;&gt;看看对象依赖&lt;&#x2F;h3&gt;
&lt;p&gt;当你直接实例化一个对象时，就是在依赖它的具体类。看看上面这个依赖性很高的披萨店的例子，它由披萨店类来创建所有的披萨对象，而不是委托给工厂。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;wxtcHviIsCVnA6p.png&quot; alt=&quot;wxtcHviIsCVnA6p&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yi-lai-dao-zhi-yuan-ze&quot;&gt;依赖倒置原则&lt;&#x2F;h3&gt;
&lt;p&gt;很清楚的，代码里减少对于具体类的依赖是件好事。事实上，还一个 OO 设计原则就正式阐明了这一点，这个原则设置还有一个响亮又正式的名字：依赖倒置原则（Dependency Inversion Principle）。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;设计原则
要依赖抽象，不要依赖具体类。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;即：不能让高层组件依赖低层组件，而且，不管高层或低层组件，两者都应该依赖于抽象。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yuan-ze-de-ying-yong&quot;&gt;原则的应用&lt;&#x2F;h3&gt;
&lt;p&gt;非常依赖披萨店的主要问题在于：它依赖每个披萨的类型。因为它是在自己的 orderPizza() 方法中，实例化这些具体类的。虽然我们已经创建了一个抽象，也就是 Pizza，但是我们仍在代码中，实际地创建了具体的 Pizza，所以，这个抽象没什么影响力。
而应用工厂方法之后，依赖关系就变成了这样：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;miN9aMxbRQrS7uY.png&quot; alt=&quot;miN9aMxbRQrS7uY&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yi-lai-dao-zhi-yuan-ze-jiu-jing-dao-zhi-zai-liao-na-li&quot;&gt;依赖倒置原则，究竟倒置在了哪里？&lt;&#x2F;h3&gt;
&lt;p&gt;在依赖倒置原则中的倒置指的是和一般 OO 设计的思考方式完全相反。看上面的两个图，你会注意到低层组件现在竟然依赖高层组件的抽象。同样的，高层组件现在也依赖相同的抽象。之前第一张图的依赖图是自上而下的，现在却倒置了，而且高层与低层代码现在都依赖这个抽象。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kai-shi-ba-kong-pi-sa-dian-de-yuan-liao&quot;&gt;开始把控披萨店的原料&lt;&#x2F;h2&gt;
&lt;p&gt;披萨店开的很成功，为了进一步把控质量，我们现在需要控制每家披萨店的原料。现在唯一的问题就是加盟店坐落在不同的区域，不同区域的相同披萨对应的原料是不一致的，那么我们该怎么解决这个问题？&lt;&#x2F;p&gt;
&lt;h3 id=&quot;da-jian-yuan-liao-gong-han&quot;&gt;搭建原料工厂&lt;&#x2F;h3&gt;
&lt;p&gt;现在，我们要建造一个工厂来生产原料，这个工厂负责创建所有区域店披萨的每一种原料。也就是说，工厂将需要生产面团，酱料，芝士等。等会儿，你就知道如何处理各个区域的差异来。
开始先为工厂定义一个接口，这个接口负责创建所有的原料：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PizzaIngredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createDough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createSauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Sauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createCheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Cheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createVeggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Veggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[];
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createClam&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Clams&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;要做的事情是：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;为每个区域建造一个工厂。你需要创建一个继承自 PizzaIngredientFactory 的子类来实现每一个创建方法。&lt;&#x2F;li&gt;
&lt;li&gt;实现一组原料类供工厂使用，例如 ReggianoCheese，RedPeppers，ThickCrustDough。这些类可以在合适的区域内使用。&lt;&#x2F;li&gt;
&lt;li&gt;然后你仍然需要将这一切组合起来，将新的原料工厂整合进旧的 PizzaStore 代码中。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;chuang-jian-niu-yue-yuan-liao-gong-han&quot;&gt;创建纽约原料工厂&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYPizzaIngredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;PizzaIngredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createDough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dough &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ThinCrustDough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createSauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Sauce &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MarinaraSauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createCheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Cheese &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ReggianoCheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createVeggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Veggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[] {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Garlic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Onion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Mushroom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;RedPepper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()];
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pepperoni &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SlicedPepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createClam&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Clams &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FreshClams&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;zhong-zuo-pi-sa&quot;&gt;重做披萨&lt;&#x2F;h3&gt;
&lt;p&gt;工厂已经一切就绪，准备生产高质量原料了，现在我们只需要重做披萨，好让它们只使用工厂生产出来的原料，我们先从抽象的 Pizza 类开始：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;abstract class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;dough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Dough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Sauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;veggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Veggies&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[];
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Cheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pepperoni&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clam&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Clams&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public abstract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;prepare&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;bake&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Bake for 25 minutes at 350&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;cut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Cutting the pizza into diagonal slices&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Place pizza in official PizzaStore box&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;每个披萨都持有一组在准备时会用到的原料。&lt;&#x2F;li&gt;
&lt;li&gt;现在把 prepare() 方法声明成抽象。在这个方法中，我们需要收集披萨所需的原料，而这些原料当然来自于原料工厂。&lt;&#x2F;li&gt;
&lt;li&gt;其他的方法保持不变，只要 prepare() 方法需要改变。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;具体的 Pizza 则是这样：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;CheesePizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PizzaIngredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PizzaIngredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;prepare&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`Preparing ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;dough &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createDough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sauce &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createSauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cheese &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createCheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;要制作披萨，需要工厂提供原料。所以每个披萨类都需要从构造函数参数中得到一个工厂，并把这个工厂存在一个实例变量中。&lt;&#x2F;li&gt;
&lt;li&gt;prepare() 方法一步一步地创建芝士披萨，每当需要原料时，就跟工厂要。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;同样可以在实现一个蛤蜊披萨&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ClamPizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PizzaIngredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PizzaIngredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;prepare&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`Preparing ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;dough &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createDough&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;sauce &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createSauce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;cheese &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createCheese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clam &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createClam&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a name=&quot;PLSzk&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zai-xiu-gai-pi-sa-dian-de-shi-xian&quot;&gt;再修改披萨店的实现&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYPizzaStore &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;PizzaStore &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYPizzaIngredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;cheese&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYCheesePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;New York Style Cheese Pizza&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;veggie&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYVeggiePizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;New York Style Veggie Pizza&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;clam&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYClamPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;New York Style Clam Pizza&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;pepperoni&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NYPepperoniPizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ingredientFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;New York Style Pepperoni Pizza&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pizza&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;纽约店会用到纽约披萨原料工厂，由该工厂负责生产所有纽约风味披萨所需的原料&lt;&#x2F;li&gt;
&lt;li&gt;把工厂传递给每一个披萨，以便于披萨能从工厂中获取原料&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wo-men-zuo-liao-shi-yao&quot;&gt;我们做了什么？&lt;&#x2F;h3&gt;
&lt;p&gt;一连串的代码改变，我们到底做了什么？&lt;br &#x2F;&gt;我们引入新的类型的工厂，也就是所谓的抽象工厂，来创建披萨原料&lt;br &#x2F;&gt;通过抽象工厂所提供的接口，可以创建原料，利用这个接口书写代码，我的的代码从实际工厂中解耦，以便在不同的上下文中实现各式各样的工厂，制造出各种不同的产品。&lt;br &#x2F;&gt;因为代码从实际的产品中解耦了，所以我们可以替换不同的工厂来取得不同的行为。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ding-yi-chou-xiang-gong-han-mo-shi&quot;&gt;定义抽象工厂模式&lt;&#x2F;h2&gt;
&lt;p&gt;我们又在模式家族里新增了另一种工厂模式，这个模式可以创建产品的家族。看看这个模式的正式定义：
&amp;gt;&lt;strong&gt;抽象工厂模式&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;提个一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。&lt;&#x2F;p&gt;
&lt;p&gt;抽象工厂允许客户使用抽象的接口来创造一组相关的产品，而不需要知道实际产出的具体产品是什么。这样一来，客户就从具体的产品中被解耦。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;Ix9viQkcYo1mDR4.png&quot; alt=&quot;Ix9viQkcYo1mDR4&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bi-jiao-gong-han-fang-fa-he-chou-xiang-gong-han&quot;&gt;比较工厂方法和抽象工厂&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gong-han-fang-fa&quot;&gt;工厂方法&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;4jsEfydSFgILvNq.png&quot; alt=&quot;4jsEfydSFgILvNq&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chou-xiang-gong-han&quot;&gt;抽象工厂&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;12&#x2F;04&#x2F;RJ5w4jLOWTYvikV.png&quot; alt=&quot;RJ5w4jLOWTYvikV&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yao-dian&quot;&gt;要点&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;所有的工厂都是用来封装对象的创建&lt;&#x2F;li&gt;
&lt;li&gt;简单工厂，虽然不是真正的设计模式，但仍不失为一个简单的方法，可以将客户程序从具体类中解耦&lt;&#x2F;li&gt;
&lt;li&gt;工厂方法使用继承：把对象的创建委托给子类，子类实现工厂方法来创建对象&lt;&#x2F;li&gt;
&lt;li&gt;抽象工厂使用对象组合：对象的创建被实现在工厂接口所暴露出来的方法中&lt;&#x2F;li&gt;
&lt;li&gt;所有工厂模式都通过减少应用程序和具体类之间的依赖促进松耦合&lt;&#x2F;li&gt;
&lt;li&gt;工厂方法允许类将实例化延迟到子类进行&lt;&#x2F;li&gt;
&lt;li&gt;抽象工厂创建相关的对象家族，而不需要依赖它们的具体类&lt;&#x2F;li&gt;
&lt;li&gt;依赖倒置原则，指导我们避免依赖具体类，而要尽量依赖抽象&lt;&#x2F;li&gt;
&lt;li&gt;工厂是很有威力的技巧，帮助我们针对抽象编程，而不要针对具体类编程&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>响应式编程入门</title>
		<published>2022-11-09T00:00:00+00:00</published>
		<updated>2022-11-09T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/reactive-programming/" type="text/html"/>
		<id>https://alanlang.me/research/reactive-programming/</id>
		<content type="html">&lt;h2 id=&quot;shi-yao-shi-xiang-ying-shi-bian-cheng&quot;&gt;什么是响应式编程&lt;&#x2F;h2&gt;
&lt;aside class=&quot;info&quot;&gt;
    直接举个 🌰
&lt;&#x2F;aside&gt;
&lt;p&gt;比如我们有个需求，要统计发送 http 请求的次数，那么意味着我们会有两个模块，一个是 http request 用于发送 http 请求，一个是 counter 用于统计次数。其实我们的需要就是当 http 请求发送时，counter 会执行某个方法令其记录的数据 +1。
最直接的方法就是这样：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;HttpRequest &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(){
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 实际发送 http 请求的实现
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;counter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;increment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;当 send 方法被调用时，直接执行 &lt;code&gt;counter.increment()&lt;&#x2F;code&gt;，这样 counter 内的数据就 +1 了，然后我们的需求就做完了。
当时我们仔细想想，作为一个 http 模块，它要做的事情应该只是发送一个 http 的请求，它为什么要关心计数的问题，计数明明应该是 counter 需要关心的事情。这样写的话，其实 http 模块和 counter 模块其实是耦合在一起的。
那么我们换个思路来想，既然说计数这个事情应该是由 counter 来做，那么 counter.increment() 的行为是不是应该 counter 自己来调用。
怎么实现呢：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;HttpRequest &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(){
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 实际发送 http 请求的实现
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;eventBus&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;emit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;requestDone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Counter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(){
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;eventBus&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;requestDone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;increment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    })
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样的话，counter 的 increment 就可以是一个私有方法，就不会被外部去改变。而 http 模块也不再需要知道 counter 模块，它只需要完成自己的本职工作就可以了（发送 http 请求）。
所以响应式编程的优势是什么？就是我们软件工程一直提倡的：&lt;strong&gt;关注度分离&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qian-duan-de-xiang-ying-shi-bian-cheng&quot;&gt;前端的响应式编程&lt;&#x2F;h2&gt;
&lt;p&gt;其实大家作为前端开发人员，我相信大家都已经接触过响应式编程了。因为我们现在主流的前端框架都是响应式的。联想一下，在各个前端框架中，我们现在要改变视图，不是用 jquery 命令式地去改变 dom，而是通过 setState()，修改 this.data 或修改 $scope.data...。我们修改的明明只是数据，但是只要数据更新了，我们就不用管了，这些前端框架会自动帮我们把数据渲染成视图。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;QoDOgMBjyqY3edR.png&quot; alt=&quot;20221109183505@2x&quot; &#x2F;&gt;
所以有了这些响应式的框架，我们平时开发的心智模型降低了很多，我们只需要去操作数据就可以了，然而，修改数据这件事听着就很像命令式，尤其是随着产品功能越来越复杂，我们要管理的状态也越来越庞大，如果每个地方都可以随意修改这些状态的话，这些状态就会变得越来越不可控，越来越难以追溯。所以当我们开始使用这些响应式的前端框架开发比较大型的项目时，状态管理尤为重要，如果还是以之前命令式的思想去修改状态，无非是从一个地狱跳入到另一个地狱。
为了解决管理状态这个痛点，好多状态管理的库应运而生，不管是 Redux 还是 Mobx，他们解决的方向都是为了让状态的变化可预测，另外再提供一些撤销&#x2F;重做，时间旅行等附加功能。当时他们都没有解决状态从产生变化再实际 set state 的这段过程该怎么管理。所以我们还是免不了写一大堆命令式的代码去修改状态。
既然现在主流的框架都是响应式的，我们也慢慢摒弃了 jquery 这种命令式的开发视图的模式，说明响应式对于我们前端开发来说是适合的，那么既然视图的更新我们已经做到了响应式的，是不是数据的更新也可以弄成响应式的？视图的响应式开发让我们避免了操作 DOM，而数据的响应式开发则会让我们避免操作 store。我们只需要关心数据的来源即可，来源的数据产生了变化，store 自然而然会跟着变化。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zen-yao-shi-xian-xiang-ying-shi-bian-cheng&quot;&gt;怎么实现响应式编程&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;EventBus&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Global_Objects&#x2F;Object&#x2F;defineProperties&quot;&gt;Object.defineProperties&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Global_Objects&#x2F;Proxy&quot;&gt;ES2015 Proxy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Streams (with some libraries like RxJS,xstream)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;今天我们主要讲最后一个实现方式：数据流&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yao-shi-shu-ju-liu-stream&quot;&gt;什么是数据流 Stream&lt;&#x2F;h2&gt;
&lt;p&gt;大家都知道数组，数组是什么？是内存中的一片空间来存储我们数据的数据结构。所以数组是空间上的序列。
而数据流，则是时间上的数据序列。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;ZpXj6QilmGNcfOT.png&quot; alt=&quot;20221109183637@2x&quot; &#x2F;&gt;
有了数据流之后可以做什么呢？还是继续和数组来对比。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;map-cao-zuo&quot;&gt;map 操作&lt;&#x2F;h3&gt;
&lt;p&gt;数组可以通过 map，把一个数据转换成另一个数组：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;xp3Y14y2aPi59uN.png&quot; alt=&quot;20221109183745@2x&quot; &#x2F;&gt;
而数据流也可以通过 map，把一个数据流转换成另一个数据流：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;SiWqd9rzbZFj3eG.png&quot; alt=&quot;20221109183825@2x&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;filter-cao-zuo&quot;&gt;filter 操作&lt;&#x2F;h3&gt;
&lt;p&gt;数组还可以通过 filter，生成一个新数组，数据为过滤后的结果：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;11&#x2F;lN5rBf1wSs7To3v.png&quot; alt=&quot;20221111091214@2x&quot; &#x2F;&gt;
数据流同样也可以，通过 filter 来生成一个新数据流，数据为过滤后的结果：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;11&#x2F;AdjD3YQaxNyVi91.png&quot; alt=&quot;20221111091304@2x&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-jian-wei-du-de-chu-li&quot;&gt;时间维度的处理&lt;&#x2F;h3&gt;
&lt;p&gt;相比于数组，由于数据流是时间概念的，所以还可以做一些和时间有关的操作
比如我生成一个新的数据流，相比于之前的数据流延迟 2s
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;dMTDa5yEiXwv2Hc.png&quot; alt=&quot;20221109184121@2x&quot; &#x2F;&gt;
或者按照时间顺序，合并两个数据流
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;ButOjbHolLDrXZ1.png&quot; alt=&quot;20221109184230@2x&quot; &#x2F;&gt;
RxJS 中内置了许多用于操作数据流的操作符，基本满足我们日常的使用，即使不满足，我们也可以自己写操作符。
https:&#x2F;&#x2F;rxjs.dev&#x2F;api&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shu-ju-shi-ru-he-chan-sheng-de&quot;&gt;数据是如何产生的&lt;&#x2F;h2&gt;
&lt;p&gt;我们先看一下 React 是怎么渲染页面的：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-tsx&quot; data-lang=&quot;tsx&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ReactDOM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createRoot&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;root&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;render&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6486ab;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;App &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6486ab;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其实就是这个 render 方法，这个方法只会在加载时执行一次，我们传入一个 &lt;code&gt;&amp;lt;App &#x2F;&amp;gt;&lt;&#x2F;code&gt;
而 &lt;code&gt;&amp;lt;App &#x2F;&amp;gt;&lt;&#x2F;code&gt;是什么？我们都知道，它就是一个函数，函数签名是&lt;code&gt;function App():JSX.Element&lt;&#x2F;code&gt;
这个函数没有参数，但是返回的结果每次都不一样，所以这个函数不是纯函数，说明是有副作用导致了这个函数里面的数据发生了变化，从而令这个函数返回不同的内容，那么这些副作用，就是产生数据的地方，他们是可以枚举的：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Event - 浏览器的一系列原生事件&lt;&#x2F;li&gt;
&lt;li&gt;XHR - XMLHttpRequest&lt;&#x2F;li&gt;
&lt;li&gt;Timers - setTimeout( ) 、setInterval( )&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;那么我们只要管理好这些数据变化的来源，再保证数据的流转过程，这样整个数据变化又变成了一个纯函数，即只要我们知道了来源的数据变更，就一定能推断出最终的结果。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;2ucdvQhqZbL4Oya.png&quot; alt=&quot;20221109184617@2x&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yi-xie-xiao-de-ying-yong-shi-li&quot;&gt;一些小的应用示例&lt;&#x2F;h2&gt;
&lt;p&gt;响应式编程提高了代码的抽象层级，所以你可以只关注定义了业务逻辑的那些相互依赖的事件，而非纠缠于大量的实现细节。RP 的代码往往会更加简明。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-li-yi&quot;&gt;示例一&lt;&#x2F;h3&gt;
&lt;p&gt;如果我想每点击一次就打印一句“Clicked”，我们一般都会这样写：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, () &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Clicked!&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;很直观很简洁，没有什么问题。
如果用响应式的方式去实现，则会是这样：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Clicked!&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;大家可能看着没什么区别，感觉就是 api 的名称变了而已，那我稍微换一下写法：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clickEvent$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clickEvent$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Clicked!&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样大家可能就能看出不一样的地方了，前者是监听了一个事件，所后面所有的事情都只能在事件的回调函数里面处理。而我后者则是订阅的数据流，我所有的业务逻辑，都可以通过改变这个数据流来实现。
比如说，我开始有新需求了，我想统计我点击次数，每次点击打印的内容 + 1。
按照之前命令式的写法，我们会这样写：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, () &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`Clicked ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;} times`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这下好了，我们需要维护状态了，因为我们需要保存一下之前打印的内容，从而在新打印的时候 + 1。
命令式编程就是这样，先定义数据，然后通过指令改变数据。
如何用响应式写法去做呢：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;scan &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
  .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;scan&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;))
  .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`Clicked ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;} times`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;看，依然是一个纯函数，我们不再需要维护一个类似 count 的状态。&lt;&#x2F;p&gt;
&lt;p&gt;继续，我们再添加新的需求：我想限制一秒内只能点击一次
换成命令式的写法该怎么做？我们又需要维护一个状态，来保存上一次点击的时间，然后在点击触发的时候判断两次时间有没有超过一秒，如果未超过，就不打印东西。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;conut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastClick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, () &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastClick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`你点击了${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;conut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}次`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastClick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;现在，我们已经需要维护两个状态了。而随着功能迭代越来越多，不可避免得我们要维护的状态也会越来越多。而命令式编程带来的问题就是每条命令都是离散的，我们如果想了解一段代码的逻辑，就只能跟着代码运行的过程一条一条去看。代码多了，一个代码块里就可能会参杂好几处逻辑，我们代码的可读性就会变得越来越差。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;of&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;throttleTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;scan&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clickEvent$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;click&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clickEvent$
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;throttleTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;),
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;scan&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
  )
  .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`你点击了${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}次`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而反观响应式的编程方式，基本上就是靠纯函数的组合来实现业务逻辑，读代码时也不需要安装代码执行的步骤一条一条去看，因为每个函数都是自描述的，就像是用一些单词，拼成了一条完整的句子。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-li-er&quot;&gt;示例二&lt;&#x2F;h3&gt;
&lt;p&gt;实现一个简单的拖拽功能&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;box&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 获取鼠标点击时在 div 中的相对位置
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;onmousedown &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;relaX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;relaY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 获取当前鼠标位置，减去与 div 的相对位置得到当前 div 应该被拖拽的位置
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;onmousemove &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, { x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;relaX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, y: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;relaY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;});
  };
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;onmouseup &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;onmousemove &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;onmouseup &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  };
};
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-8pa41d?file=index.ts&lt;&#x2F;p&gt;
&lt;p&gt;如果用数据流编程的思路，改怎么做。
首先分析一下，为了相应地移动小方块，我们需要知道的信息有：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;小方块被拖拽时的初始位置&lt;&#x2F;li&gt;
&lt;li&gt;小方块在被拖拽着移动时，需要移动到的新位置&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;而怎么理解拖拽呢？我们可以用弹珠图来直观得表示：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;qLEce3UIViRPJGY.png&quot; alt=&quot;20221109185017@2x&quot; &#x2F;&gt;
这样我们就可以很直观的看出，drag 的数据流，就是取鼠标按下和抬起之间的 mousemove 数据流就可以了，这么我们只需要按照我们的思路操作数据流即可，而 RxJS 内置的操作符则方便了我们的操作。
http:&#x2F;&#x2F;reactivex.io&#x2F;rxjs&#x2F;class&#x2F;es6&#x2F;Observable.js~Observable.html#instance-method-switchMap
http:&#x2F;&#x2F;reactivex.io&#x2F;rxjs&#x2F;class&#x2F;es6&#x2F;Observable.js~Observable.html#instance-method-takeUntil&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;box&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousedown&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousemove&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mouseup&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      pos: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;),
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    };
  }),
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
          x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
          y: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        };
      }),
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
    );
  })
);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;rxjs-6jxpu7?devtoolsheight=60&amp;amp;file=index.ts&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tian-jia-chu-shi-yan-chi&quot;&gt;添加初始延迟&lt;&#x2F;h3&gt;
&lt;p&gt;需求：在拖拽的实际应用中，有时会希望有个初始延迟。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;of &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;box&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousedown&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousemove&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mouseup&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;of&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;({
      pos: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;),
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    }).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;));
  }),
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
          x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
          y: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        };
      }),
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
    );
  })
);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;tuo-zhuai-jie-long&quot;&gt;拖拽接龙&lt;&#x2F;h3&gt;
&lt;p&gt;实现拖动一个方块时，其他方块会在一定的延迟后跟着拖动的方块一起动。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;11&#x2F;09&#x2F;FejibpRt1zdUAur.png&quot; alt=&quot;20221109185425@2x&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;interval&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mergeMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;tap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;rxjs&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;headBox &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;head&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;boxes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;getElementsByClassName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;box&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;headBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousedown&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mousemove&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fromEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;mouseup&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;delayBoxes$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;interval&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;boxes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;),
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;boxes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;])
);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseDown$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;headBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      event: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
    };
  }),
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;switchMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseMove$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MouseEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;({
        x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
        y: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;moveEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;clientY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;initialPos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
      })),
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;takeUntil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;mouseUp$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
    );
  })
);

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;drag$
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;mergeMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;delayBoxes$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;pipe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;tap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setTranslate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
        })
      );
    })
  )
  .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;subscribe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;rxjs-t2xwfi?devtoolsheight=60&amp;amp;file=index.ts&quot;&gt;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;rxjs-t2xwfi?devtoolsheight=60&amp;amp;file=index.ts&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;命令式编程虽然建模很容易，但是只是针对你已知情况的复刻，它要求你必须知道事情的全部的原因和结果，对一个问题的中间变化，各种情况都要了如指掌。各种各样不同的情境也都需要考虑到，只有这样才能把现实问题在计算机中复刻出来。因为一个运算一个操作，它就是在你已经知道了真是的前因后果后定义出来的，你无法定义你不知道结果的操作。
而函数响应式编程它复刻的就不是某个具体的问题了，而是这个问题背后的逻辑和规律。然后根据这个逻辑和规律去重建整个系统。
有兴趣的话大家可以了解下图灵机和λ演算法。命令式编程的思想就是来源于图灵机，函数编程的思想就是来源于λ演算法。二者是等价的，都是图灵完备，只不过是解决同一个问题的不同思路而已。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>观察者模式</title>
		<published>2022-10-29T00:00:00+00:00</published>
		<updated>2022-10-29T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/design/observer/" type="text/html"/>
		<id>https://alanlang.me/research/design/observer/</id>
		<content type="html">&lt;p&gt;本文搬运自《Head First 设计模式》第二章&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gong-zuo-he-yue&quot;&gt;工作合约&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;工作合约
恭喜贵公司获选为蔽公司建立下一代 Internet 气象观测站！该气象观测站必须建立在我们专利申请中的 WeatherData 对象上，由 WeatherData 对象负责追踪目前的天气状况（温度，适度，气压）。我们希望贵公司建立一个应用，有三种布告板，分别显示目前的状况，气象统计以及简单的预报。当 WeatherObject 对象获得最新的测量数据时，三种布告板必须时时更新。
而且，这是一个可以扩展的气象站，Weather-O-Rama 气象站希望公布一组 API，好让其他开发人员可以写出自己的气象布告板，并插入此应用中。我们希望贵公司能够提供这样的 API。
Weather-O-Rama 气象站有很好的商业运营模式：一旦客户上钩，他们使用每个布告板都要付钱。最好的部分就是，为了感觉贵公司建立此系统，我们将以公司的认股权支付你。
我们期待看到你的设计和应用的 alpha 版本。
真挚的
Johnny Hurricane --- Weather-O-Rama 气象站执行长
附注：我们正在通宵整理 WeatherData 源文件给你们&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;qi-xiang-jian-ce-ying-yong-de-gai-kuang&quot;&gt;气象监测应用的概况&lt;&#x2F;h2&gt;
&lt;p&gt;此系统中的三个部分是气象站（获取实际气象数据的物理装置），WeatherData 对象（追踪来自气象站的数据，并更新布告板）和布告板（显示目前天气状况给用户看）。
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;qv1BOciVASH9I4u.png&quot; alt=&quot;SCR-20221029-h6d.png&quot; &#x2F;&gt;
瞧一瞧刚送到的 WeatherData 类
如同他们所承诺的，隔天早上收到了 WeatherData 源文件，看了一下代码，一切都很直接：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;WeXyBJCDLHr9i86.png&quot; alt=&quot;SCR-20221029-h7t.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wo-men-mu-qian-zhi-dao-xie-shi-yao&quot;&gt;我们目前知道些什么&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;WeatherData 类提供了三个 getter 方法，可以取得三个测量值：温度，湿度和气压。&lt;&#x2F;li&gt;
&lt;li&gt;当新的测量数据备妥时，measurementsChanged() 方法就会被调用（我们不在乎这个方法是怎么被调用的，我们只在乎它被调用了）。&lt;&#x2F;li&gt;
&lt;li&gt;我们需要实现三个使用天气数据的布告板：“目前状态”布告，“气象统计”布告，“天气预报”布告。一旦有新的测量，这个布告需要马上更新。&lt;&#x2F;li&gt;
&lt;li&gt;此系统必须可扩展，让其他开发人员建立定制的布告板，用户可以随心所欲地添加或删除任何布告板。目前初始的布告板有三类：“目前状况”布告，“气象统计”布告，“天气预报”布告。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;xian-kan-yi-ge-cuo-wu-shi-fan&quot;&gt;先看一个错误示范&lt;&#x2F;h2&gt;
&lt;p&gt;这是第一个可能的实现，我们依照 Weather-O- Rama 气象站开发人员的暗示，在 measurementsChanged() 方法中添加我们的代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;WeatherData &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;measurementsChanged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 调用三个 get 方法，以取得最近的测量值。
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getTemperature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getHumidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getPressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 现在，更新三个布告栏。
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentConditionsDisplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;statisticsDisplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;forecastDisplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 这里是其他 WeatherData 的方法
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样实现有什么问题：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;我们这是在针对实现编程，而非针对接口。&lt;&#x2F;li&gt;
&lt;li&gt;对于每个新的布告板，我们都要修改代码。&lt;&#x2F;li&gt;
&lt;li&gt;我们没有封装改变的部分。&lt;&#x2F;li&gt;
&lt;li&gt;我们无法在运行时动态增加或删除布告栏。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ren-shi-guan-cha-zhe-mo-shi&quot;&gt;认识观察者模式&lt;&#x2F;h2&gt;
&lt;p&gt;我们看看报纸和杂志的订阅是怎么回事&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;报社的业务就是出版报纸&lt;&#x2F;li&gt;
&lt;li&gt;向某家报社订阅报纸，只要他们有新报纸出版，就会给你送来。只要你是他们的客户，你就会一直收到新报纸&lt;&#x2F;li&gt;
&lt;li&gt;当你不想再看报纸时，取消订阅，他们就不会再送新报纸来&lt;&#x2F;li&gt;
&lt;li&gt;只要报社还在运营，就会一直有人（或单位）向他们订阅报纸或取消订阅报纸&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;chu-ban-zhe-ding-yue-zhao-guan-cha-zhe-mo-shi&quot;&gt;出版者 + 订阅着=观察者模式&lt;&#x2F;h3&gt;
&lt;p&gt;如果你了解报纸订阅是怎么回事，其实就知道观察者模式是怎么回事，只是名称不太一样：出版者改称为“主题”（Subject），订阅者改称为“观察者”（Observer）。
让我们来看得更仔细一点：
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;TpIVt9nNuK4xOfj.png&quot; alt=&quot;SCR-20221029-h9o.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ding-yi-guan-cha-zhe-mo-shi&quot;&gt;定义观察者模式&lt;&#x2F;h2&gt;
&lt;p&gt;当你试图勾勒观察者模式时，可以利用报纸订阅服务，以你出版社和订阅者来比拟这一切。
在真实世界中，你通常会看到观察者模式被定义成：
&amp;gt;观察者模式
定义了对象之间一对多依赖，这样一来，当一个对象改变时，
它的所有依赖者都会收到通知并自动更新。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;AoDt8YMXu2OvCxE.png&quot; alt=&quot;SCR-20221029-hae.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;song-ou-he-de-wei-li&quot;&gt;松耦合的威力&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;当两个对象之间松耦合，它们依然可以交互，但是不太清楚彼此的细节。
观察者模式提供了一种对象设计，让主题和观察者之间松耦合。&lt;&#x2F;strong&gt;
为什么呢？
关于观察者的一切，主题只知道观察者实现了某个接口（Observer 接口）。主题不需要知道观察者的具体类是谁，做了什么或其他细节。
任何时候我们都可以增加新的观察者。因为主题唯一依赖的东西是一个实现 Observer 接口的对象列表，所以我们可以随时增加观察者。事实上，在运行时我们可以用新的观察者取代现有观察者，主题不受任何影响。同样的，也可以在任何时候删除某个观察者。
有新类型的观察者出现时，主题的代码不需要修改。假如我们有个新的具体类需要当观察者，我们不需要为了兼容新类型而修改主题的代码，所有要做的就是在新的类里实现此观察者接口，然后注册为观察者即可。主题不在乎别的，它只会发送通知给所有实现了观察者接口的对象。
我们可以独立的复用主题或观察者。如果我们在其他地方需要使用主题和观察者，可以轻易的复用，因为二者并非紧耦合。
改变主题或观察者其中一方，并不会影响另一方。因为两者是松耦合的，所以只要他们之间接口仍被遵守，我们就可以自由得改变他们而不会有任何问题。
&amp;gt;设计原则
为了交互对象之间的松耦合设计而努力&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;松耦合的设计之所以能让我们建立有弹性的 OO 系统，能够应对变化，是因为对象之间的互相依赖降到了最低。&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wan-cheng-qi-xiang-zhan&quot;&gt;完成气象站&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;she-ji-qi-xiang-zhan&quot;&gt;设计气象站&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;KUW4iMCuv2Dcsmq.png&quot; alt=&quot;SCR-20221029-hbq.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shi-xian-qi-xiang-zhan&quot;&gt;实现气象站&lt;&#x2F;h3&gt;
&lt;p&gt;根据上面的 UML 图，我们要开始实现这个系统了。如果我们使用 Java 去实现，实际上在 java.util 包中已经内置了最基本的 Observer 接口与 Observable 类，这和我们的 Subject 接口 与 Observer 接口很相似。既然我们时前端开发那么我们就用 TS 去实现。
所以，让我们从建立接口开始：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Subject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;removeObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;notifyObservers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;DisplayElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;把观测值直接传入观察者中是更新状态最直接的方法。你认为这样做法明智吗？
暗示：这些观测值的种类和个数在未来有可能改变吗？如果以后会改变，这些变化是否被很好得封装？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;别担心，在我们完成第一次实现后，我们会再回来探讨这个设计决策。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zai-weatherdata-zhong-shi-xian-zhu-ti-jie-kou&quot;&gt;在 WeatherData 中实现主题接口&lt;&#x2F;h3&gt;
&lt;p&gt;还记得我们在一开始试图实现的 WeatherData 类吗？我们现在要用观察者模式实现。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;WeatherData &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Subject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;removeObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;has&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;delete&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;notifyObservers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    });
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;measurementsChanged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;notifyObservers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
   * 为了测试，模拟读取气象数据
   *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setMeasurements&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temperature &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;measurementsChanged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;xian-zai-wo-men-lai-jian-li-bu-gao-ban-ba&quot;&gt;现在我们来建立布告板吧&lt;&#x2F;h3&gt;
&lt;p&gt;我们已经把 WeatherData 类写出来了，现在轮到布告板了。Weather-O-Rama 气象站订购了三个布告板：目前状况布告板，统计布告板和预测布告板。我们先看看目前布告板。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 目前状况布告板
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;CurrentConditionsDiaplay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;DisplayElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Subject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temperature &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`Current conditions: ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}F degress and ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}%humidity`
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;很方便，我们实现了另外两块布告板&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 统计布告板
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;StatisticsDisplay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;DisplayElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;tempSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;maxTemp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;minTemp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;numReadings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Subject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;tempSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;numReadings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;maxTemp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;maxTemp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;minTemp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;minTemp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Avg&#x2F;Max&#x2F;Min temperature = &amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;tempSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;numReadings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;&#x2F;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;maxTemp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;&#x2F;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;minTemp
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 预测布告板
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ForecastDisplay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;DisplayElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;29.92&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Subject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Forecast: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastPressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Improving weather on the way!&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastPressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;More of the same&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;currentPressure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;lastPressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Watch out for cooler, rainy weather&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }
  }
}

&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;qi-dong-qi-xiang-zhan&quot;&gt;启动气象站&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;xian-jian-li-yi-ge-ce-shi-cheng-xu&quot;&gt;先建立一个测试程序&lt;&#x2F;h4&gt;
&lt;p&gt;气象站已经完成得差不多了，我们还需要一些代码将一切连接在一起：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;WeatherStation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;WeatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;CurrentConditionsDiaplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;StatisticsDisplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ForecastDisplay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setMeasurements&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;65&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;30.4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setMeasurements&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;82&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;29.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setMeasurements&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;90&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;29.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;yun-xing-cheng-xu&quot;&gt;运行程序&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;29&#x2F;KVD3TSu29xHtpGs.png&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;xin-xu-qiu-jia-ru-ku-re-zhi-shu-bu-gao-ban&quot;&gt;新需求：加入酷热指数布告板&lt;&#x2F;h4&gt;
&lt;p&gt;刚刚接到气象站来电通知，他们还需要酷热指数布告板，而我们实现起来也很容易，之前涉及的代码完全不需要改动什么，只需要新建一个类就可以了：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;**
 * 酷热指数布告板
 *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;HeatIndexDisplay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Observer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;DisplayElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;heatIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Subject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;weatherData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;registerObserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pressure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;heatIndex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;computeHeatIndex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;temp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;humidity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;Heat index is &amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;heatIndex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;computeHeatIndex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;16.923 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.185212 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5.37941 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.100254 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.00941695 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.00728898 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.000345372 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.000814971 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.0000102102 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.000038646 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.0000291583 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.00000142721 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.000000197483 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.0000000218429 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.000000000843296 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0.0000000000481975 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;rh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
    );
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;zai-kan-gang-cai-de-na-ge-she-ji-jue-ce&quot;&gt;再看刚才的那个设计决策&lt;&#x2F;h3&gt;
&lt;p&gt;我们可以看一下 java.uitl.Observer 是怎么做的：
它也有一个 update 方法，但是方法签名不太一样&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Observable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; o, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; arg)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样做就比较灵活了，
主题本身当作第一个个变量，好让观察者知道是哪个主题通知它的。
第二个参数是具体的数据对象，这样就能做到通用。
感兴趣的同学可以用最新的设计方式重构上面的实现。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ben-zhang-yao-dian&quot;&gt;本章要点&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;观察者模式定义了对象之间一对多的关系&lt;&#x2F;li&gt;
&lt;li&gt;主题（也就是可观察者）用一个共同的接口来更新观察者&lt;&#x2F;li&gt;
&lt;li&gt;观察者和可观察者之间用松耦合的方式结合（loosecoupling)，可观察者不知道观察者的细节，只知道观察者实现了观察者接口。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ben-zhang-yuan-ma&quot;&gt;本章源码&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-e4kru2?file=index.ts&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>设计模式入门</title>
		<published>2022-10-10T00:00:00+00:00</published>
		<updated>2022-10-10T00:00:00+00:00</updated>
		<link href="https://alanlang.me/research/design/intro/" type="text/html"/>
		<id>https://alanlang.me/research/design/intro/</id>
		<content type="html">&lt;h2 id=&quot;huan-ying-lai-dao-she-ji-mo-shi-shi-jie&quot;&gt;欢迎来到设计模式世界&lt;&#x2F;h2&gt;
&lt;p&gt;在本章，你讲学到为何（以及如何）利用其他开发人员的经验与智慧。他们遭遇过相同的问题，也顺利地解决过这些问题。本章结束前，我们会看看设计模式的用户和优点，再看一些关键 OO 设计原则，并通过一个实例来了解模式是如何运作的。使用模式最好的方式是：“把模式装进脑子里，然后在你的设计和已有的应用中，寻找何处可以使用它们。”以往是代码复用，现在是经验复用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ya-zi-you-xi&quot;&gt;鸭子游戏&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;xian-cong-jian-dan-de-mo-ni-ya-zi-ying-yong-zuo-qi&quot;&gt;先从简单的模拟鸭子应用做起&lt;&#x2F;h3&gt;
&lt;p&gt;Joe 上班的工作做了一套相当成功的模拟鸭子游戏：SimUDuck，游戏中会出现各种鸭子，一边游泳戏水，一边呱呱叫。此系统内部设计使用的标准的 OO 技术，设计了一个鸭子超类（Superclass），并让各种鸭子继承此超类。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;10&#x2F;SXVeqjD3gvNHJyC.jpg&quot; alt=&quot;Xnip2022-10-10_21-20-26.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;但是虽然市面上出现了越来越多的鸭子游戏，公司的竞争压力加剧。公司主管认为该是创新的时候了，他们需要在“下周”股东会议上展示一些真正让人印象深刻的东西来振奋人心。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xian-zai-wo-men-de-rang-ya-zi-neng-fei&quot;&gt;现在我们得让鸭子能飞&lt;&#x2F;h3&gt;
&lt;p&gt;主管们确定，此模拟程序需要会飞的鸭子来将竞争者抛在后头。当然，在这个时候，Joe 的经理拍胸脯告诉主管们，Joe 只需要一个星期就可以搞定。“毕竟，Joe 是一个 OO 程序员⋯⋯这有什么困难？“&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Joe：我只需要在 Duck 类上加上 fly() 方法，然后所有的鸭子就都会继承 fly()。&lt;br &#x2F;&gt;
这是我大显身手，展示 OO 才华的时候了。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;10&#x2F;ofiV5b9Kvmgsprh.png&quot; alt=&quot;SCR-20221010-tz0.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;dan-shi-ke-pa-de-wen-ti-fa-sheng-liao&quot;&gt;但是可怕的问题发生了&lt;&#x2F;h4&gt;
&lt;p&gt;领导突然给 Joe 打电话，说刚刚在股东会议上看了最新的演示，有很多“橡皮鸭子”在屏幕上飞来飞去，质问 Joe 究竟做了什么，感觉 Joe 要重新逛一逛求职网站了。
怎么回事？
Joe 忽略了一件事：并非 Duck 所有的子类都会飞。Joe 在 Duck 超类中加上新的行为，会使得某些并不适合该行为的子类也具有该行为。现在可好了 SimUDuck 程序中有了一个无生命的会飞的东西。对代码所做的局部修改，影响层面可不只是局部（会飞的橡皮鸭）！
Joy 体会到了一件事：&lt;strong&gt;当涉及“维护”时，为了“复用“（reuse）目的而使用继承，结局并不完美。&lt;&#x2F;strong&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;10&#x2F;5crgP2fSvmbd4Re.png&quot; alt=&quot;SCR-20221010-ua6.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;joe-xiang-dao-liao-ji-cheng&quot;&gt;Joe 想到了继承&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Joe：我可以把橡皮鸭类中的 fly() 方法覆盖掉，就好像覆盖 quack() 的做法一样。。。。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;10&#x2F;6TPrCnLdwxYabz5.png&quot; alt=&quot;SCR-20221010-uf8.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Joe：可是，如果以后我加入诱饵鸭（DecoyDuck），又会如何？
诱饵鸭是木头假鸭，不会飞也不会叫。。。。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;10&#x2F;e7ugPVZ6toBywOX.png&quot; alt=&quot;SCR-20221010-uit.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;很显然，这样带来一个问题就是，每当 Joe 新增一种鸭子的时候，他都必须要想到这个鸭子是否会飞，从而决定是否需要重写 fly() 方法，这个系统是 Joy 自己开发的，所以他自己可能会想到，但是如果后面交给别人维护了呢？&lt;&#x2F;p&gt;
&lt;h4 id=&quot;li-yong-jie-kou-ru-he&quot;&gt;利用接口如何？&lt;&#x2F;h4&gt;
&lt;p&gt;Joe 认识到继承可能不是答案，因为每当有新的鸭子的子类出现，他就要被迫检查并可能需要覆盖 fly() 和 quack()，这简直就是无穷无尽的噩梦。
所以 Joe 又想到了利用接口&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Joe：我可以把 fly() 从超类中取出来，放进一个“Flyable 接口”中。这么一来，只有会飞的鸭子才实现此接口。同样的方式，也可以用来设计一个“Quackable 接口”，因为不是所有的鸭子都会叫。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;12&#x2F;b6WhQdjXLr3BU1t.png&quot; alt=&quot;&quot; &#x2F;&gt;
大家觉得这个设计如何？我们 FVS 现在的组件类就是这种设计，说实话这种设计也不好。&lt;&#x2F;p&gt;
&lt;p&gt;当我新增一个鸭子子类时，我还是要想着要不要飞，如果要飞就去实现 Flyable，如果要叫就实现 Quackable。其次就是现在这两个方式都是放在子类里实现的，如果很多鸭子的 fly 的实现是相同的，就又会有很多重复代码。
所以这只能算是从一个噩梦跳进另一个噩梦。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;zhong-xin-kao-lu-zhe-ge-wen-ti&quot;&gt;重新考虑这个问题&lt;&#x2F;h4&gt;
&lt;p&gt;现在我们知道使用继承并不能很好得解决问题，Flyable 和 Quackable 接口一开始似乎还挺不错，解决了橡皮鸭子会飞的问题（只有会飞的鸭子才实现 Flyable 接口），但是大多数编程需要都不能多继承，接口里不具有实现的代码，所以继承接口无法做到代码的复用。这意味着无论何时你需要修改某个行为，你必须往下追踪并在定义在此行为的类中修改它，一不小心可能会造成新的错误。幸运的是有一个设计原则恰好适用于此情况。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;设计原则
找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;这是我们第一个设计原则，后面还会有更多原则在我们专栏中出现。
换句话说，如果每次新需求一来，都会使某方面的代码发生变化，那么就可以确定，这部分代码需要被抽出来，和其他稳定的代码有所区分。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fen-kai-bian-hua-he-bu-bian-hua-de-bu-fen&quot;&gt;分开变化和不变化的部分&lt;&#x2F;h4&gt;
&lt;p&gt;现在看起来，鸭子模型除了 fly() 和 quack() 之前其他地方还算正常，所以我们只需要把 fly() 和 quack() 作为变化的部分提取出来，其他部分还保持原来的样子。
为了分开“变化和不变化的部分”，我们准备建立两组类，一组和 fly() 相关，另一组和 quack() 相关。每一组类实现各自的动作。比如说对于 quack()，我们有一个类实现“呱呱叫”，有一个类实现“吱吱叫”，还有一个类实现“安静”。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;she-ji-ya-zi-de-xing-wei&quot;&gt;设计鸭子的行为&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;设计原则
针对接口编程，而不是针对实现编程。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;我们利用接口代表每个行为，比方说我们设计 FlyBehavior 和 QuackBehavior，而行为的每个实现都将实现其中的一个接口。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;13&#x2F;IXjJBmVAOy6leUR.png&quot; alt=&quot;SCR-20221013-tkk.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这样的设计，可以让飞行和呱呱叫的动作被其他的对象复用，因为这些行为已经和鸭子类无关了。
而我们可以新增一些行为，不会影响到既有的行为类，也不会影响到使用“飞行”行为类的鸭子类。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;zheng-he-ya-zi-de-xing-wei&quot;&gt;整合鸭子的行为&lt;&#x2F;h4&gt;
&lt;p&gt;关键点在于，鸭子需要将飞行和呱呱叫的动作委托别人处理，而不是使用定义在 Duck 类或子类中的飞行和呱呱叫的方法。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;13&#x2F;R7c2l5rVXns1W8F.png&quot; alt=&quot;SCR-20221013-tmj.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;QuackBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;quack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;abstract class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Duck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;protected &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;flyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;protected &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;quackBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;QuackBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public abstract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public abstract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;swim&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;performFly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;flyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;performQuack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;quackBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;quack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;就拿呱呱叫这个需求举例，这样的话，每只鸭子都会引用实现 QuackBehavior 接口的对象，鸭子对象不会亲自处理呱呱叫行为，而是委托给 quackBehavior 引用的对象。
这样的话如果要实现一个绿头鸭就好是这样：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Quack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;QuackBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;quack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;呱呱叫&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyWithWings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;FlyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;使用翅膀飞&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MallardDuck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Duck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;quackBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Quack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;flyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyWithWings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;我是绿头鸭&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;swim&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;我会游泳&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样的话，绿头鸭真的“呱呱叫”，而不是“吱吱叫”，或“叫不出声”。这是怎么办到的？当 MallardDuck 实例化时，它的构造器会把继承来的 quackBehavior 实例变量初始化成 Quack 类型的新实例。同样的处理方式也用在了飞行行为上。
这时候有聪明的同学就会问了：
&amp;gt;你不是说过我们将不对具体实现编程吗？当时我们在构造函数里做了什么呢？
&amp;gt;我们正在制造一个具体的 Quack 实现类的实例！&lt;&#x2F;p&gt;
&lt;p&gt;没错，我们现在是这么做了，不过这只是暂时的，通过后面学习的知识，我们会修正这一个问题。
虽然我们现在在 Duck 的子类的构造函数里制造里具体的实例，但是但是我们目前的做法还是很有弹性的，既能解决继承带来的问题，又能处理鸭子子类代码复用的问题。
甚至在一些需求场景下，我们还能动态改变这些行为。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;rang-mo-xing-ya-zuo-huo-jian&quot;&gt;让模型鸭坐火箭&lt;&#x2F;h4&gt;
&lt;p&gt;比如我们的鸭子游戏引入了装备系统，这样部分之前不能飞行的鸭子如果装备上飞行装备就会有飞行的能力。
首先在 Duck 类中，加入一个新方法：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setFlyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;FlyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;flyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后有一个模型鸭，一开始是不会飞的&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyNoWay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;FlyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;不会飞，什么也不做&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ModelDuck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;Duck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;quackBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Quack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;flyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyNoWay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;我是模型鸭&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;swim&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;我会游泳&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后新建一个新的 FlyBehavior 类型：火箭飞行&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyRocketPowered &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#b06936;&quot;&gt;FlyBehavior &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;我可以坐火箭飞&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后给模型鸭加上火箭动力&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;modelDuck &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ModelDuck&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;modelDuck&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;performFly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;不会飞，什么也不做
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;modelDuck&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;setFlyBehavior&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FlyRocketPowered&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;modelDuck&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;performFly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;我可以坐火箭飞
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;xian-zai-lai-kan-kan-zheng-ti-de-ge-ju&quot;&gt;现在来看看整体的格局&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;10&#x2F;13&#x2F;dAZclQtFT9nUB6C.png&quot; alt=&quot;SCR-20221013-tqm.png&quot; &#x2F;&gt;
如同本例一般，把两个类结合起来使用，这就是组合（composition）。这种做法和“继承”不同的地方在于，鸭子的行为不是继承来的，而是和适当的行为对象“组合”来的。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;设计原则&lt;br &#x2F;&gt;
多用组合，少用继承。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;组合用在了很多设计模式中，我们后面的课程中也会用到，你也会看到它的诸多优点和缺点。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jiang-dao-she-ji-mo-shi&quot;&gt;讲到设计模式&lt;&#x2F;h2&gt;
&lt;p&gt;刚刚我们就学到了我们第一个设计模式：策略模式（Strategy Pattern）&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;策略模式&lt;br &#x2F;&gt;
定义了算法蔟，分别封装起来，让它们之间可以互相替换,&lt;br &#x2F;&gt;
此模式让算法的变化独立于使用算法的客户。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;那么，究竟什么是设计模式？是框架或者库吗？设计模式的好处是什么？
设计模式会提高程序的执行效率吗？不会。
那么设计模式会减少我们的代码量吗？不会。
那么设计模式会增加代码的可读性吗？不会。
那么设计模式有什么用？
大家可以想一下，平时我们编码花费最久也是最讨厌的事情是什么？软件开发完成“前”以及完成“后”，何者需要花费更多的时间呢？
答案是“后”，我们总是需要花许多时间在系统的维护和变化上，比原来开发花的时间更多。产品每时每刻都面临着改变。就是这些改变，给我们带来了很多痛苦。所以为了应对改变，我们也做了很多事情。比如我们会通过写单元测试，来保证代码修改后的正确性。而这些设计模式，就是一群有经验的人总结出来的方法。让我们能够在系统不断迭代的过程中尽量保证修改的便利性以及代码的稳定性。
SPOT（Single Point Of Truth，单点事实）。代码需要修改时，你只需要在一个地方修改，而不必改动多个地方。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yao-dian&quot;&gt;要点&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;知道 OO 基础并不足以让你设计出良好的 OO 系统。&lt;&#x2F;li&gt;
&lt;li&gt;良好的 OO 设计必须具备可复用，可扩充，可维护三个特性。&lt;&#x2F;li&gt;
&lt;li&gt;模式可以让我们建造出具有良好 OO 设计质量的系统。&lt;&#x2F;li&gt;
&lt;li&gt;模式被认为是历经验证的 OO 设计经验。&lt;&#x2F;li&gt;
&lt;li&gt;模式不是代码，而是针对设计问题的通用解决方案。你可以把它们应用到特定的应用中。&lt;&#x2F;li&gt;
&lt;li&gt;模式不是被发明，而是被发现。&lt;&#x2F;li&gt;
&lt;li&gt;大多数的模式和原则，都着眼于软件变化的主题。&lt;&#x2F;li&gt;
&lt;li&gt;大多数的模式都允许系统局部改变独立于其他部分。&lt;&#x2F;li&gt;
&lt;li&gt;我们常把系统中变化的部分抽出来封装。&lt;&#x2F;li&gt;
&lt;li&gt;模式让开发人员之间有共享的语言，能够最大化沟通的价值。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;fu-lu&quot;&gt;附录&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackblitz.com&#x2F;edit&#x2F;typescript-ohdkxh?file=index.ts&quot;&gt;本章涉及的代码&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>赋值运算</title>
		<published>2022-09-09T00:00:00+00:00</published>
		<updated>2022-09-09T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/js/assignment-operators/" type="text/html"/>
		<id>https://alanlang.me/codes/js/assignment-operators/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;wRxeDsnCfKmtUQM.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fu-zhi-yun-suan&quot;&gt;赋值运算&lt;&#x2F;h2&gt;
&lt;p&gt;在我们写 js 代码的时候，使用最多的估计就是&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Operators&#x2F;Assignment&quot;&gt;赋值运算符（Assignment operators）&lt;&#x2F;a&gt;了，赋值运算符的作用将它右边操作数的值赋给它左边的操作数。最简单的赋值运算符是等于（=），它将右边的操作数值赋给左边的操作数。那么 x = y 就是将 y 的值赋给 x。&lt;&#x2F;p&gt;
&lt;p&gt;但是大家真的知道赋值运算的具体执行过程吗？
我们以&lt;code&gt;var a = &amp;quot;1&amp;quot;&lt;&#x2F;code&gt;这个赋值运算为例，当我们执行&lt;code&gt;var a = &amp;quot;1&amp;quot;&lt;&#x2F;code&gt;这段代码时，js引擎的处理过程是这样的：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;找到变量 a 的内存地址,准备赋值&lt;&#x2F;li&gt;
&lt;li&gt;运算右侧表达式代码,得到表达式结果&lt;&#x2F;li&gt;
&lt;li&gt;将右侧表达式的结果存入 a 的内存地址指向的内存中&lt;&#x2F;li&gt;
&lt;li&gt;返回整个表达式的结果为右侧表达式的结果&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;这个有点像把大象装进冰箱里，先把冰箱门打开，然后把大象放进去，然后把冰箱门关上。&lt;&#x2F;p&gt;
&lt;p&gt;下面我们来详细讲讲这个过程：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-yi-bu-wei-yao-fu-zhi-de-shu-ju-zhun-bei-nei-cun-di-zhi&quot;&gt;第一步 为要赋值的数据准备内存地址&lt;&#x2F;h3&gt;
&lt;p&gt;这个很好理解，我要给一个变量赋值，那么我就要开辟一块内存控件用来存变量的数据，以 &lt;code&gt;var a = &amp;quot;1&amp;quot;&lt;&#x2F;code&gt;举例，a 是一个全局变量，所以会先检查是否已经有全局变量 a 了，发现没有，则开辟一块内存，以便于后面存放 a 的值。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-er-bu-ji-suan-you-ce-de-biao-da-shi&quot;&gt;第二步 计算右侧的表达式&lt;&#x2F;h3&gt;
&lt;p&gt;等号右侧不管写的是什么，最终都会计算出一个结果，而这个结果，就是最好要存入 a 的数据。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-bu-jiang-you-ce-biao-da-shi-de-jie-guo-cun-fang-dao-a-zhong&quot;&gt;第三步 将右侧表达式的结果存放到 a 中&lt;&#x2F;h3&gt;
&lt;p&gt;上面那个例子，最终右侧表达式计算出来的结果是字符串”1“，我们都知道 JS 中的字符串属于引用类型，所以会把 ”1“ 这个数据存放到堆里，然后把地址存到为 a 变量开辟的控件中。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-si-bu-fan-hui-you-ce-biao-da-shi-de-jie-suan-jie-guo&quot;&gt;第四步 返回右侧表达式的结算结果&lt;&#x2F;h3&gt;
&lt;p&gt;这一点大家容易被大家忽略掉，js 的赋值运算是有返回值的，而返回结果就是右侧表达式的计算结果，而不是左侧变量的值，只不过这是时候左侧变量的值恰好等于右侧的计算结果罢了。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;kan-yi-dao-ti-mu&quot;&gt;看一道题目&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ n: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ n: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;来试着算一下最终打印的结果是什么，结果是：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;undefined&lt;&#x2F;code&gt; 和 &lt;code&gt;{n: 2}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们试着按照上面的过程论证一下：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-yi-xing-dai-ma-gei-bian-liang-a-fu-zhi&quot;&gt;第一行代码 给变量 a 复制&lt;&#x2F;h3&gt;
&lt;p&gt;这一步很简单，按照上面说的过程，给 a 开辟一个空间，然后把右侧计算的数据的结果存放的地址存到里面。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;09&#x2F;09&#x2F;DzFGHvS8O5dlgf9.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-er-xing-dai-ma-ba-bian-liang-a-fu-zhi-gei-bian-liang-b&quot;&gt;第二行代码 把变量 a 赋值给变量 b&lt;&#x2F;h3&gt;
&lt;p&gt;和第一步一样，先为 b 开辟一个空间用来存放数据，然后把 a 赋给 b，由于 a 里面存放的是一个地址，所以会是直接把地址存给 b。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;09&#x2F;09&#x2F;CRQvybnigtzuKlE.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-xing-dai-ma-ji-xu-fu-zhi-guo-cheng&quot;&gt;第三行代码 继续赋值过程&lt;&#x2F;h3&gt;
&lt;p&gt;第三行代码比较复杂，我们一步一步来。&lt;&#x2F;p&gt;
&lt;p&gt;首先是给 a.x 赋值，然后我们发现 a 里面现在只有一个属性 n，并没有 x，但是 js 是允许添加属性的，所以会先添加一个属性，并等待赋值。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;09&#x2F;09&#x2F;2NwWmJu9XcavkKB.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;然后继续计算右侧的表达式，发现右侧表达式仍然是一个赋值语句，没关注，那就执行这个赋值语句：&lt;code&gt;a = { n: 2 }&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;首先，我们发现已经有 a 这个全局变量了，所以不需要再为它开辟空间了。开始计算等号右边，等号右边是一个对象，那么我们就在堆上存放这个对象，然后把地址存给 a，注意，这个时候 a 里面存放的地址已经是新对象的地址了。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;09&#x2F;09&#x2F;6fZICQebKFja1Mm.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个时候 &lt;code&gt;a = { n: 2 }&lt;&#x2F;code&gt; 已经计算完毕了，然后还需要把返回值赋值给 a.x，我们上面已经讲过了，表达式的返回值就是等号右侧的计算结果，所以会把 &lt;code&gt;{ n: 2 }&lt;&#x2F;code&gt;的地址赋值给 a.x，最后再作为返回值返回。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2022&#x2F;09&#x2F;09&#x2F;Qbrzp1aUmRiFHvg.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;至此，整个赋值过程已经完毕。
通过上面的图我们可以很清晰得看出，最终 a 和 b  的结果为：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;a = {n: 2}
b = {n: 1, x: {n: 2}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;所以打印的 a.x 和 b.x 的结果为  &lt;code&gt;undefined&lt;&#x2F;code&gt; 和 &lt;code&gt;{n: 2}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>访问对象值和数组成员</title>
		<published>2022-08-24T00:00:00+00:00</published>
		<updated>2022-08-24T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/object-values-and-array-members/" type="text/html"/>
		<id>https://alanlang.me/codes/type/object-values-and-array-members/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;NdotiuUX5eE3Rb7.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们知道在 js 里我们可以通过 . 来访问对象属性，可以通过数组的下标访问数组的成员，而在 TS 中我们可以更灵活得访问类型成员。
我们可以通过单个 key 来获取对象具体属性的类型，同时我们也可以设置多个key来获取多个属性的联合类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ColorVariants &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;primary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;blue&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;secondary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;red&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;tertiary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;green&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;PrimaryColor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ColorVariants&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;primary&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type PrimaryColor = &amp;quot;blue&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NonPrimaryColor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ColorVariants&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;secondary&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;tertiary&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type NonPrimaryColor = &amp;quot;red&amp;quot; | &amp;quot;green&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;EveryColor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ColorVariants&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ColorVariants&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type EveryColor = &amp;quot;blue&amp;quot; | &amp;quot;red&amp;quot; | &amp;quot;green&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们也可以通过设置多个数组下标来获取数组成员类型的联合类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Letters &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type Letters = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;]

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;AOrB &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Letters&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type AOrB = &amp;quot;a&amp;quot; | &amp;quot;b&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Letter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Letters&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type Letter = &amp;quot;a&amp;quot; | &amp;quot;b&amp;quot; | &amp;quot;c&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;JYOwLgpgTgZghgYwgAgMIHsA26oDU5TBzgDOyA3gLABQyyADoQLYECeAXMgEQBGmArhC4AaGnRIQE6EABM2nLlAgyRY5JChgiUDtwDmSiCC40AvjRphW9FAAVmbDNijIAvGiw58hYmBIBtLkZgFh0uAF1LaxQAOWl7EMdPF3cnLwIiUkCJKVk2LmQAH24NLXzI6isbZABRADdoVjSUj2dvTL9-AGsIVnQYVvSfUgqLSujkABkIMA0yd0C4EW4eZa4ECKjqgEEAeSgAITcpmbn-AAYi5ABGCqqUadnoY8ezkH4mHmhR6lANeCQyAAqhIoAAlLAQDAgGDAPQUNT8UGcQJ1YAQADuawQSjgkDW-HocnxFXEhOg2xkTFAKK4aMx2Nx+OE3EJxKELK4MggmBmQgq5moWxQEN5xxB0FFUOksL03V6-WBoKl0Nl4X870+3yAA&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>用局部变量来减少重复代码</title>
		<published>2022-08-08T00:00:00+00:00</published>
		<updated>2022-08-08T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/type-variable/" type="text/html"/>
		<id>https://alanlang.me/codes/type/type-variable/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;rI8xLnjhgbfDu3i.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我们可以通过将局部变量分配给默认泛型槽，将减少重复代码并提高性能。
这边有一段示例代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ValueOfKeysWithA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`a${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;];
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`a${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;]

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NewUnion &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ValueOfKeysWithA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;KYDwDg9gTgLgBDAnmYcDyAjAVnAvHAbwFgAoOOAQwC44AiC2gGlPIoCYb62mXKBmThT48ycDJwwjyGDnRlSxAucOYkAvqVJIUcAGoUANgFdgaAGYBpYIgDOAdQCWMABYBBADyYsAPjyFeANoWcA4AdnAAoiAwUBQAxjDuANbWEGbo2IxwAAYUACQENjFhAOZq2d4AujReQZUA3KRqAVEx8YkpiGkZWFm5BUVQpeVVmiTaqABywADuAKqhDhDh+PrGppbW9k5untjeQA&quot;&gt;试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;我们可以看到其中有两处都用到了&lt;code&gt;Extract&amp;lt;keyof Obj, `a${string}`&amp;gt;&lt;&#x2F;code&gt;
这样会有两个问题，首先是重复代码，其次是&lt;code&gt;Extract&lt;&#x2F;code&gt;会执行两次，影响性能。
所以我们可以尝试把它作为局部变量的默认值来处理：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ValueOfKeysWithA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ExtractKeys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`a${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ExtractKeys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;];
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ExtractKeys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NewUnion &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ValueOfKeysWithA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;KYDwDg9gTgLgBDAnmYcDyAjAVnAvHAbwFgAoOOAQwC44AiC2gGlPIoCYb62mXKBmThT48ycDJwwjyGDnRlSxAucOYkAvqVJIUcAGoUANgFdgaAGYBpYIgDOAdQCWMABYBBADyYsjOAFEQMFAUAMYwVrZwoDDAAHYAJjZwANbWEGbo2Hh+AUGh7imIaRnecAAGFAAkBDaBDjEA5mqlAHzNWcSiANoWcHXZgSFh1jYAujRe3SMA3KRqnf4DoeGjmiTaqABywADuAKoxDhAxWfrGppbDji4eXs1AA&quot;&gt;试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>删除属性的修饰符</title>
		<published>2022-08-01T00:00:00+00:00</published>
		<updated>2022-08-01T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/type-remove-modifier/" type="text/html"/>
		<id>https://alanlang.me/codes/type/type-remove-modifier/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;S4VoW28bqjIp6CP.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;众所周知，TS的类型属性是可以附加修复符的，比如&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;代表 name 属性是只读的&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;代表 name 属性是可选的&lt;&#x2F;p&gt;
&lt;p&gt;那么有什么办法能够移除这些修饰符呢？
答案是使用&#x27;-&#x27;修饰符来移除已有的修饰符。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;RequiredMutable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-? : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;NonNullable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&amp;gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;undefined&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;readonly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;like&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;RequiredMutableData &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;RequiredMutable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; type RequiredMutableData = {
&#x2F;&#x2F;     name: string;
&#x2F;&#x2F;     date: Date;
&#x2F;&#x2F;     age: number;
&#x2F;&#x2F;     like: string;
&#x2F;&#x2F; }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;C4TwDgpgBAglC8UDeUCGAuKBnYAnAlgHYDmANFAEaY4EnkDGA-NXkcVAL4CwAUL6JCgAFVLmD5UAGziIRYiZIA8MAHz9w0AEoQAjgFd8uCABMZUbfsMnFc8VNW9eAehcBadx4+OeArboNGxgCyesCoFJIQigAqKgjIvFBQrkaoxgD2hJIgUADaYFBEUADWECDpAGZQ0QC6roxQmABymU16kpLhkTH5NSoA3LzcfDxEwBC4Faj00AAiqGEJPEmpGVk5hKgAthAstMSDy1CrmdlQxgsQzFDz44crEGmnOajEu1CEelsUE1AAPlA9IRjBAKkQTPdjo81mdJPhSns2P8Pu1JIdhupBBYAiYQmEIhBbqh4tirMFQl0okS1DwXFBfOZ-GS8ZSifEkM4nEluZsdoiSIc6dzzpdMLcIIKucLXu9Pt8JpLhVA4QjsKwBZzOEA&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>结合范型使用函数重载</title>
		<published>2022-07-07T00:00:00+00:00</published>
		<updated>2022-11-23T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/ts-overload/" type="text/html"/>
		<id>https://alanlang.me/codes/type/ts-overload/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;7WDrMZsXBUuFmaT.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;TypeScript 允许我们声明函数重载。这对于文档 + 类型安全来说很实用：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ResourceData &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getResource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ResourceData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getResource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ResourceData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getResource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;resource &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getResource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;a.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; ResourceData
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;resources &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;getResource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;b.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;c.json&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; ResourceData[]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;KYDwDg9gTgLgBASwHY2FAZgQwMbDgJWAGcIBXKXAEUxkzgG8BYAKDkQBMAuOImKZAOYBuFmySYAtsG69+SYaLjsambpiQBPEcwC+LFqEiw46UkmwwEEJHAHAYhEuVwAKMDQAWMvoICU3RzIKYGpabUNoeFNzS2tbe0DnYDdPbzkBAG0AXX8CYiCqFWzw8EiTMwsrGzsHfKSUmC8eH3k4AB9m9Ozc9Q0GRSh7cht6HThMInHNbT1mFmxrXjhBp2C4AF542tXXACJMADoAKxIkXd9tBaQllYLiDa3E4JcM3YAjY9PdgBo4XexPtZdjkhEA&quot;&gt;试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;不仅如此，函数重载也可以和范型结合起来，来实现更加强大的功能：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ThirdArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FirstArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;func3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SecondArg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ThirdArg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ThirdArg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[]){
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;addOne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;numToString &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;toString&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;stringToNum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;addOneToString &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;addOne&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;numToString&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;stringToNum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;GYVwdgxgLglg9mABBOBbADnAzgUwDwCSY6IUANIgGIwBOWUAgjQOYB8AFALABQiiokAFyJ2MYqWFESUAJSIAvKyq16TZjxnDR4qJJ1zFyuoxY8eA6PCQoM2fFNIVqxtRQDKOFGAAmajjz4LLTFpPWkDJWdVFgoA-nAIACZgnTDSCMQPL19Tbk0REIlEB1kFJSyEHPVucwTYBGQ0TFxCHScVE2Z3T0rXRAAVAAtaKv9eeKEC1OL9MqNorsQ4i2Sp0JnwuYqfPuWEgGYU9e2qjKGRtQ0jopKz4Zoq2sh66ya7dgA6L4BDFixhb5gACeAG0ALoyADecRoOCgIBoSEhAF9EN8sGjgTxkWZuF56GjvN4APJgHAKETfYRgECoABGOBoGWh41h8MRaMQAGpEABGADc2J4+KgiBpqH6cDcUBoYmYFPYVLFtIZTLmLL4bIRSG+HygUplcvYMkF3BxeIQBPosrAzElADlaQqlda5cyYXDtYh0L9cEQoIqTUKahawATvkTSThJdKbfL5I1bLhFZGyRRxTHDbaKK7bQ7aTIgA&quot;&gt;试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Object.keys 类型收窄</title>
		<published>2022-06-25T00:00:00+00:00</published>
		<updated>2022-06-25T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/object-keys/" type="text/html"/>
		<id>https://alanlang.me/codes/type/object-keys/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;l9MKgEeqjxIaCNd.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;平时在写代码时，经常会遇到遍历一个对象的所有属性，我们可以使用&lt;code&gt;Object.keys&lt;&#x2F;code&gt;来拿到对象所有的&lt;code&gt;key&lt;&#x2F;code&gt;，然后在通过&lt;code&gt;myObject[key]&lt;&#x2F;code&gt;来获取属性的值。但是如果在TS中直接这样写的话，就会有类型错误。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  a: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  b: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  c: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; Element implicitly has an &amp;#39;any&amp;#39; type because expression of type &amp;#39;string&amp;#39; can&amp;#39;t be used to index type
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;])
})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?ssl=9&amp;amp;ssc=3&amp;amp;pln=1&amp;amp;pc=1#code&#x2F;MYewdgzgLgBAtgTwPICMBWBTYsC8MDeAsAFAwwCGAXDAIwA0JZK1ATA6TMNQMwkC+JEqkzYAdAGsMCCAApEwrFACUogGYgATgFFywABYzJCGDgB8BRp3AQQAGwyjbIAOZzk6RQG0jAXSX8lIA&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;那么一般我们遇到这种问题该怎么解决呢？&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;p&gt;一般遇到这种问题，最直接的做法就是就是把类型校验错误的地方改正，由于&lt;code&gt;Object.keys&lt;&#x2F;code&gt;返回的类型是&lt;code&gt;string[]&lt;&#x2F;code&gt;，所以我们代码中的&lt;code&gt;key&lt;&#x2F;code&gt;的类型是&lt;code&gt;string&lt;&#x2F;code&gt;，但是&lt;code&gt;myObject&lt;&#x2F;code&gt;的&lt;code&gt;key&lt;&#x2F;code&gt;类型却是&lt;code&gt;&amp;quot;a&amp;quot;|&amp;quot;b&amp;quot;|&amp;quot;c&amp;quot;&lt;&#x2F;code&gt;。所以我们只要把&lt;code&gt;key&lt;&#x2F;code&gt;的类型重新&lt;code&gt;as&lt;&#x2F;code&gt;一下就行了：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  a: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  b: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  c: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as keyof typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;MyObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;])
})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;但是这样会有不好的地方就是，我们所有用&lt;code&gt;Object.keys&lt;&#x2F;code&gt;的地方都需要手动这样&lt;code&gt;as&lt;&#x2F;code&gt;一下很麻烦，而且我们应该少用&lt;code&gt;as&lt;&#x2F;code&gt;来进行强制类型断言。&lt;&#x2F;p&gt;
&lt;p&gt;所以我们可以自己声明一个方法，对这个方法设置返回的类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  a: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  b: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  c: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;keys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;keys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)[];

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;])
})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样的话就不报类型不匹配的错误了。
还有另一种方式可以直接修改内置的&lt;code&gt;Object.keys&lt;&#x2F;code&gt;的方法的返回类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ObjectConstructor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;ReadonlyArray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;;
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  a: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  b: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
  c: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;myObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]);
})
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;但是这种做法一般是不推荐的，因为内置的实现中&lt;code&gt;Object.keys&lt;&#x2F;code&gt;返回&lt;code&gt;string[]&lt;&#x2F;code&gt;是有一定的道理的，如果我们强制修改了它的返回值类型，在一些场景中就会有问题。
比如：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;keys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;keys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)[];

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;MyObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;forEach&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;MyObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;])
})

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{x: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, y: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;a

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;k1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;&amp;quot;x&amp;quot;[]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;k2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b39f04;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F;string[]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个时候 k1 的类型是有问题的。&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>使用 asserts 进行类型断言</title>
		<published>2022-06-15T00:00:00+00:00</published>
		<updated>2022-06-15T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/asserts-type-assertion/" type="text/html"/>
		<id>https://alanlang.me/codes/type/asserts-type-assertion/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;mFdhQGBZlMDisU6.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;假设我们有一个类是这样的：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;_userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;_title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; do something
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SDK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;assertUserIsLoggedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; Argument of type &amp;#39;string | undefined&amp;#39; is not assignable to parameter of type &amp;#39;string&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;assertUserIsLoggedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;throw new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;User is not logged in&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;由于 &lt;code&gt;this.loggedInUserId&lt;&#x2F;code&gt; 的类型是&lt;code&gt;string | undefined&lt;&#x2F;code&gt;，
所以在调用&lt;code&gt;createPost(this.loggedInUserId, title)&lt;&#x2F;code&gt;的时候会报类型校验的错误，
其他经过了上面的&lt;code&gt;this.assertUserIsLoggedIn();&lt;&#x2F;code&gt;后，
&lt;code&gt;this.loggedInUserId&lt;&#x2F;code&gt;已经不可能是&lt;code&gt;undefined&lt;&#x2F;code&gt;，那么我们怎么该怎么做才能通过类型校验呢？
有的同学可能说这个很容易呀，只要这样就可以了：&lt;code&gt;createPost(this.loggedInUserId!, title);&lt;&#x2F;code&gt;
但是这样是不完美的，因为加入上面的&lt;code&gt;this.assertUserIsLoggedIn();&lt;&#x2F;code&gt;在后期迭代中删掉了，
那么下面的方法仍旧不会报类型错误，这样就会出问题了。
最好的方式应该是去修改&lt;code&gt;assertUserIsLoggedIn&lt;&#x2F;code&gt;这个方法，
从而让下面的&lt;code&gt;this.loggedInUserId&lt;&#x2F;code&gt;变成非&lt;code&gt;underfined&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;_userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;_title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; do something
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SDK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public constructor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;userId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;assertUserIsLoggedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;();

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;createPost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
  }

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;assertUserIsLoggedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: asserts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;loggedInUserId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) {
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;throw new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;User is not logged in&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
    }
  }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;zhi-shi-dian&quot;&gt;知识点&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.fullstackbb.com&#x2F;typescript&#x2F;asserts-modifier-in-typescript&#x2F;&quot;&gt;asserts 修饰词&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>使用泛型限制参数</title>
		<published>2022-06-14T00:00:00+00:00</published>
		<updated>2022-06-14T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/generic-type-limit-parameters/" type="text/html"/>
		<id>https://alanlang.me/codes/type/generic-type-limit-parameters/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;GQhOwKZja75FlW3.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;首先我们定义一个 Event 对象&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=
  | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;CLICK&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
    }
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;INPUT&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;payload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;
      };
   };
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后有这么一个函数&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;payload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;?: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 具体方法的实现
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们预期这个函数应该是这样调用的：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;CLICK&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;INPUT&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, {
  value: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;123&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;由于这个类型定义的比较宽泛，所以导致这个方法可以随意调用：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; should error
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;lalalala&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;CLICK&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;aaa&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;INPUT&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;INPUT&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, {
  value: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;123&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;所以我们需要重新定义下这个函数的参数类型。&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;p&gt;我们可以通过 infer 来根据第一个参数来推断出第二个参数的类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;sendEvent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;type&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&amp;gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;payload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: infer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Tpaylad &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;payload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Tpaylad&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{};
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;zhi-shi-dian&quot;&gt;知识点&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jkchao.github.io&#x2F;typescript-book-chinese&#x2F;tips&#x2F;infer.html&quot;&gt;infer&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;docs&#x2F;handbook&#x2F;utility-types.html#extracttype-union&quot;&gt;Extract&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>使用字符串模板类型</title>
		<published>2022-06-11T00:00:00+00:00</published>
		<updated>2022-06-11T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/use-string-template-type/" type="text/html"/>
		<id>https://alanlang.me/codes/type/use-string-template-type/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;26&#x2F;1NjV8gG7nu95cLd.png&quot; alt=&quot;IGJ0hu.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;继续上一节我们的问题
还是这个对象&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	pear: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	banana: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们需要的类型是这样的：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= |
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pear&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pearPrice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;|
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;applePrice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;|
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;banama&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;bananaNumber&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;即每个对象有多了一个属性，该属性的key和已有的一个属性的名字有关。
那么这个时候我们该怎么处理呢？&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?#code&#x2F;KYDwDg9gTgLgBAYwgOwM7wGZQK4EsYDCE2yMqcAvHAN4CwAUHHGMAIZQBccArADQNNWYMABtgXAJz9GcAEatkC1lwDMDAL4MYATxZwAyrmQBzMQDEc+IiXhUAPnAE0W7LsmwBbWcCgBuZmxQAApQuAjicO5ePupwDk7UQqIRUd5+cEliIWEpnmmx8TLU8ooeypF5Pv4lSgBylZwV0VDqQA&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;p&gt;首先我们先把上一节的答案拿过来，我们在其基础上修改&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	pear: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	banana: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fruitCounts

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们只需要给 &lt;code&gt;SingleFruitCount&lt;&#x2F;code&gt; 里每个对象再多添加一个属性即可：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Record&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}Price`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;完整代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	pear: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	banana: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fruitCounts

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Record&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;`${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}Price`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&amp;gt;
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;&#x2F;&#x2F; 验证
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	applePrice: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;zhi-shi-dian&quot;&gt;知识点&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;docs&#x2F;handbook&#x2F;2&#x2F;template-literal-types.html&quot;&gt;字符串模板类型&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;docs&#x2F;handbook&#x2F;utility-types.html#recordkeys-type&quot;&gt;Record&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>从对象中派生联合类型</title>
		<published>2022-06-10T00:00:00+00:00</published>
		<updated>2022-06-10T00:00:00+00:00</updated>
		<link href="https://alanlang.me/codes/type/generate-union-type-from-object/" type="text/html"/>
		<id>https://alanlang.me/codes/type/generate-union-type-from-object/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;vip2.loli.io&#x2F;2023&#x2F;06&#x2F;25&#x2F;paL2d7wckNugIHh.png&quot; alt=&quot;IGJ0hu.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;假设我们有一个对象&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	pear: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	banana: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后需要定义一个类型，该类型为此对象所有属性的联合类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pear&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;banana&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;那么该怎么通过对象 &lt;code&gt;fruitCounts&lt;&#x2F;code&gt; 直接生成 &lt;code&gt;SingleFruitCount&lt;&#x2F;code&gt; 类型呢？&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;play?ssl=7&amp;amp;ssc=76&amp;amp;pln=7&amp;amp;pc=1#code&#x2F;KYDwDg9gTgLgBAYwgOwM7wGZQK4EsYDCE2yMqcAvHAN4CwAUHHGMAIZQBccArADQNNWYMABtgXAJz9GcAEatkC1lwDMDAL4MGMAJ4s4AZVzIA5mIBiOfERLwq1Fuy7JsAW1nAo6uAB8aQ0XE4F3dPbz9qeUVXZWC3Dy8gA&quot;&gt;在线试一试&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;relative py-3&quot;&gt;
  &lt;div class=&quot;absolute inset-0 flex items-center&quot; aria-hidden=&quot;true&quot;&gt;
    &lt;div class=&quot;w-full border-t border-gray-300&quot;&gt;&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;relative flex justify-center&quot;&gt;
    &lt;span class=&quot;bg-white px-2 text-sm text-gray-500  text-orange-600 &quot;&gt;剧透预警线&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;jie-da&quot;&gt;解答&lt;&#x2F;h2&gt;
&lt;p&gt;首先我们先拿到 &lt;code&gt;fruitCounts&lt;&#x2F;code&gt; 的类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fruitCounts
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果我们这样定义&lt;code&gt;SingleFruitCount&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{}
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其等同于：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pear&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{};  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{};  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;banana&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{};  
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我们继续修改 &lt;code&gt;SingleFruitCount&lt;&#x2F;code&gt; 定义&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;此时效果会变成：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pear&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{  
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pear&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;  
	};  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{  
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;apple&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;  
	};  
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;banana&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{  
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;banana&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;;  
	};  
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;那这个时候我们只需要把每个对象通过 &lt;code&gt;key&lt;&#x2F;code&gt; 取出来即可：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;完整代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	pear: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	apple: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;,
	banana: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;fruitCounts

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;SingleFruitCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
	[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
		[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a2a001;&quot;&gt;number
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}
}[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;keyof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c23f31;&quot;&gt;FruitCounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>GIT 技能手册</title>
		<published>2022-06-08T00:00:00+00:00</published>
		<updated>2022-06-08T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/git/" type="text/html"/>
		<id>https://alanlang.me/practical/git/</id>
		<content type="html">&lt;h2 id=&quot;ji-chu-she-zhi&quot;&gt;基础设置&lt;&#x2F;h2&gt;
&lt;p&gt;Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。
Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。
Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。&lt;&#x2F;p&gt;
&lt;p&gt;设置全局用户名和邮箱&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; user.name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;alan&amp;#39; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; user.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;langwdalan@gmail.com&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;当前项目设置用户名和邮箱&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; config user.name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;alan&amp;#39; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; config user.email &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;langwdalan@gmail.com&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;创建SSH Key&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ssh-keygen -t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; rsa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -C &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;langwdalan@gmail.com&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;ji-ben-cao-zuo&quot;&gt;基本操作&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; clone
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; add .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;提交信息&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; push
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;jin-jie-cao-zuo&quot;&gt;进阶操作&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;diff&quot;&gt;DIFF&lt;&#x2F;h3&gt;
&lt;p&gt;比较两个分支&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; diff branch1 branch2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; alan.diff
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比较两个分支(包括二进制文件)&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; diff branch1 branch2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --binary &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; alan.diff
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比较当前HEAD修改&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; diff HEAD &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; alan.diff
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;rebase&quot;&gt;rebase&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; rebase&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;4

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 68fdb81 第一次提交
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;squash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; b98e7be 第二次提交
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; a15c25a 第三次提交
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;fixup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 6810ed4 第四次提交
 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# Rebase 83d844c..6810ed4 onto 83d844c (4 command(s))
#
# Commands:
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用rebase进行分支合并&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; rebase &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;merge 的来源分支名&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;shi-yong-shang-yi-ge-commit&quot;&gt;使用上一个 commit&lt;&#x2F;h3&gt;
&lt;p&gt;添加修改：git add .
合并到上一次的提交并使用原来的 commit 信息：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --amend --no-edit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;合并到上一次的提交并修改 commit 信息&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --amend
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;xiu-gai-zui-hou-yi-ci-ti-jiao-commit-de-xin-xi&quot;&gt;修改最后一次提交 commit 的信息&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 修改最近提交的 commit 信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; git commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --amend --message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;modify message by daodaotest&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --author&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;jiangliheng &amp;lt;jiang_liheng@163.com&amp;gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 仅修改 message 信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;$ git commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --amend --message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;modify message by daodaotest&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;# 仅修改 author 信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;$ git commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --amend --author&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;jiangliheng &amp;lt;jiang_liheng@163.com&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;qiang-zhi-ti-jiao&quot;&gt;强制提交&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; push&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --force
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;push-an-empty-commit&quot;&gt;Push an Empty Commit&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --allow-empty -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;Empty commit&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;log&quot;&gt;log&lt;&#x2F;h3&gt;
&lt;p&gt;将日志输出到文件里&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; log &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; alan.txt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;简单显示 git 日志&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --pretty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;oneline
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;hui-tui-ben-di-xiu-gai&quot;&gt;回退本地修改&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; reset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --hard &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;需要回退到的版本号（只需输入前几位）&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;hard&lt;&#x2F;code&gt;和&lt;code&gt;soft&lt;&#x2F;code&gt;还有&lt;code&gt;mixed&lt;&#x2F;code&gt; 的区别可以看&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;3528245&#x2F;whats-the-difference-between-git-reset-mixed-soft-and-hard&quot;&gt;这里&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;qiang-zhi-jiang-ben-di-ban-ben-fu-gai-yao-yuan-duan&quot;&gt;强制将本地版本覆盖要远端&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; push origin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;分支名&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;--force
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;che-xiao-yuan-cheng-ban-ben-de-mou-yi-ci-ti-jiao&quot;&gt;撤销远程版本的某一次提交&lt;&#x2F;h3&gt;
&lt;p&gt;比如&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;A1–A2–B1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果想撤销A2的提交&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;git revert HEAD                     &#x2F;&#x2F;撤销最近一次提交
git revert HEAD~1                   &#x2F;&#x2F;撤销上上次的提交，注意：数字从0开始
git revert 0ffaacc                  &#x2F;&#x2F;撤销0ffaacc这次提交
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;git revert 命令意思是撤销某次提交。它会产生一个新的提交，虽然代码回退了，但是版本依然是向前的，所以，当你用revert回退之后，所有人pull之后，他们的代码也自动的回退了。 但是，要注意以下几点：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cong-yi-ge-fen-zhi-he-bing-te-ding-de-commitsdao-ling-yi-ge-fen-zhi&quot;&gt;从一个分支合并特定的commits到另一个分支&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;dan-ge-commit&quot;&gt;单个commit&lt;&#x2F;h4&gt;
&lt;p&gt;比如&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;dd2e86&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; - 946992&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -9143a9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; - a6fd86 - 5a6057 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;master&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]
           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;\
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;76cada&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; - 62ecb3 - b886a0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;feature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;比如，feature 分支上的commit 62ecb3 非常重要，它含有一个bug的修改，或其他人想访问的内容。无论什么原因，你现在只需要将62ecb3 合并到master，而不合并feature上的其他commits，所以我们用git cherry-pick命令来做：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; checkout master
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; cherry-pick 62ecb3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样就好啦。现在62ecb3 就被合并到master分支，并在master中添加了commit（作为一个新的commit）。 cherry-pick 和merge比较类似，如果git不能合并代码改动（比如遇到合并冲突），git需要你自己来解决冲突并手动添加commit。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;duo-ge-commit&quot;&gt;多个commit&lt;&#x2F;h4&gt;
&lt;p&gt;还以上例为例，假设你需要合并feature分支的commit 76cada ~62ecb3 到master分支。 首先需要基于feature创建一个新的分支，并指明新分支的最后一个commit：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; checkout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; newbranch 62ecb3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后，rebase这个新分支的commit到master（–ontomaster）。76cada^ 指明你想从哪个特定的commit开始。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; rebase&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --onto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; master 76cada^
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;得到的结果就是feature分支的commit 76cada ~62ecb3 都被合并到了master分支。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;clone-fork-and-pull-request&quot;&gt;Clone, Fork, and Pull Request&lt;&#x2F;h2&gt;
&lt;p&gt;全局配置完成后，就能正式进入开发和提交补丁的流程了。
不像大部分教程介绍的 fork, clone, and pull request 流程，实际上符合上游优先直觉的参与过程应该是 clone, fork, and pull request 才对。
第一步，当你看到一个有趣的项目，起了阅读代码和开发的念头，此时你并不知道自己是不是真的会提交一个补丁，所以做简单的做法是直接从上游地址克隆源代码。例如，要想克隆 Apache Pulsar 的源代码，可以执行以下命令：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; clone https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;pulsar.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;随后，你就可以打开项目源代码开始阅读，做一些变更并观察效果。
第二步，当你发现本地的变更值得推送回上游时，由于你没有权限直接 push commit 到上游仓库，你需要从上游仓库 fork 一份到自己的工作空间当中，从而进一步推送修改和提交补丁。同样以 Apache Pulsar 为例，&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;打开 http:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;pulsar 仓库页面。&lt;&#x2F;li&gt;
&lt;li&gt;点击页面右上方的 Fork 按钮。&lt;&#x2F;li&gt;
&lt;li&gt;选择正确的账号并确认。&lt;&#x2F;li&gt;
&lt;li&gt;成功后，应该可以在个人账号下看到 fork 出来的 pulsar 仓库。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;第三步，fork 动作只是发生在 GitHub 平台上，接下来还需要在本地 Git 仓库配置 remote 信息，注意一下 Git 操作的当前路径都是项目根目录。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; remote add dev https:&#x2F;&#x2F;github.com&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;your-user-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;project&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;还是以 Apache Pulsar 为例，将用户名和仓库名相应替换后运行上述命令，成功返回后查询当前 remote 配置信息：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; remote&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#OUTPUT:
#dev    https:&#x2F;&#x2F;github.com&#x2F;tisonkun&#x2F;pulsar.git (fetch)
#dev    https:&#x2F;&#x2F;github.com&#x2F;tisonkun&#x2F;pulsar.git (push)
#origin https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;pulsar.git (fetch)
#origin https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;pulsar.git (push)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接下来，就可以切出开发分支，commit 变更并提交补丁了。
在命令行界面完成 commit 动作并将改动分支推送到 fork 仓库上：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; checkout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; feature-branch
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; add .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -s -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;commit message&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; push&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; --set-upstream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; dev
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;打开上游仓库页面。如果你是刚推送的分支，GitHub 会有横幅提示，点击 Compare &amp;amp; pull request 从最近推送的对应分支创建一个 Pull Request 请求；否则，需要从 Pull requests 页面点击 New pull request 按钮，点击蓝色的 compare cross forks 字样，选择 HEAD 信息为 fork 仓库和对应的分支来创建。
相比于常见的 fork and clone 流程以及后续将 fork 分支作为 origin 而把上游称为 upstream 的做法，这里介绍的 clone and fork 流程有以下几点好处。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;第一，顺序自然。不是每个克隆的项目在一开始就都是为了提交补丁，这样的顺序不需要在一开始就创建一个 fork 仓库。&lt;&#x2F;li&gt;
&lt;li&gt;第二，默认分支自动拉取上游，无需额外的配置。大部分情况下，fork 仓库的默认分支都不会再更新。如果 origin 是 fork 仓库，要想拉取上游默认分支，要么需要修改仓库配置里的分支上游，要么就要在 fork 仓库页面上 Sync fork 在拉取，都需要额外的操作。&lt;&#x2F;li&gt;
&lt;li&gt;第三，推送分支的命令更简洁。如果 origin 是 fork 仓库，则 git push 时需要在 --set-upstream origin 后再加一个分支名。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gen-ju-commit-chai-fen-pr&quot;&gt;根据 commit 拆分 PR&lt;&#x2F;h2&gt;
&lt;p&gt;有没有遇到过 Code Review 时发现内容太多，想拆分 Commit 却没法下手？
我以前使用的方案是提交多个连续 PR，然后在 PR B 里面写清楚本 PR 依赖于 A PR，请先合并 A 再 Code Review。&lt;&#x2F;p&gt;
&lt;p&gt;有没有更好的方案？当然有：git rebase 自带一个 --onto 功能可以快速拆分 Commits，高效又可靠。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.sa.net&#x2F;2024&#x2F;03&#x2F;07&#x2F;zdEgVSPrQ4Mpf3Y.webp&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ROS 路由器入门指南</title>
		<published>2022-06-07T00:00:00+00:00</published>
		<updated>2022-06-07T00:00:00+00:00</updated>
		<link href="https://alanlang.me/practical/ros/" type="text/html"/>
		<id>https://alanlang.me/practical/ros/</id>
		<content type="html">&lt;h2 id=&quot;shi-yao-shi-routeros&quot;&gt;什么是 RouterOS&lt;&#x2F;h2&gt;
&lt;p&gt;RouterOS（下面简称 ROS），是一款基于 Linux 的路由器操作系统，相比于品牌路由器，它功能更强大，相比于 OpenWrt 系统，它更稳定耐用，高流量负载也不容易死机。ROS 的配置十分强大，且每次修改配置后无需重启即可生效，十分适合作为家里的主路由使用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shou-quan-qu-bie&quot;&gt;授权区别&lt;&#x2F;h2&gt;
&lt;p&gt;ROS 授权分 Level0-6 级别，主要是在一些线路数量进行限制，其实便宜的硬件产品，我们也跑不了那么多线路，毕竟性能有限，level 高也没有什么用途。而且我们卖到的硬件路由产品基本上都是 Level4 起步。以下是 License 的区别：&lt;&#x2F;p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;alan-picpack.oss-cn-hangzhou.aliyuncs.com&#x2F;uPic&#x2F;20220105&#x2F;wGNOda.jpg&quot; alt=&quot;wGNOda&quot;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-ben-pei-zhi&quot;&gt;基本配置&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hui-fu-chu-han-she-zhi&quot;&gt;恢复出厂设置&lt;&#x2F;h3&gt;
&lt;p&gt;新拿到的机器还是推荐初始化一下，具体操作是：
&lt;strong&gt;System -&amp;gt; Reset Configuration&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xiu-gai-wang-kou-ming-cheng&quot;&gt;修改网口名称&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 Interfaces，打开 Interfaces 设置面板，选中 Interface 标签，双击相应的网卡来修改名称
为了方便后续的操作，最好修改一下每个网口的名称。
具体方法就是将当前计算机连接的网线挨个插在路由器的 lan 口的，有数据连接的接口就是当前所插的 lan 口，最好根据网口的物理顺序来命名每个网口名称，这样方便以后区分。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-wang-qiao&quot;&gt;设置网桥&lt;&#x2F;h3&gt;
&lt;p&gt;为了让所有的 lan 口都在同一个网段，所以需要设置一个网桥&lt;&#x2F;p&gt;
&lt;h4 id=&quot;1-xin-jian-yi-ge-wang-qiao&quot;&gt;1. 新建一个网桥&lt;&#x2F;h4&gt;
&lt;p&gt;点击左侧目录的 Bridge，打开 Bridge 的设置面板，选中 Bridge 标签
点击 + 号弹出新建 Bridge 的表单：
General&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Name&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;bridge1（自己任意取）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;ARP&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;enabled&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2-ba-xu-yao-de-lan-kou-du-jia-ru-dao-wang-qiao-li&quot;&gt;2. 把需要的 lan 口都加入到网桥里&lt;&#x2F;h4&gt;
&lt;p&gt;点击 Bridge 设置面板下的 Ports 标签
点击 + 号弹出 New Bridge Port 设置窗口&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Interface&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;Lan0（要加入 Bridge 的网口名）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Bridge&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;bridge1（要加入的 Bridge 名称）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭
重复以上操作直到把所有需要加入网桥的 lan 口都添加进去。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-lu-you-qi-lankou-wang-qiao-de-ip-di-zhi&quot;&gt;设置路由器 lan口&#x2F;网桥 的 ip 地址&lt;&#x2F;h3&gt;
&lt;p&gt;用来设置路由器 lan 口的 ip 地址
点击左侧目录的 IP 选项，打开 Address List 设置面板，
点击 + 号打开 Address 新建表单&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Address&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;192.168.1.1&#x2F;24（自己设置 ip 和子网掩码）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Interfase&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;Bridge1（选择之前建的网桥）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;jian-li-pppoe-bo-hao&quot;&gt;建立 PPPOE 拨号&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 Interfaces 选项，打开 Interfaces 设置面板
点击 + 号，打开 Interface 设置面板
General&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Name&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;Pppoe-out1（自己设置）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Type&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;PPPoE Client&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Interfaces&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;etho-wan（选择 wan 口）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Dial Out&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;User&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;用来拨号的用户名&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Password&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;用来拨号的密码&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-di-zhi-wei-zhuang-ip-firewall&quot;&gt;设置地址伪装（IP-&amp;gt;firewall）&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 IP -&amp;gt; firewall 选项，打开 firewall 设置面板
选择 NAT 标签，点击 + 号，弹出 NAT Rule 配置面板
General&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Chain&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;srcnat&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Action&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Action&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;masquerade&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dns-she-zhi&quot;&gt;DNS 设置&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 IP -&amp;gt; DNS 选项，打开 DNS Settings 设置面板&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Servers&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;写入本机地址或 DNS 服务器地址&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Max UDP Packet Size&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;8192（最大 UDP 数据包大小）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Cache Size&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;20480（缓存大小，可以写大一点）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-dhcp-di-zhi-chi&quot;&gt;设置 DHCP 地址池&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 IP -&amp;gt; IP Pool 选项，打开 IP Pool 设置面板
点击 + 号 新建 IP Pool&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Name&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;dhcp_pool1（自己定）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Addresses&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;192.168.1.100-192.168.1.200（自己定）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Next Pool&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;none&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;h3 id=&quot;she-zhi-dhcp-server&quot;&gt;设置 DHCP server&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 IP -&amp;gt; DHCP Server 选项，打开 DHCP Server 设置面板
选中 DHCP 标签
点击 + 号 新建一条 DHCP Server&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Name&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;dhcp1（自己定）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Interface&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;bridge1（之前设置的网桥或 lan 口）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Address Poll&lt;&#x2F;td&gt;&lt;td&gt;选择框&lt;&#x2F;td&gt;&lt;td&gt;dhcp_pool1（之前新建的地址池）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;p&gt;
&lt;p&gt;选中 Networks 标签
点击 + 号 新建一条 DHCP Network&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;表单项&lt;&#x2F;th&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Address&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;192.168.1.0&#x2F;24（自己定）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Gateway&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;192.168.1.1（或是自己设置的网关地址）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;DNS Server&lt;&#x2F;td&gt;&lt;td&gt;输入框&lt;&#x2F;td&gt;&lt;td&gt;192.168.1.1（本机地址）&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;点击 Apply 生效，点击 OK 关闭&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;diao-zheng-lu-you-de-fang-wen-fang-shi&quot;&gt;调整路由的访问方式&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 IP -&amp;gt; services 选项，打开 IP Service List 设置面板
为了安全考虑，我们关掉除了 winbox 之外的所有连接方式，只有在需要的时候再打开。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuang-jian-zhang-hao&quot;&gt;创建账号&lt;&#x2F;h3&gt;
&lt;p&gt;点击左侧目录的 System -&amp;gt; Users 选项，打开 User List 设置面板
建议禁用掉默认的 admin 用户，新建一个新的用户&lt;&#x2F;p&gt;
&lt;h2 id=&quot;duan-kou-zhuan-fa&quot;&gt;端口转发&lt;&#x2F;h2&gt;
&lt;p&gt;如果家里有公网 IP 的话，就可以利用端口转发把公网的指定端口转发到内网指定设备的端口上，方便异地访问。&lt;&#x2F;p&gt;
&lt;p&gt;首先打开防火墙设置
IP -&amp;gt; Firewall
标签选择 nat，点击 + 号
在弹出来的界面标签选择 General，Chain 选项选择 dstnat
接着在上菜单栏选择 Action，然后在下面的 Action 选择 jump，在往下找到 Jump Targer 输入一个名称，这里大家随意，我填 port-nat，最后点击 OK。&lt;&#x2F;p&gt;
&lt;p&gt;接下来我们去建立一条脚本，点击 System-Scripts：
在上菜单栏点击 Scripts，然后点击加号，在弹出来的界面中，Name 输入一个名称，这个名称很重要，一定要记住，我建议新手朋友跟我一样就行，省的后面还要改脚本，我这里填入 dynamic_nat，在下面的代码框输入我给大家提供的脚本代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; addold
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; addnew
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; addnew &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;interface get [&#x2F;interface find name=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;pppoe-out1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; running]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ($&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;addnew&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;=true) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;{
	:set addold &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&#x2F;ip address get [&#x2F;ip address find dynamic=yes interface=&amp;quot;pppoe-out1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt; address]
	:set addold &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;:pick $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;addold&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt; 0 (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;:len $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;addold &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;] -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;3)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;	&#x2F;ip firewall nat set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&#x2F;ip firewall nat find comment=&amp;quot;dynamic_nat&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt; dst-address=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;addold
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;pppoe-out1 为 Interfaces 里你用来拨号的名称&lt;&#x2F;p&gt;
&lt;p&gt;紧接着我们需要让它定时启动，但是这次我们不用定时任务功能（scheduler），我们用 PPP 里的 Profiles 来执行，这样的好处就是，跟拨号捆绑在一起，只有重新拨号，IP 肯定会改变，IP 一改变，马上检索到变化并赋值给 nat，非常高效及时，大家跟着我操作。
回到 Ros 主界面，点击左菜单栏 PPP：在弹出的界面点击 Profiles，然后点加号，接着在 Name 输入名称，这里大家可以随意填写，我写的是 pppoe-clien-profile，但是可以跟我一样，在下面的 Change TCP MSS 勾选 yes，一定要勾选上，别忘了：
然后点击上菜单栏 Scripts，在下面输入代码：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;delay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 3s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:execute &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;dynamic_nat&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;加粗部份需要改成你刚才设置 Scripts 时的命名，如果大家一直跟我保持一致，就不需要改动了，直接复制进去就好；另外，这里解释一下这段代码，意思就是每当重新拨号，3 秒中后系统就会执行以 dynamic_nat 命名的 Scripts 脚本，总的来说，就是跟拨号捆绑在了一起，非常舒服，及时性很高哦。设置完点击 OK 即可。&lt;&#x2F;p&gt;
&lt;p&gt;我们一直在强调跟拨号捆绑，但是以上做的设置都是为捆绑做准备，那好，接下来我们把它们捆绑起来，点击左侧菜单栏，点击 Interfaces 进入界面后我们选择上菜单栏的 Interface，然后找到我们的拨号条目，不清楚如何拨号的新手朋友可以去看一下我篇二的内容，接着双击进入，在上菜单栏找到 Dial Out，接着在下面的 Profile 选项选择我们刚刚建立的 pppoe-clien-profile，然后其他选项不动，点击 OK。&lt;&#x2F;p&gt;
&lt;p&gt;好了，到这里我们的 jump 指令设置（实现回流），以及捆绑拨号（实现自动、高效且及时的检索变动 IP）已经完成了，接下来就是做端口转发啦！！！&lt;&#x2F;p&gt;
&lt;p&gt;我们后续所有的端口转发都在 nat 下设置，点击 IP-Firewall 点击 nat，再点击加号，在弹出来的页面点击 General，Chain 选择刚才我们设置 jump 时的命名，我之前命名为 port-nat，选择它，Protocl 选 tcp（常用类型 tcp 与 udp，视你转发的目的为准），Dst。Port 输入你外网自定义的端口号，你输入啥你访问的时候域名后就加啥。&lt;&#x2F;p&gt;
&lt;p&gt;接着我们点击上菜单栏 Action，在下面的 Action 选择 dst-nat，然后在下面 To Addresses 输入你将要转发项目的内网 IP，我的群晖 IP 是 10.10.10.10.，所以把它填进去，根据你的具体情况来填写，To Port 输入你要映射的内网端口，这里的端口可不能乱写，要根据你将要转发的项目规定的端口来填写，群晖 WEB 的端口是 5000，window 系统的远程访问端口是 3389 等等，这些都是项目规定好的端口，这里要注意哦，最后点击 OK。&lt;&#x2F;p&gt;
&lt;p&gt;这样端口转发就设置完毕了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;she-zhi-ddns&quot;&gt;设置 DDNS&lt;&#x2F;h2&gt;
&lt;p&gt;大部分用户即使有公网 IP，IP 地址也会动态改变，所以最好的方式应该是注册一个域名服务，每当 IP 地址变化后，把新的 IP 地址重新与域名绑定，这样我们无需记住 IP 地址，只需要记一个域名就可以了。
这边推荐我&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlanLang&#x2F;ros-ddns-serverless&quot;&gt;开源的基于 Vercel 的服务&lt;&#x2F;a&gt; 目前该服务支持阿里云和 cloudflare。&lt;&#x2F;p&gt;
&lt;p&gt;接下来我们去建立一条脚本，点击 System-Scripts&lt;&#x2F;p&gt;
&lt;p&gt;在上菜单栏点击 Scripts，然后点击加号，在弹出来的界面中，Name 输入一个名称，然后输入以下脚本&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; identifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#id
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#token
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;A&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#解析类型，默认为A
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;www&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#域名前缀
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local domain &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;demo.com&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#主机名
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local pppoe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;pppoe-out1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#7f8989;&quot;&gt;#确定你的路由器的网口名称
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:local ipaddr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;ip address get [&#x2F;ip address find interface=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pppoe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; address]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ipaddr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:pick $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 0 ([len $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;]
:global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; aliip
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ($&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; != $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;aliip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;{
    :local result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&#x2F;tool fetch url=&amp;quot;https:&#x2F;&#x2F;ros-ddns-serverless.vercel.app&#x2F;api&#x2F;aliyun?identifier=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;identifier&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;amp;secret=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;secret&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;amp;name=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;amp;type=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;amp;ip=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;amp;domain=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;domain&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot; as&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;value output=user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;;
    :set aliip $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;ipaddr
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后继续设置在每次在网络重新连接后，重新执行这个脚本即可。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zhi-jie-shi-yong-cloudflare-ti-gong-de-api&quot;&gt;直接使用 cloudflare 提供的 api&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; pppoe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;pppoe-out1&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ipaddr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;&#x2F;ip address get [&#x2F;ip address find interface=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;pppoe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; address]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ipaddr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;:pick $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; 0 ([len $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt; -3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;]
:global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; aliip
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;:if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; ($&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; != $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;aliip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;{
    :local result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&#x2F;tool fetch http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;method=put mode=https http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;field=X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;Auth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;Email:demo@gmail.com,X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;Auth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;Key:GLOBAL_KEY,content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;type:application&#x2F;json url=&amp;quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;ZONE_IDENTIFIER&#x2F;dns_records&#x2F;RECORD_IDENTIFIER&amp;quot; http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;data=&amp;quot;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;*.demo.net&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;ipaddr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#aeb52b;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}&amp;quot; as&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;value output=user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;;
    :set aliip $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#acb3c2;&quot;&gt;ipaddr
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;yu-openwrt-pang-lu-you-pei-he&quot;&gt;与 OpenWrt 旁路由配合&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wang-luo-tuo-bu-miao-shu&quot;&gt;网络拓扑描述&lt;&#x2F;h3&gt;
&lt;p&gt;RouteOS 作为主路由，负责稳定上网，IP 地址为 192.168.1.1&lt;&#x2F;p&gt;
&lt;p&gt;OpenWrt 作为旁路由负责给一些设备出国留学，IP 地址为 192.168.1.2&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wen-ti-xian-xiang&quot;&gt;问题现象&lt;&#x2F;h3&gt;
&lt;p&gt;主路由 DHCP 服务器，在通过 DHCP 分配 IP 地址的时候，需要指定网关为旁路由 192.168.1.2。&lt;&#x2F;p&gt;
&lt;p&gt;当 OpenWRT 故障时，下面各种终端的网关仍然指向软路由 192.168.1.2，而网关 192.168.1.2 实际不可达而无法上网。DHCP 地址一旦分配完毕，DHCP 服务器无法在租期内撤销已分配给终端的 IP 地址（DHCP 协议不支持撤销动作），所以除非下面的各终端手动重新申请或因 DHCP 租期到期等原因，重新发起 DHCP 请求，申请了新的 IP 地址，并且把网关指向了 192.168.1.1 才能上网，否则持续无法联网。&lt;&#x2F;p&gt;
&lt;p&gt;有几种解决方案，我觉得没有绝对的优劣之分，就看哪种适合自己：&lt;&#x2F;p&gt;
&lt;h4 id=&quot;jie-jue-fang-an-shuang-lu-you-zhi-jian-yun-xing-vrrp-xie-yi&quot;&gt;解决方案 - 双路由之间运行 VRRP 协议&lt;&#x2F;h4&gt;
&lt;p&gt;参考：https:&#x2F;&#x2F;www.right.com.cn&#x2F;forum&#x2F;thread-4044962-1-1.html&lt;&#x2F;p&gt;
&lt;p&gt;ROS 与 OpenWRT 起 VRRP 协议，通过 DHCP 指定下一跳为虚拟网关 192.168.1.3 实现可靠性备份。&lt;&#x2F;p&gt;
&lt;p&gt;OpenWRT VRRP 优先级高于 ROS 的优先级 100，所以 OpenWRT 的虚拟网关 192.168.1.2 活跃，能正常转发流量，可以出国留学等高级操作；&lt;&#x2F;p&gt;
&lt;p&gt;当 OpenWRT 故障时，ROS 自动升为主，虚拟网关 192.168.1.1 生效可以转发路由，能正常上网，但是没有高级特性了。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ros-vrrp-xie-yi-pei-zhi&quot;&gt;ROS VRRP 协议配置&lt;&#x2F;h4&gt;
&lt;p&gt;ROS 上配置比较简单，新建一个 VRRP 接口，配置好参数，然后给这个 VRRP 接口配置虚拟网关 IP 地址 192.168.1.3 即可。Interface 是指能发现 OpenWRT 的接口；VRID 一定要和 OpenWRT 保持一致，我们设置为 51；Priority 是决定主备的优先级，这里采用默认的一百作为备份；Interval 是 VRRP 报文检测间隔，默认 1.00s 即可。注意勾选抢占模式 Preemption Mode，如果不勾选这个选项，即使 OpenWRT 挂了，ROS 也不会升级为主。认证密码建议不用填写；版本号 Version 是 2。&lt;&#x2F;p&gt;
&lt;p&gt;ROS 上给这个 VRRP 配置 IP 地址，虚拟网关 192.168.1.3。如果此时 ROS 是主 VRRP，则地址正常；如果是备 VRRP，则地址是红色的。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;alan-picpack.oss-cn-hangzhou.aliyuncs.com&#x2F;20220115203508.png&quot; alt=&quot;https:&#x2F;&#x2F;alan-picpack.oss-cn-hangzhou.aliyuncs.com&#x2F;20220115203508.png&quot; title=&quot;https:&#x2F;&#x2F;alan-picpack.oss-cn-hangzhou.aliyuncs.com&#x2F;20220115203508.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;openwrt-vrrp-xie-yi-pei-zhi&quot;&gt;OpenWRT VRRP 协议配置&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;code&gt;OpenWRT&lt;&#x2F;code&gt;上需要安装&lt;code&gt;keepalived&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;vi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;global_defs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;router_id &lt;&#x2F;span&gt;&lt;span style=&quot;color:#da5d42;&quot;&gt;LVS_DEVEL
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;vrrp_instance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#da5d42;&quot;&gt;VI_1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#da5d42;&quot;&gt;MASTER
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;lan
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;virtual_router_id &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;51
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;priority &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;110
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;advert_int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#668f14;&quot;&gt;    virtual_ipaddress &lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;192&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;168&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b3933a;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; dev br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#72ab00;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt;lan
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置开机启动：&lt;code&gt;service keepalived enable&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;cai-keng&quot;&gt;踩坑&lt;&#x2F;h4&gt;
&lt;p&gt;搞了 5 个多小时，&lt;code&gt;openwrt&lt;&#x2F;code&gt;的&lt;code&gt;keepalived&lt;&#x2F;code&gt;始终 ping 不通，原来还要设置下这边：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;more&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; &#x2F;etc&#x2F;config&#x2F;keepalived
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#f5f5f5;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; globals &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;#39;globals&amp;#39;
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5597d6;&quot;&gt;option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#1f1f1f;&quot;&gt; alt_config_file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d07711;&quot;&gt;&amp;quot;&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;当&lt;code&gt;keepalived&lt;&#x2F;code&gt;启动时，系统会根据 &lt;code&gt;&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf&lt;&#x2F;code&gt; 来生成&lt;code&gt;&#x2F;tmp&#x2F;keepalived.conf&lt;&#x2F;code&gt; 但是要先在&lt;code&gt;&#x2F;etc&#x2F;config&#x2F;keepalived&lt;&#x2F;code&gt;里设置好路径&lt;&#x2F;p&gt;
&lt;p&gt;因为实际是以文件&lt;code&gt;&#x2F;tmp&#x2F;keepalived.conf&lt;&#x2F;code&gt;来起作用的&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
